{"version":3,"sources":["components/WordProcessor/autoHint/taskEngine/cHintNode.ts","components/WordProcessor/autoHint/taskEngine/rules.ts","components/WordProcessor/autoHint/taskEngine/index.ts","components/WordProcessor/autoHint/taskEngine/OpNode.ts","components/WordProcessor/autoHint/taskEngine/TaskNode.ts","components/WordProcessor/autoHint/getHintDeserialize.ts","components/WordProcessor/autoHint/insertHint.ts","components/WordProcessor/autoHint/reactiveUpdate.ts","components/Select/index.tsx","SBD/Match.ts","SBD/tokenizer.ts","components/WordProcessor/autoHint/utils.ts","components/WordProcessor/autoHint/useAutoHint.ts","components/HintElement/index.tsx","components/HintSelect/index.tsx","components/OpElement/index.tsx","components/WordProcessor/pluginOptions.ts","components/WordProcessor/Toolbars.tsx","components/WordProcessor/autoHint/index.ts","components/WordProcessor/withStyledPlaceHolders.ts","components/Chart/index.tsx","components/NewSubTable/index.tsx","components/Map/index.tsx","components/Panel/index.tsx","components/LineChart/index.tsx","components/BarChart/index.tsx","components/LineChart/dates.ts","data/index.ts","components/StateMap/index.tsx","components/TrainingIntroduction/instructions.ts","components/TrainingIntroduction/index.tsx","App.tsx","components/WordProcessor/autoHint/types.ts","reportWebVitals.ts","index.tsx","components/WordProcessor/operator/createLinkPlugin.ts","components/WordProcessor/operator/getLinkDeserialize.ts","components/WordProcessor/operator/types.ts","components/WordProcessor/operator/index.ts","components/WordProcessor/index.tsx"],"names":["isConstituHintNode","n","isHintNode","Object","keys","length","filterTask_hintNode","filterTask","cHintNode","node","lv","ret","hintNode","colIdx","dataType","task","TASK_TYPE","retrieve_value","subTask","filter","retrieveTask_comparisonTask","retrieveValueTask","comparisonTask","notDoneYet","comparison","op","filterOp_numOp_attrNode","filterOp","numOp","attrNode","value","toString","filterTask_rangeOp_distributeOp_attrNode","filterTaskNode","rangeOp","distributeOp","range","oData","attr","filterTask_distributeOp_rangeOp2_attrNode","filterTaskNode2","rangeOp2","items","console","debug","rowIdx","Infinity","item","itemIdx","stringSearch","search","datasets","datasetKey","flatMap","datasetId","dataTable","attrCandidates","data","map","idx","rowId","nodeType","query","deps","split","some","s","toLowerCase","startsWith","includes","valueCandidates","flatDataTableToCell","cell","reduce","o","d","find","h","push","buildTaskTree","tokens","editor","group","token","t","token_idx","getHintNode","undefined","log","findByIdx","OpNode","match","ExtremeMaxOp","text","tag","build","ExtremeMinOp","filterLessOp","FilterLessOp","filterMoreOp","FilterMoreOp","filterAllOp","FilterAllOp","filterLastOp","FilterLastOp","CompareOp","lemma","CompareDiffOp","ComputeSum","ComputeSumOp","ComputeAvg","ComputeAvgOp","Abs","AbsOp","rangeStart","RangeStartOp","rangeEnd","head_text","RangeEndOp","distributeDecrese","DistributeDecreseOp","distributeIncrease","DistributeIncreaseOp","addupOp","AddupNode","ConstNum","groupEnd","labels","equalToItem","phType","CompareRatioOp","childrenNodes","children","debugLog","cHintNodes","taskNodes","TaskNode","is","taskNode","opNodes","Op","c","Filter","extremeOp","ExtremeOp","computedOp","ComputedOp","FilterOp","extremeTask","Extreme","find_extremum","name","derived_value","attrCHintNode","valueCHintNode","Retrieve","retrieveTask","largerThanItem","lessThanItem","compareOp","AddupOp","Computed","computedTask","every","sortedFilterTasks","sort","a","b","Comparison","extremeNode","ConstNumOp","RangeOp","DistributeOp","subTasks","absOp","_op","filterOps","numOps","evaluateTaskNode","rawData","constituency","subResults","targetItems","type","valueHintNode","warn","r","id","others","subResult","virtualAttr","_item","value1","value2","valueSRes","itemSRes","theItem","k","region","newD","cloneDeep","diff","toFixed","valueFormat","add_up","newTaskEngine","candidates","taskTree","taskResult","concat","OP_TYPE","isOpNode","EXTREME","maxItem","minItem","FILTER","allItem","lastUnit","COMPUTED","sum","avg","ABS","COMPARE","isFinite","RANGE","DISTRIBUTE","getValue","filterValue","latterThan","_","interval","ADD_UP","chunk","forEach","CONST_NUMBER","keyword","key","regEx","RegExp","matchRes","matchIdx","index","opKey","isTaskNode","Addup","Range","getHintDeserialize","pluginKey","ELEMENT_HINT","options","getPlatePluginOptions","element","getNodeDeserializer","getNode","el","getAttribute","rules","className","getSlateClass","deserialize","insertHint","targetIdx","findIndex","replace","getPlatePluginType","insertNodes","Transforms","move","setHintNode","props","path","setNodes","at","insertText","voids","reactiveUpdate","oNode","oNodePath","originalData","nNode","returnNode","selectedIdx","opNodeEntry","Editor","previous","opNodePath","unsetNodes","unFlatWrongOp","italic","flatWrongOp","select","end","isGroup","obj","isOption","baseClassName","Dropdown","dropdownRef","createRef","onMouseDown","event","onFocus","state","isOpen","button","stopPropagation","preventDefault","disabled","setState","setValue","label","newState","selected","onChange","parseValue","prevProps","this","selectedOption","i","num","option","isSelected","optionClass","clsx","onClick","e","role","aria-selected","ops","tabIndex","renderOption","menu","aria-expanded","renderMenu","ref","aria-haspopup","Component","abbreviations","englishAbbreviations","setAbbreviations","abbr","isCapitalized","str","test","isNumber","isSentenceStarter","substring","isCommonAbbreviation","noSymbols","indexOf","isTimeAbbreviation","word","next","slice","isDottedAbbreviation","matches","isCustomAbbreviation","isNameAbbreviation","wordCount","words","charAt","dotPos","isNaN","isPhoneNr","isURL","isConcatenated","isBoundaryChar","newline_placeholder_t","trim","whiteSpaceCheck","getPreviousIndex","max","getNextIndex","arr","target","unit","NLPParser","sentence","nlpTokens","rawtext","fetch","method","headers","body","JSON","stringify","then","json","addHintData","p","hintPath","parent","parentNode","parentPath","nlpToken","l","addVisData","nlpLabels","bbox","ReactEditor","toDOMRange","anchor","offset","focus","getBoundingClientRect","toDOMNode","nlpLabel","x","y","getCurrentSentence","selection","cursor","start","parentPos","frags","nodes","Text","isText","sentences","user_options","f","newline_boundaries","preserve_whitespace","Match","frag","ii","current","L","endsWith","pop","temp","out","lastSentence","shift","tmpTokens","j","len","firstToken","paths","join","raw","splitSentences","pId","point","getDataPhrases","dataItems","entries","v","content","useAutoHintPlugin","onTab","onSelectHint","onFocusCurSentence","onOthers","onChangeDataPhrases","useCompare","useState","targetRange","setTargetRange","valueIndex","setValueIndex","tab","curTokens","setCurTokens","curIdx","curDataPhrases","setCurDataPhrases","useStoreEditorRef","useEventEditorId","useMemo","hintNodes","result","hintCandidates","useEffect","candidate","onKeyDownHint","useCallback","newIdx","newNlpTokens","newConstituency","isEqual","placeHolder","vTokens","setImmediate","curSentenceDPs","newCurDataPhrases","dataPhrases","isCollapsed","matchTheLastSpace","mentionRange","afterMatchText","isPointAtWordEnd","sentenceIdx","visLabels","inputValue","newCurSentenceIdx","trimEnd","newDataPhrases","diffAll","diffCur","plugin","pluginKeys","renderElement","getRenderElement","onKeyDown","inlineTypes","getPlatePluginTypes","voidTypes","getHintSelectProps","searchValue","lineStart","before","beforeRange","beforeText","string","input","mentionStart","distance","HintElement","attributes","nodeProps","onSelectOption","onMouseUp","onDoubleClick","useContext","DatatableContext","dropDown","setDropDown","useSelected","focused","useFocused","useSlate","findPath","document","addEventListener","removeEventListener","toolTip","data-slate-value","data-tooltip","data-tooltip-position","contentEditable","style","position","display","left","top","newOption","newData","isDepHintNode","nodePath","newAttr","HintSelect","onClickHint","useRef","rect","window","pageYOffset","pageXOffset","imgSrc","src","process","renderPreview","OpElement","opNode","alt","setAlt","onKeyUp","opType","createPlateOptions","resetBlockTypesCommonRule","types","ELEMENT_BLOCKQUOTE","ELEMENT_TODO_LI","defaultType","ELEMENT_PARAGRAPH","editableProps","hotkey","predicate","isBlockAboveEmpty","isSelectionAtBlockStart","ELEMENT_CODE_BLOCK","ELEMENT_TD","KEYS_HEADING","spellCheck","autoFocus","ToolbarButtonsBasicMarks","MARK_BOLD","icon","MARK_ITALIC","MARK_UNDERLINE","withStyledPlaceHolders","components","withPlaceholders","placeholder","hideOnBlur","height","margin","xAxis","g","call","d3","tickSizeOuter","tickValues","domain","tickFormat","selectAll","remove","yAxis","ticks","Chart","React","memo","allDataPhrases","groupBy","setGroupBy","hlRegionOptions","setHLRegionOptions","hlRegion","setHLRegion","svgRef","byWeek","highlightedRegions","regions","series","flatDataPhrases","uniq","reverse","padding","rangeRound","brush","extent","on","paddingOuter","eachBand","step","Math","floor","min","minX","maxX","onUpdateBrush","sourceEvent","gb","dates","defaultSelection","color","unknown","ToggleButtonGroup","size","exclusive","aria-label","ToggleButton","FormControl","minWidth","variant","InputLabel","Select","labelId","displayEmpty","MenuItem","viewBox","serie","fill","opacity","width","bandwidth","displayName","whyDidYouRender","SubDataTable","highlighted","filters","onEditCell","editingCell","setEditingCell","focusedHintNode","hintNOdes","isHintData","heads","isFocused","hintData","isHighlightedV","field","headerName","sortable","editable","virtual","rows","head","isHighlightedH","cleanEditing","cellElm","querySelector","cellId","innerText","onEnter","TableContainer","Table","TableHead","TableRow","TableCell","title","IconButton","blueGrey","onToggleSorter","direct","ArrowUpwardSharp","RemoveSharp","ArrowDownwardSharp","green","onAcceptCol","red","onRejectCol","TableBody","typeName","staggerDurationBy","staggerDelayBy","duration","easing","row","editing","onAcceptRow","onRejectRow","rename","Map","projection","countries","topojson","world","objects","outline","MapVis","cacheData","setDataType","totalData","setTotalData","focusedRegions","get","country","focuse","Array","from","values","new_cases","interpolator","fitWidth","bounds","x0","y0","x1","y1","dy","ceil","scale","precision","marginBottom","xlinkHref","URL","location","href","clipPath","features","properties","has","stroke","strokeLinejoin","Panel","forwardRef","insights","minH","onSave","onShowData","restOfProps","Paper","BookmarkSharp","minHeight","insight","clone","LineChart","hlStateOptions","setHLStateOptions","hlState","setHLState","highlightedStates","isFocus","Date","nice","line","defined","invert","overflow","mixBlendMode","transform","append","BarChart","money","days","fRows","unFocused","day","px","py","renderTooltip","reNameRegion","AMRO","AFRO","SEARO","EURO","EMRO","WPRO","fetchData","localStorage","getItem","res","setItem","results","Papa","parse","header","dynamicTyping","getByCountryWeek","byDate","date","d1","getTime","countryIn7Days","countryIn1Day","replaceAll","new_deaths","total_cases","total_deaths","oo","getLastWeekByCountry","week","restData","getLastWeekByRegion","byRegionWeek","getTrainingData","StateMap","cases","us","states","stateName","pointerEvents","instructionText","background","action","Task3","dangerouslySetInnerHTML","__html","Tips","TrainingInstruction","setStep","curStep","isArray","renderInstruction","MobileStepper","steps","activeStep","backButton","Button","KeyboardArrowLeft","nextButton","KeyboardArrowRight","taskLists","App","curTask","setCurTask","trainingData","use","trainingData2","reProductionData","rDates","reproductionData","reProductionMap","reproductionMap","round","setDatasets","setShowDataset","highlightedCell","setHighlightedCell","curSentenceHL","setCurSentenceHL","setAllDataPhrases","charts","setCharts","wpRef","byRegionDaily","byRegion","byCountryWeek","lastWeekByCountry","byDay","regionIn7Days","lastWeekByRegion","newDatasets","lastWeekByRegion2","setData","chartIdx","chart","newCharts","newChartData","sumItem","kIdx","targetItemIdx","exclude","newRow","newValue","keyValues","error","splice","fromEntries","Set","add","taskRets","onBrushBarChart","fromItem","toItem","newValues","payload","updateBarChartHintNode","onBrushLineChart","fromDate","toDate","updateLinechartHintNode","to","updateHintNode","onAcceptRows","newChart","onRemoveFilter","newFilters","filterIdx","updateData","oDataset","renderBarChart","renderBarChartTable","renderLineChart","renderChart","renderMap","renderInsights","RefreshSharp","marginTop","clearContent","isInDepHintNode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","createOPPlugin","ELEMENT_OP","url","nodeNames","withOverrides","withLink","isOperator","matcher","upsertLink","pluginType","newSelection","unwrapNodes","wrapNodes","wrapLink","upsertLinkIfValid","edges","rangeFromBlockStart","getText","preNode","rangeBeforeOptions","matchString","skipInvalid","afterMatch","multiPaths","beforeWordRange","getRangeBefore","preText","withRemoveEmptyNodes","defaultOptions","initialValuePlainText","createContext","WordProcessor","onClickIO","onDbClickIO","hintPlugin","pluginsMemo","createReactPlugin","createHistoryPlugin","createParagraphPlugin","createBoldPlugin","createItalicPlugin","createUnderlinePlugin","createNodeIdPlugin","createPlateComponents","withProps","StyledLeaf","styles","root","useStoreEditorValue","editorActions","usePlateActions","useImperativeHandle","payLoad","child","newItem","toISOString","Provider","plugins","initialValue"],"mappings":"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","file":"static/js/main.36dd69c3.chunk.js","sourcesContent":["import { ConstituencyNode } from \"../../../../@types\";\nimport { HintNode, isHintNode } from \"../types\";\n\nexport interface ConstituHintNode {\n    hintNode: HintNode\n    node: ConstituencyNode\n}\n\nexport const isConstituHintNode = (n: any): n is ConstituHintNode =>\n    typeof n === 'object'\n    && 'hintNode' in n\n    && isHintNode(n['hintNode'])\n    && 'node' in n\n    && Object.keys(n).length === 2\n","import { ConstituencyNode, DItem } from \"../../../../@types\";\nimport { ConstituHintNode } from \"./cHintNode\";\nimport { ConstNumNode, DistributeNode, FilterNode, RangeNode, RangeOp } from \"./OpNode\";\nimport { ComparisonTask, FilterTask, RetrieveTask, TASK_TYPE } from \"./TaskNode\";\n\nexport function filterTask_hintNode(filterTask: FilterTask, cHintNode: ConstituHintNode, node: ConstituencyNode, lv: number) {\n\n    let ret: any\n    if (cHintNode.hintNode.colIdx !== 0) {\n        if (cHintNode.hintNode.dataType === 'attr') {\n            // if not name attribute ---> a retrieve_value task\n            ret = { node, lv, task: TASK_TYPE.retrieve_value, hintNode: cHintNode.hintNode, subTask: [filterTask] }\n        } else if (cHintNode.hintNode.dataType === 'value') {\n            ret = { node, lv, task: TASK_TYPE.filter, hintNode: cHintNode.hintNode, subTask: [filterTask] }\n        }\n\n    } else {\n        // otherwise, equal to a filter task\n        ret = { ...filterTask, node, lv }\n    }\n\n    return ret\n}\n\nexport function retrieveTask_comparisonTask(retrieveValueTask: RetrieveTask, comparisonTask: ComparisonTask, node: ConstituencyNode, lv: number) {\n    if (comparisonTask?.notDoneYet) {\n        return {\n            node, lv, task: TASK_TYPE.comparison,\n            op: comparisonTask.op,\n            subTask: [retrieveValueTask, ...(comparisonTask.subTask || [])]\n        } as ComparisonTask\n    }\n}\n\nexport function filterOp_numOp_attrNode(filterOp: FilterNode, numOp: ConstNumNode, attrNode: ConstituHintNode, node: ConstituencyNode, lv: number) {\n\n    return {\n        node, lv, task: TASK_TYPE.filter, op: filterOp?.op,\n        hintNode: {\n            ...attrNode.hintNode,\n            dataType: 'value', value: numOp?.op().toString()\n        }\n    } as FilterTask\n}\n\nexport function filterTask_rangeOp_distributeOp_attrNode(filterTaskNode: FilterTask, rangeOp: RangeNode, distributeOp: DistributeNode, attrNode: ConstituHintNode, node: ConstituencyNode, lv: number) {\n\n    return {\n        node, lv, task: TASK_TYPE.range, op: rangeOp?.op,\n        subTask: [{\n            node, lv, task: TASK_TYPE.filter,\n            oData: 'byRegionDaily',\n            // dirty hack for table transfer\n            hintNode: { ...filterTaskNode.hintNode, attr: attrNode.hintNode.value, colIdx: -1 },\n            op: distributeOp?.op,\n        } as FilterTask]\n    }\n}\n\nexport function filterTask_distributeOp_rangeOp2_attrNode(distributeOp: DistributeNode, filterTaskNode2: FilterTask, rangeOp2: RangeNode ) {\n    distributeOp['op'] = (items: DItem[], value: any, attr: string) => {\n        console.debug('DistributeDecreseOpEnd', items, value, attr)\n        // filter the rows that decline in `attr`\n        const rowIdx = filterTaskNode2.hintNode?.rowIdx || Infinity\n        return items.filter((item, itemIdx) => itemIdx < rowIdx)\n    }\n    return [rangeOp2, distributeOp]\n}","import { SPEditor } from \"@udecode/plate\";\n\nimport { ConstituencyNode, DItem, NLPLabel } from \"../../../../@types\";\nimport { DepHintdata, HintData, InDepHintData, Others, TaskRet, TaskRetItem } from \"../types\";\nimport { debugLog, equalToItem, findByIdx, flatDataTableToCell, getHintNode, largerThanItem, lessThanItem } from \"../utils\";\n\nimport { ConstituHintNode, isConstituHintNode } from \"./cHintNode\";\nimport TaskNode, { ComparisonTask, FilterTask, ITaskNode, TASK_TYPE } from \"./TaskNode\";\nimport OpNode, { IOpNode } from \"./OpNode\";\nimport { filterOp_numOp_attrNode, filterTask_distributeOp_rangeOp2_attrNode, filterTask_hintNode, filterTask_rangeOp_distributeOp_attrNode, retrieveTask_comparisonTask } from \"./rules\";\nimport { cloneDeep } from \"lodash\";\n\nexport function stringSearch(search: string, datasets: Record<string, DItem[]>, datasetKey?: string): HintData[] {\n\n  const datasetKeys = datasetKey ? [datasetKey] : Object.keys(datasets)\n\n  // ['lastWeekByRegion', 'lastWeekByRegion2', 'lastWeekByCountry']\n\n  return datasetKeys\n    .flatMap((datasetId) => {\n      const dataTable = datasets[datasetId]\n\n      // 1. attributes\n      let attrCandidates: InDepHintData[] = Object.keys(dataTable[0].data)\n        .map((attr, idx) => ({\n          rowId: '_null',\n          attr,\n          colIdx: idx,\n          rowIdx: -1,\n          value: attr,\n          dataType: 'attr' as const,\n          nodeType: 'indep' as const,\n          query: search,\n          datasetId,\n          deps: null,\n        }))\n        .filter(({ attr }) => attr.split(/_| /).some(s => s.toLowerCase().startsWith(search.toLowerCase())))\n\n      if (['byRegionDaily', 'byRegionWeek', 'lastWeekByCountry', 'lastWeekByRegion2', 'lastWeekByRegion'].includes(datasetId) && \n      (search.startsWith('ne') || search.startsWith('to'))) {\n        attrCandidates = []\n      }\n\n      // 2. values\n      const valueCandidates: InDepHintData[] = flatDataTableToCell(dataTable)\n        .map(cell => ({\n          ...cell,\n          dataType: 'value' as const,\n          nodeType: 'indep' as const,\n          query: search,\n          datasetId,\n          deps: null\n        }))\n        .filter(({ value }) => value.split(/_| /).some(s => s.toLowerCase().startsWith(search.toLowerCase()))\n          // value.toLowerCase().startsWith(search.toLowerCase())\n        )\n        // should group the same values together\n        .reduce((o, d) => {\n          if (!o.find(h => h.attr === d.attr && h.value === d.value)) {\n            o.push(d)\n          }\n          return o\n        }, [] as InDepHintData[])\n      return [...attrCandidates, ...valueCandidates]\n    })\n}\n\nexport function buildTaskTree(node: ConstituencyNode, lv: number = 0,\n  tokens: NLPLabel[], editor: SPEditor): ITaskNode | ConstituHintNode | IOpNode |\n  Array<ITaskNode | ConstituHintNode | IOpNode> {\n  console.group(`buildTaskTree lv_${lv}`)\n\n  // add dataType if it is a token\n  const token = tokens.find(t => t.token_idx === node?.token_idx)\n  // console.log('%c token', 'background: #222; color: #000080', token)\n  const hintNode = token ? getHintNode(token, editor) : undefined\n\n  /**\n   * if a leaf operator node\n   * */\n  console.log('node.token_idx', node.token_idx, 'hintNode', hintNode)\n  if (typeof node.token_idx === 'number' && !hintNode) {\n    const n = findByIdx(node.token_idx, tokens)\n    console.log('node token', n)\n    let ret: any\n    // find extreme\n    if (OpNode.match.ExtremeMaxOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.ExtremeMaxOp()\n    } else if (OpNode.match.ExtremeMinOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.ExtremeMinOp()\n    }\n    // find comparison filter\n    else if (OpNode.match.filterLessOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.FilterLessOp()\n    } else if (OpNode.match.filterMoreOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.FilterMoreOp()\n    } else if (OpNode.match.filterAllOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.FilterAllOp()\n    } else if (OpNode.match.filterLastOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.FilterLastOp('byRegionWeek')\n    }\n    // compare\n    else if (OpNode.match.CompareOp(n?.lemma.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.CompareDiffOp()\n    }\n    // find computed value\n    else if (OpNode.match.ComputeSum(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.ComputeSumOp()\n    } else if (OpNode.match.ComputeAvg(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.ComputeAvgOp()\n    }\n    // find abs\n    else if (OpNode.match.Abs(n?.lemma.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.AbsOp()\n    }\n    // find range \n    else if (OpNode.match.rangeStart(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.RangeStartOp()\n    } else if (OpNode.match.rangeEnd(n?.text.toLowerCase(), n?.tag, n?.head_text).length !== 0) {\n      ret = OpNode.build.RangeEndOp()\n    }\n    // distribute description\n    else if (OpNode.match.distributeDecrese(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.DistributeDecreseOp()\n    } else if (OpNode.match.distributeIncrease(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.DistributeIncreaseOp()\n    }\n    // addup\n    else if (OpNode.match.addupOp(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.AddupNode(n?.lemma!, 'byRegionWeek')\n    }\n    // find const num\n    else if (OpNode.match.ConstNum(n?.text.toLowerCase(), n?.tag).length !== 0) {\n      ret = OpNode.build.ConstNum(n!.text)\n    }\n    if (ret) {\n      console.groupEnd()\n      return ret\n    }\n  }\n\n  /**\n   * if a leaf hintNode, return TaskNode or HintNode\n   * ignore placeholder here\n   */\n  if (hintNode && hintNode.nodeType !== 'placeholder') {\n    console.groupEnd()\n    return node.labels.includes('NP') && hintNode.dataType === 'value'\n      ? {\n        node, lv, hintNode,\n        task: TASK_TYPE.filter,\n        op: equalToItem,\n      } as FilterTask\n      : { hintNode, node }\n  } else if (hintNode && hintNode.nodeType === 'placeholder' && hintNode.phType === 'RATIO') {\n    // return a compareOP\n    console.groupEnd()\n    return OpNode.build.CompareRatioOp()\n  }\n\n  // if a middle node, check its children\n  const childrenNodes = node.children.flatMap(n => buildTaskTree(n, lv + 1, tokens, editor))\n  debugLog('middleNode', lv, node, 'childrenHintNodeOrNP', childrenNodes)\n\n  // focus on NP node\n  let ret: any\n  // different combination leads to different resutls\n  if ((node.labels.includes('NP') || node.labels.includes('VP') || node.labels.includes('S') || node.labels.includes('PP') || node.labels.includes('FRAG') || node.labels.includes('SINV')) && childrenNodes.length !== 0) {\n    const cHintNodes = childrenNodes.filter(isConstituHintNode)\n    const taskNodes = childrenNodes.filter(TaskNode.is.taskNode)\n    const opNodes = childrenNodes.filter(OpNode.is.Op)\n\n    switch (childrenNodes.length) {\n      case 1:\n        if (cHintNodes.length === 1) {\n          const cHintNode = cHintNodes[0]\n          if (cHintNode.hintNode.dataType === 'value') {\n            ret = { node, lv, hintNode: cHintNode.hintNode, task: TASK_TYPE.filter, op: equalToItem }\n          } else if (cHintNode.hintNode.dataType === 'attr') {\n            ret = cHintNode\n          }\n        } else if (opNodes.length === 1) {\n          ret = opNodes[0] as IOpNode\n        } else if (taskNodes.length === 1) {\n          if (node.children.some(c => c.text === 'DIFF_ATTR') && taskNodes.some(TaskNode.is.Filter)) {\n            // dirty hack\n            const filterTask = taskNodes.find(TaskNode.is.Filter)!\n            ret = [{ hintNode: filterTask.hintNode, node: filterTask.node }, OpNode.build.AbsOp()]\n          } else {\n            ret = { ...taskNodes[0], node, lv }\n          }\n        }\n        break\n      case 2:\n        if (cHintNodes.length === 1) {\n          const cHintNode = cHintNodes[0]\n\n          const extremeOp = opNodes.find(OpNode.is.ExtremeOp)\n          const computedOp = opNodes.find(OpNode.is.ComputedOp)\n          const filterOp = opNodes.find(OpNode.is.FilterOp)\n\n          const filterTask = taskNodes.find(TaskNode.is.Filter)\n          const extremeTask = taskNodes.find(TaskNode.is.Extreme)\n\n          if (extremeOp) {\n            // 1 extremeOp + hintNode\n            ret = { node, lv, task: TASK_TYPE.find_extremum, hintNode: cHintNode.hintNode, op: extremeOp.op, name: extremeOp.name, }\n          } else if (computedOp) {\n            // 1 computeOp + hintNode\n            ret = { node, lv, task: TASK_TYPE.derived_value, hintNode: cHintNode.hintNode, op: computedOp.op }\n          } else if (filterOp) {\n            ret = { node, lv, task: TASK_TYPE.filter, hintNode: cHintNode.hintNode, op: filterOp.op }\n          }\n          else if (filterTask) {\n            ret = filterTask_hintNode(filterTask, cHintNode, node, lv)\n          } else if (extremeTask) {\n            ret = { node, lv, task: TASK_TYPE.retrieve_value, hintNode: cHintNode.hintNode, subTask: taskNodes }\n          }\n        } else if (cHintNodes.length === 2) {\n          if (cHintNodes.some(h => h.hintNode.dataType === 'value')\n            && cHintNodes.some(h => h.hintNode.dataType === 'attr')) {\n            // if 1 value hintNode + 1 attr hintNode\n            const attrCHintNode = cHintNodes.find(h => h.hintNode.dataType === 'attr')!\n            const valueCHintNode = cHintNodes.find(h => h.hintNode.dataType === 'value')!\n            // item attr\n            if (attrCHintNode.hintNode.colIdx === 0) {\n              ret = valueCHintNode\n            } else {\n              // should construct 2 subtasks\n              ret = {\n                node, lv, task: TASK_TYPE.retrieve_value, hintNode: attrCHintNode.hintNode,\n                subTask: [{\n                  node: valueCHintNode.node, lv: lv + 1, hintNode: valueCHintNode.hintNode, task: TASK_TYPE.filter, op: equalToItem\n                }]\n              }\n            }\n          }\n        } else if (opNodes.length === 1) {\n          if (opNodes.some(OpNode.is.FilterOp) && taskNodes.some(TaskNode.is.Retrieve)) {\n            const filterOp = opNodes.find(OpNode.is.FilterOp)!\n            const retrieveTask = childrenNodes.find(TaskNode.is.Retrieve)!\n            // dirty hack\n            const op = filterOp.op.name === 'lessThanItem' ? largerThanItem : lessThanItem\n            ret = {\n              node, lv, task: TASK_TYPE.filter, op, subTask: [retrieveTask]\n            } as FilterTask\n          } else if (opNodes.some(OpNode.is.ComputedOp) && taskNodes.some(TaskNode.is.Retrieve)) {\n            const computedOp = opNodes.find(OpNode.is.ComputedOp)!\n            const retrieveTask = childrenNodes.find(TaskNode.is.Retrieve)!\n            ret = {\n              node, lv, task: TASK_TYPE.derived_value, op: computedOp.op, hintNode: retrieveTask.hintNode, subTask: [retrieveTask]\n            }\n          } else if (opNodes.some(OpNode.is.CompareOp) && taskNodes.some(TaskNode.is.Filter)) {\n            const compareOp = opNodes.find(OpNode.is.CompareOp)\n            const filterTask = childrenNodes.find(TaskNode.is.Filter)\n            ret = {\n              node, lv, task: TASK_TYPE.comparison, op: compareOp?.op, notDoneYet: true, subTask: [filterTask]\n            } as ComparisonTask\n          } else if (opNodes.some(OpNode.is.AddupOp) && taskNodes.some(TaskNode.is.Computed)) {\n            const computedTask = childrenNodes.find(TaskNode.is.Computed)!\n            ret = computedTask\n          }\n        } else if (opNodes.some(OpNode.is.FilterOp) && opNodes.some(OpNode.is.AddupOp)) {\n          // eg. last week, dirty hack\n          const filterOp = opNodes.find(OpNode.is.FilterOp)\n          const addupOp = opNodes.find(OpNode.is.AddupOp)!\n          // should construct to ta filte task\n          ret = {\n            node, lv, task: TASK_TYPE.filter,\n            op: filterOp?.op,\n            oData: 'byRegionWeek',\n            hintNode: {\n              attr: 'rowIdx',\n              dataType: 'value',\n              value: '1'\n            },\n          } as FilterTask\n        } else if (taskNodes.length === 2) {\n          if (taskNodes.some(TaskNode.is.Filter) && taskNodes.some(TaskNode.is.Computed)) {\n            const filterTask = taskNodes.find(TaskNode.is.Filter)!\n            const computedTask = taskNodes.find(TaskNode.is.Computed)!\n            // should merge into a computed task\n            ret = {\n              node, lv, task: TASK_TYPE.derived_value, hintNode: computedTask?.hintNode!, op: computedTask.op,\n              subTask: [filterTask]\n            }\n          } else if (taskNodes.some(TaskNode.is.Filter) && taskNodes.some(TaskNode.is.Extreme)) {\n            const filterTask = taskNodes.find(TaskNode.is.Filter)!\n            const extremeTask = taskNodes.find(TaskNode.is.Extreme)!\n            ret = {\n              node, lv, task: TASK_TYPE.find_extremum, hintNode: extremeTask.hintNode, op: extremeTask.op, name: extremeTask.name,\n              subTask: [filterTask]\n            }\n          } else if (taskNodes.every(TaskNode.is.Filter)) {\n            // two filter task in sequence\n            const sortedFilterTasks = taskNodes.sort((a, b) => a.lv - b.lv)\n            ret = {\n              ...sortedFilterTasks[0],\n              node, lv,\n              subTask: [sortedFilterTasks[1]]\n            }\n          } else if (taskNodes.some(TaskNode.is.Retrieve) && taskNodes.some(TaskNode.is.Comparison)) {\n            // dirty hack\n            const retrieveValueTask = taskNodes.find(TaskNode.is.Retrieve)!\n            const comparisonTask = taskNodes.find(TaskNode.is.Comparison)!\n            ret = retrieveTask_comparisonTask(retrieveValueTask, comparisonTask, node, lv)\n          }\n        }\n        break\n      case 3:\n        if (opNodes.length === 1 && taskNodes.some(TaskNode.is.Filter) && cHintNodes.length === 1) {\n          const cHintNode = cHintNodes[0]\n          const filterTask = taskNodes.find(TaskNode.is.Filter)!\n\n          if (opNodes.some(OpNode.is.ExtremeOp)) {\n            // if extremeNode + 1 taskNode + 1hintNode, return a find_extreme task\n            const extremeNode = opNodes.find(OpNode.is.ExtremeOp)!\n            ret = {\n              node, lv,\n              task: TASK_TYPE.find_extremum, hintNode: cHintNode.hintNode,\n              op: extremeNode.op, name: extremeNode.name,\n              subTask: taskNodes\n            }\n          } else if (opNodes.some(OpNode.is.ComputedOp)) {\n            ret = {\n              node, lv,\n              task: TASK_TYPE.derived_value, hintNode: cHintNode.hintNode,\n              op: opNodes[0].op,\n              subTask: taskNodes\n            }\n          } else if (opNodes.some(OpNode.is.AddupOp)) {\n            ret = filterTask_hintNode(filterTask, cHintNode, node, lv)\n          }\n        } else if (opNodes.some(OpNode.is.FilterOp) && opNodes.some(OpNode.is.ConstNumOp) && cHintNodes.some(h => h.hintNode.dataType === 'attr')) {\n          // should construct a filterTask\n          const filterOp = opNodes.find(OpNode.is.FilterOp)!\n          const numOp = opNodes.find(OpNode.is.ConstNumOp)!\n          const attrNode = cHintNodes.find(h => h.hintNode.dataType === 'attr')!\n          ret = filterOp_numOp_attrNode(filterOp, numOp, attrNode, node, lv)\n        } else if (opNodes.some(OpNode.is.FilterOp) && opNodes.some(OpNode.is.ConstNumOp) && taskNodes.some(TaskNode.is.Filter)) {\n          // 1 compOp + 1 numOp + 1 filter task\n          // should construct a filterTask and return two filterTask\n          const filterOp = opNodes.find(OpNode.is.FilterOp)!\n          const filterTaskNode = taskNodes.find(TaskNode.is.Filter)!\n          const numOp = opNodes.find(OpNode.is.ConstNumOp)!\n          ret = {\n            node, lv, task: TASK_TYPE.filter, op: filterOp.op,\n            hintNode: {\n              // just assume that the subtask has a hintNode, which can be a bug, since the subtask can return items, and value\n              ...filterTaskNode.hintNode,\n              dataType: 'value', value: numOp?.op().toString()\n            },\n            subTask: [filterTaskNode]\n          }\n        } else if (opNodes.some(OpNode.is.RangeOp) && opNodes.some(OpNode.is.DistributeOp) && taskNodes.some(TaskNode.is.Filter)) {\n          // dirty hack\n          // Europe reports a decline in weekly cases from TTOKEN to TTOKEN.\n          const filterTaskNode = taskNodes.find(TaskNode.is.Filter)!\n          const rangeOp = opNodes.find(OpNode.is.RangeOp)\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)\n          console.log('super dirty hack', filterTaskNode)\n          ret = {\n            node, lv, task: TASK_TYPE.range, op: rangeOp?.op,\n            subTask: [{\n              node, lv, task: TASK_TYPE.filter,\n              // should add a filter here\n              oData: 'byRegionWeek',\n              // super dirty hack\n              hintNode: { ...filterTaskNode.hintNode, attr: filterTaskNode.hintNode?.value, colIdx: -1 },\n              op: distributeOp?.op,\n            }]\n          }\n        } else if (cHintNodes.length === 2 && taskNodes.some(TaskNode.is.Filter)) {\n          const attrCHintNode = cHintNodes.find(h => h.hintNode.dataType === 'attr' && h.hintNode.colIdx !== 0)!\n          ret = {\n            node, lv, task: TASK_TYPE.retrieve_value,\n            hintNode: attrCHintNode,\n            subTasks: taskNodes\n          }\n        } else if (taskNodes.some(TaskNode.is.Retrieve) && taskNodes.some(TaskNode.is.Comparison) && opNodes.some(OpNode.is.AbsOp)) {\n          const retrieveValueTask = taskNodes.find(TaskNode.is.Retrieve)!\n          const comparisonTask = taskNodes.find(TaskNode.is.Comparison)!\n          ret = retrieveTask_comparisonTask(retrieveValueTask, comparisonTask, node, lv)\n          const absOp = opNodes.find(OpNode.is.AbsOp)\n          if (ret) {\n            const _op = ret.op\n            ret.op = (...args) => absOp?.op(_op(...args))\n          }\n        } else if (taskNodes.some(TaskNode.is.Filter) && taskNodes.some(TaskNode.is.Comparison) && cHintNodes[0].hintNode.dataType === 'attr') {\n          const filterTaskNode = taskNodes.find(TaskNode.is.Filter)!\n          const comparisonTask = taskNodes.find(TaskNode.is.Comparison)!\n          const attrNode = cHintNodes[0].hintNode\n          ret = {\n            node, lv, task: TASK_TYPE.comparison,\n            op: comparisonTask.op,\n            subTask: [filterTask_hintNode(filterTaskNode, cHintNodes[0], node, lv), ...(comparisonTask.subTask || [])]\n          }\n\n        } else if (opNodes.some(OpNode.is.AddupOp) && opNodes.some(OpNode.is.RangeOp) && opNodes.some(OpNode.is.DistributeOp)) {\n          // dirty hack\n          const addupOp = opNodes.find(OpNode.is.AddupOp)\n          const rangeOp = opNodes.find(OpNode.is.RangeOp)\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)\n          ret = [rangeOp, distributeOp]\n        } else if (cHintNodes.length === 1 && opNodes.some(OpNode.is.ComputedOp) && opNodes.some(OpNode.is.AddupOp)) {\n          const cHintNode = cHintNodes[0]\n          const computedOp = opNodes.find(OpNode.is.ComputedOp)!\n          ret = { node, lv, task: TASK_TYPE.derived_value, hintNode: cHintNode.hintNode, op: computedOp.op }\n        } else if (taskNodes.some(TaskNode.is.Retrieve) && taskNodes.some(TaskNode.is.Filter) && opNodes.some(OpNode.is.CompareOp)) {\n          const retrieveTask = taskNodes.find(TaskNode.is.Retrieve)\n          const filterTask = taskNodes.find(TaskNode.is.Filter)\n          const compareOp = opNodes.find(OpNode.is.CompareOp)\n          console.log('a bit wried')\n          // ret = {\n          //   node, lv, task: TASK_TYPE.comparison,\n          //   op: compareOp.op,\n          //   subTask: [retrieveTask, ...(comparisonTask.subTask || [])]\n          // }\n        } else if (opNodes.some(OpNode.is.RangeOp) && opNodes.some(OpNode.is.DistributeOp) && cHintNodes.some(h => h.hintNode.dataType === 'attr')) {\n          console.log('========!!!!!!!!!!!!=====')\n          const rangeOp = opNodes.find(OpNode.is.RangeOp)!\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)!\n          const attrNode = cHintNodes[0]\n          // dirty hack\n          ret = {\n            node, lv, task: TASK_TYPE.range, op: rangeOp?.op,\n            subTask: [{\n              node, lv, task: TASK_TYPE.filter,\n              oData: attrNode.hintNode.datasetId,\n              // should add a filter here\n              hintNode: { ...attrNode.hintNode, dataType: 'value', value: '_all' },\n              op: distributeOp?.op,\n            } as FilterTask]\n          }\n        }\n        break\n      case 4:\n        if (taskNodes.some(TaskNode.is.Filter) && taskNodes.some(TaskNode.is.Comparison) && opNodes.some(OpNode.is.AbsOp) && cHintNodes.length === 1) {\n          const cHintNode = cHintNodes[0]\n          const filterTask = taskNodes.find(TaskNode.is.Filter)!\n          const retrieveValueTask = filterTask_hintNode(filterTask, cHintNode, node, lv)\n          const comparisonTask = taskNodes.find(TaskNode.is.Comparison)!\n          ret = retrieveTask_comparisonTask(retrieveValueTask, comparisonTask, node, lv)\n          const absOp = opNodes.find(OpNode.is.AbsOp)\n          if (ret) {\n            const _op = ret.op\n            ret.op = (...args) => absOp?.op(_op(...args))\n          }\n        } else if (opNodes.some(OpNode.is.RangeOp) && opNodes.some(OpNode.is.DistributeOp) && taskNodes.some(TaskNode.is.Filter) && cHintNodes.some(h => h.hintNode.dataType === 'attr')) {\n          const filterTaskNode = taskNodes.find(TaskNode.is.Filter)!\n          const rangeOp = opNodes.find(OpNode.is.RangeOp)!\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)!\n          const attrNode = cHintNodes[0]\n          ret = filterTask_rangeOp_distributeOp_attrNode(filterTaskNode, rangeOp, distributeOp, attrNode, node, lv)\n        }\n        break\n      case 5:\n        if (opNodes.filter(OpNode.is.FilterOp).length === 2 && opNodes.filter(OpNode.is.ConstNumOp).length === 2 && cHintNodes.some(h => h.hintNode.dataType === 'attr')) {\n          // should construct 2 filterTask\n          const filterOps = opNodes.filter(OpNode.is.FilterOp)!\n          const numOps = opNodes.filter(OpNode.is.ConstNumOp)!\n          const attrNode = cHintNodes.find(h => h.hintNode.dataType === 'attr')!\n          const task = (idx: number) => filterOp_numOp_attrNode(filterOps[idx], numOps[idx], attrNode, node, lv)\n\n          ret = [task(0), task(1)] as FilterTask[]\n        } else if (opNodes.some(OpNode.is.RangeOp) && opNodes.some(OpNode.is.DistributeOp) && taskNodes.some(TaskNode.is.Filter) && opNodes.some(OpNode.is.AddupOp) && cHintNodes.some(h => h.hintNode.dataType === 'attr')) {\n          const filterTaskNode = taskNodes.find(TaskNode.is.Filter)!\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)!\n          const addupOp = opNodes.find(OpNode.is.AddupOp)\n          const rangeOp = opNodes.find(OpNode.is.RangeOp)!\n          const attrNode = cHintNodes[0]!\n          ret = filterTask_rangeOp_distributeOp_attrNode(filterTaskNode, rangeOp, distributeOp, attrNode, node, lv)\n          ret.subTask[0].oData = 'byRegionWeek'\n        } else if (opNodes.length === 3 && taskNodes.length === 1 && cHintNodes.length === 1) {\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)!\n          const filterTaskNode2 = taskNodes.find(TaskNode.is.Filter)!\n          const [rangeOp1, rangeOp2] = opNodes.filter(OpNode.is.RangeOp)\n          const attrNode = cHintNodes[0].hintNode\n          // super dirty hack for `The money increases from XX to XX`\n          if (attrNode.attr === 'money') {\n            ret = {\n              node, lv, task: TASK_TYPE.range, op: rangeOp2?.op,\n              subTask: [{\n                node, lv, task: TASK_TYPE.filter,\n                oData: attrNode.datasetId,\n                // should add a filter here\n                hintNode: { ...attrNode.hintNode, dataType: 'value', value: '_all' },\n                op: (items: DItem[], value: any, attr: string) => {\n                  console.debug('DistributeIncreaseOpEnd', items, value, attr)\n                  // filter the rows that decline in `attr`\n                  const rowIdx = filterTaskNode2.hintNode?.rowIdx || Infinity\n                  return items.filter((item, itemIdx) => itemIdx > rowIdx)\n                }\n              } as FilterTask]\n            }\n          } else if (attrNode.datasetId === 'reProductionData') {\n            ret = {\n              node, lv, task: TASK_TYPE.range, op: rangeOp2?.op,\n              subTask: [{\n                node, lv, task: TASK_TYPE.filter,\n                oData: attrNode.datasetId,\n                // should add a filter here\n                hintNode: { ...attrNode.hintNode, dataType: 'value', value: '_all' },\n                op: (items: DItem[], value: any, attr: string) => {\n                  console.debug('DistributeIncreaseOpEnd', items, value, attr)\n                  // filter the rows that decline in `attr`\n                  const rowIdx = filterTaskNode2.hintNode?.rowIdx || Infinity\n\n                  return items.filter((item, itemIdx) => itemIdx < rowIdx)\n                }\n              } as FilterTask]\n            }\n          } else {\n            ret = filterTask_distributeOp_rangeOp2_attrNode(distributeOp, filterTaskNode2, rangeOp2)\n          }\n        }\n        break\n      case 6:\n        if (opNodes.length === 4 && taskNodes.length === 1 && cHintNodes.length === 1) {\n          const addupOp = opNodes.find(OpNode.is.AddupOp)\n          const distributeOp = opNodes.find(OpNode.is.DistributeOp)!\n          const filterTaskNode2 = taskNodes.find(TaskNode.is.Filter)!\n          const [rangeOp1, rangeOp2] = opNodes.filter(OpNode.is.RangeOp)\n          const attrNode = cHintNodes[0].hintNode\n          ret = filterTask_distributeOp_rangeOp2_attrNode(distributeOp, filterTaskNode2, rangeOp2)\n        }\n        break\n      default:\n        ret = undefined //{ node, lv, task: TASK_TYPE.retrieve_value, subTask: childrenNodes as ITaskNode[] }\n    }\n  }\n\n  if (ret) {\n    debugLog('ret', ret)\n    console.groupEnd()\n    return ret\n  }\n\n  console.groupEnd()\n  return childrenNodes\n}\n\n\n/**\n * can return items, values\n */\nexport function evaluateTaskNode(node: ITaskNode, items: DItem[], rawData: Record<string, DItem[]>,\n  tokens: NLPLabel[], constituency: ConstituencyNode): TaskRet | undefined {\n  // evaluate the children first\n  const subResults = node.subTask ? node.subTask.map(t => evaluateTaskNode(t, items, rawData, tokens, constituency)) : []\n\n  console.group('evaluateTaskNode')\n  console.log('subReults', subResults, node)\n\n  switch (node.task) {\n    case TASK_TYPE.filter: {\n      const { op, hintNode, oData } = node\n      console.log('node', node)\n\n      let targetItems: DItem[] = oData ? rawData[oData] : items\n      let value: string | number | null = null\n      let attr: string | null = null\n\n      // check subResult first, if has subResult, use subResult\n      if (subResults.length === 1 && subResults[0]?.type === 'value') {\n        const valueHintNode = subResults[0].data[0] // use the 1st one as default\n        value = valueHintNode.value\n        attr = valueHintNode.attr\n      } else if (subResults.length === 1 && subResults[0]?.type === 'item') {\n        targetItems = subResults[0].data\n      }\n\n      if (hintNode && hintNode.dataType !== 'value') {\n        console.warn('The hintNode in filter task is not a value node', hintNode)\n      }\n\n      // the hintNode has higher priority than subResults, if has hintNode, use hintNode\n      if (hintNode?.dataType === 'value') {\n        value = hintNode.value\n        attr = hintNode.attr\n      }\n\n      console.log('Target items before filter', targetItems)\n      if (value !== null && attr !== null) {\n        if (oData === 'trainingData' || oData === 'trainingData2') {\n          targetItems = targetItems.sort((a, b) => a.rowIdx - b.rowIdx)\n        }\n        targetItems = op(targetItems, value, attr)\n      } else {\n        console.warn('value or attr is null', 'hintNode', hintNode)\n      }\n\n      console.log('filter task, targetItems', targetItems)\n      console.groupEnd()\n      return { type: 'item', data: targetItems }\n    }\n    case TASK_TYPE.retrieve_value: {\n      if (subResults.length === 1 && subResults[0]?.type === 'value') {\n        console.groupEnd()\n        return subResults[0]\n      }\n\n      const { hintNode } = node\n      const targetItems = (subResults.find(r => r?.type === 'item') as TaskRetItem)?.data || items\n      const attr = hintNode!\n      console.log('hintNode', hintNode, 'node', node)\n\n      console.groupEnd()\n      return attr.colIdx === 0\n        ? { type: 'item', data: targetItems }\n        : {\n          type: 'value', data: targetItems.map(item => {\n            const value = item.data[attr?.attr!].toString()\n            return {\n              rowId: item.id,\n              value,\n              dataType: 'value',\n              nodeType: 'dep',\n              attr: attr?.attr,\n              colIdx: attr?.colIdx, // cells[0].colIdx,\n              rowIdx: item.rowIdx,\n              id: item.id,\n              query: '',\n              deps: { tokens, constituency }, //tokens\n            }\n          })\n        }\n    }\n    case TASK_TYPE.find_extremum: {\n      const { hintNode, op, name } = node\n      // input\n      const attr = hintNode //|| (subResults.find(r => r?.type === 'attr') as TaskRetAttr)?.data\n      const targetItems = (subResults.find(r => r?.type === 'item') as TaskRetItem)?.data || items\n      console.log('find_extremum targetItems', targetItems)\n      // output\n      const item = op!(targetItems, attr?.attr!)\n\n      const others = {\n        type: name,\n        items: [...targetItems].sort((a, b) => name === 'max'\n          ? b.data[attr?.attr!] - a.data[attr?.attr!]\n          : a.data[attr?.attr!] - b.data[attr?.attr!]\n        ),\n        attr: attr?.attr!\n      }\n\n      console.groupEnd()\n      return { type: 'item', data: [item], others }\n    }\n    case TASK_TYPE.derived_value: {\n      const { hintNode, op } = node\n      // input\n      let targetItems: DItem[] = items\n      let attr: string | null = hintNode.attr\n\n      if (subResults.length) {\n        const subResult = subResults[0]\n        if (subResult?.type === 'item') {\n          targetItems = subResult.data\n        } else if (subResult?.type === 'value') {\n          targetItems = subResult.data.map(d =>\n          ({\n            id: d.rowId, rowIdx: d.rowIdx, virtualAttr: [], data: {\n              _item: d.rowId,\n              [d.attr]: d.value\n            },\n          }))\n          attr = subResult.data[0].attr\n        }\n      }\n\n      // output\n      const value = op(targetItems.map(d => d.data[attr!]))\n\n      // if sum, should add a new row\n      let others: any | undefined\n      // hack\n      if (op.name === 'sum') {\n        console.log('sum task ====>', targetItems)\n        others = { type: 'sum', items: targetItems }\n      }\n\n      console.log('derive value task', value)\n      console.groupEnd()\n      return {\n        type: 'value', data: [{\n          rowId: \"_null\",\n          value: value.toString(),\n          nodeType: 'dep',\n          dataType: 'computed',\n          attr: op.name === 'sum' ? hintNode.attr : `${op.name}(${hintNode?.attr})`,\n          colIdx: hintNode?.colIdx!,\n          rowIdx: op.name === 'sum' ? items.length : -1,\n          deps: { tokens, constituency }\n        }],\n        others\n      }\n    }\n    case TASK_TYPE.comparison: {\n      const { op, hintNode } = node\n      console.log('Evaluate Comparison Task')\n      console.log(subResults)\n      let rowId = '_null'\n      let value1: number | string = 0\n      let value2: number | string = 0\n      let attr = 'unknown'\n      let colIdx = -1\n      let rowIdx = -1\n\n      let others: Others | undefined\n      if (subResults.length === 2) {\n        if (subResults.some(s => s?.type === 'value') && subResults.some(s => s?.type === 'item')) {\n          const valueSRes = subResults.find(s => s?.type === 'value')!.data[0] as DepHintdata\n          let itemSRes = subResults.find(s => s?.type === 'item')!.data as DItem[]\n          console.log('itemSRes', itemSRes)\n          // dirty hack, data transfer\n          if ('date' in itemSRes[0].data) {\n            itemSRes = Object.keys(itemSRes[0].data)\n              .filter(k => k !== 'date')\n              .map((region, rowIdx) => {\n                return {\n                  id: region,\n                  virtualAttr: [],\n                  rowIdx, data: {\n                    region,\n                    ...itemSRes[0].data[region]\n                  }\n                } as DItem\n              })\n            const theItem = itemSRes.find(d => d.id === valueSRes.rowId)\n            value2 = theItem?.data[valueSRes.attr] || 0 // hack, 0 as the default\n\n          } else if (itemSRes.length === 6 || itemSRes.length === 7) {\n            value2 = itemSRes.reduce((o, d) => {\n              o = o + +d.data[valueSRes.attr]\n              return o\n            }, 0)\n            console.log('value2', value2)\n            itemSRes = itemSRes.map(d => {\n              const newD = cloneDeep(d)\n              newD.data[valueSRes.attr] = value2\n              return newD\n            })\n          } else if ('state' in itemSRes[0].data) {\n            value2 = itemSRes[0].data[valueSRes.attr]\n          }\n\n\n          attr = valueSRes.attr\n          colIdx = valueSRes.colIdx\n          rowIdx = valueSRes.rowIdx\n          rowId = valueSRes.rowId\n          value1 = valueSRes.value\n          // value2 = theItem?.data[valueSRes.attr] || 0 // hack, 0 as the default\n\n          others = { type: 'compare', items: itemSRes, attr }\n        }\n      }\n\n      const diff = op(value1, value2)\n      console.log('Comparison diff', diff, 'value1', value1, 'value2', value2)\n\n      console.groupEnd()\n      return {\n        type: 'value', others, data: [{\n          rowId,\n          value: `${((diff / +value2) * 100).toFixed(1)}%`,\n          valueFormat: (value1, value2) => `${((op(value1, value2) / +value2) * 100).toFixed(1)}%`,\n          nodeType: 'dep',\n          dataType: 'computed',\n          attr: `diff_${attr}`,\n          colIdx: colIdx + 1, rowIdx,\n          deps: { tokens, constituency }\n        }, {\n          rowId,\n          value: diff.toString(),\n          valueFormat: op,\n          nodeType: 'dep',\n          dataType: 'computed',\n          attr: `diff_${attr}`,\n          colIdx: colIdx + 1, rowIdx,\n          deps: { tokens, constituency }\n        }, {\n          rowId,\n          value: (diff / +value2).toFixed(2),\n          valueFormat: (value1, value2) => `${((op(value1, value2) / +value2)).toFixed(2)}`,\n          nodeType: 'dep',\n          dataType: 'computed',\n          attr: `diff_${attr}`,\n          colIdx: colIdx + 1, rowIdx,\n          deps: { tokens, constituency }\n        }]\n      }\n    }\n    case TASK_TYPE.range: {\n      // dirty hack\n      const { op } = node\n      console.log('Range task')\n      const targetItems = subResults.find(d => d?.type === 'item') as TaskRetItem\n      const data = targetItems?.data.map(item => {\n        const keys = Object.keys(item.data)\n        return {\n          rowId: item.id,\n          value: item.data[keys[0]],\n          attr: keys[0],\n          dataType: 'value',\n          nodeType: 'dep',\n          colIdx: 0,\n          rowIdx: item.rowIdx,\n          query: '',\n          deps: { tokens, constituency }\n        }\n      }) as DepHintdata[]\n\n      console.groupEnd()\n      return {\n        type: 'value', data\n      }\n    }\n    case TASK_TYPE.add_up: {\n      console.warn('!! Add up task should be deprecated !!')\n      return\n      // const { op, oData } = node\n      // let targetItems: DItem[] = oData ? rawData[oData] : items\n      // const data = op(targetItems)\n      // console.log('return add_up', data)\n      // console.groupEnd()\n      // return {\n      //   type: 'item', data\n      // }\n    }\n  }\n\n  console.groupEnd()\n}\n\nexport function newTaskEngine(tokens: NLPLabel[], constituency: ConstituencyNode | null,\n  dataTable: DItem[], rawData: Record<string, DItem[]>, editor: SPEditor) {\n\n  let candidates: Array<DepHintdata> = []\n  console.group('NewTaskEngine')\n  if (!tokens) {\n    console.warn('No tokens')\n    console.groupEnd()\n    return { candidates }\n  }\n  if (!constituency) {\n    debugLog('No constituency')\n    console.groupEnd()\n    return { candidates }\n  }\n\n  debugLog('Constituency', constituency)\n\n  const taskTree = buildTaskTree(constituency, 0, tokens, editor)\n  debugLog('taskTree', taskTree)\n  // step2, evaluate the tasks based on NP\n  const taskResult = evaluateTaskNode(taskTree as ITaskNode, dataTable, rawData, tokens, constituency)\n  debugLog('result', taskResult)\n\n  if (taskResult?.type === 'value') {\n    candidates = candidates.concat(taskResult.data)\n  } else if (taskResult?.type === 'item') {\n    candidates = candidates.concat(flatDataTableToCell(taskResult.data)\n      .filter(c => c.colIdx === 0)\n      .map(c => ({\n        ...c,\n        dataType: 'value' as const,\n        nodeType: 'dep' as const,\n        query: '',\n        deps: { tokens, constituency }\n      })))\n  }\n\n  let others = taskResult?.others\n\n  console.groupEnd()\n  return { candidates, taskTree, others }\n}\n\nexport type { ITaskNode } from './TaskNode'","import { chunk, isFinite } from 'lodash'\nimport { DItem } from \"../../../../@types\"\nimport {\n    abs,\n    allItem, avg, debugLog, largerThanItem, lastUnit, lessThanItem, maxItem, minItem, sum\n} from \"../utils\"\n\n/**\n * Operator nodes\n */\nexport enum OP_TYPE {\n    EXTREME = 'extreme',\n    FILTER = 'comparefilter',\n    COMPUTED = 'computed',\n    CONST_NUMBER = 'constnumber',\n    COMPARE = 'compare',\n    RANGE = 'range',\n    DISTRIBUTE = 'distribute',\n    ADD_UP = 'addup',\n    ABS = 'abs'\n}\n\n/** \n * Extremem Op\n */\nexport type ExtremumOp = <T extends DItem>(arr: T[], key: string) => T\nexport interface ExtremeNode { type: OP_TYPE.EXTREME, op: ExtremumOp, name?: string }\nconst ExtremeMaxOp = (): ExtremeNode => ({ type: OP_TYPE.EXTREME, op: maxItem, name: 'max' })\nconst ExtremeMinOp = (): ExtremeNode => ({ type: OP_TYPE.EXTREME, op: minItem, name: 'min' })\nconst matchExtremeMaxOp = (keyword: string = '', tag: string = '') => ['maximum', 'highest', 'greatest', 'largest', 'biggest', 'most', 'best', 'heaviest'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.EXTREME }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst matchExtremeMinOp = (keyword: string = '', tag: string = '') => ['minimum', 'smallest', 'lowest', 'least', 'worst', 'lightest'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.EXTREME }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n\n/**\n * Filter Op\n */\nexport type FilterOp = <T extends DItem>(arr: T[], b: number | string, key: string) => T[]\nexport interface FilterNode { type: OP_TYPE.FILTER, op: FilterOp, oData?: string }\nconst FilterLessOp = (): FilterNode => ({ type: OP_TYPE.FILTER, op: lessThanItem })\nconst FilterMoreOp = (): FilterNode => ({ type: OP_TYPE.FILTER, op: largerThanItem })\nconst FilterAllOp = (): FilterNode => ({ type: OP_TYPE.FILTER, op: allItem })\nconst FilterLastOp = (oData: string): FilterNode => ({ type: OP_TYPE.FILTER, op: lastUnit, oData })\n/// match\nconst filterLessOp = (keyword: string = '', tag: string = '') => ['less', 'lower', 'smaller'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.FILTER }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst filterMoreOp = (keyword: string = '', tag: string = '') => ['more', 'higher', \"greater\", 'larger', 'bigger'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.FILTER }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst filterAllOp = (keyword: string = '', tag: string = '') => [\n    'all'\n].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.FILTER }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst filterLastOp = (keyword: string = '', tag: string = '') => ['last'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.FILTER }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n/**\n * Compute Op\n */\nexport type ComputeOp = (values: number[]) => number // <T extends DItem>(arr: T[], key: string) => number\nexport interface ComputedNode { type: OP_TYPE.COMPUTED, op: ComputeOp }\nconst ComputeSumOp = (): ComputedNode => ({ type: OP_TYPE.COMPUTED, op: sum })\nconst ComputeAvgOp = (): ComputedNode => ({ type: OP_TYPE.COMPUTED, op: avg })\n\nconst matchComputeSum = (keyword: string = '', tag: string = '') => ['sum', 'total'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.COMPUTED }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst matchComputeAvg = (keyword: string = '', tag: string = '') => ['mean', 'average'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.COMPUTED }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n/**\n * Abs Op\n */\nexport type AbsOp = (value: number) => number\nexport interface AbsOpNode { type: OP_TYPE.ABS, op: AbsOp }\nconst AbsOp = (): AbsOpNode => ({ type: OP_TYPE.ABS, op: (a) => -1 * +a })\nconst matchAbs = (keyword: string = '', tag: string = '') => ['reduce', 'decrease'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.ABS }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n\n/**\n * Compare Op\n */\nexport type CompareOp = <T>(a: T, b: T) => number\nexport interface CompareNode { type: OP_TYPE.COMPARE, op: CompareOp }\nconst CompareDiffOp = (): CompareNode => ({\n    type: OP_TYPE.COMPARE,\n    op: <T>(a: T, b: T) => {\n        if (isFinite(+a) && isFinite(+b)) {\n            return +a - +b\n        }\n        return 0\n    }\n})\nconst CompareRatioOp = (): CompareNode => ({\n    type: OP_TYPE.COMPARE,\n    op: <T>(a: T, b: T) => {\n        if (isFinite(+a) && isFinite(+b)) {\n            return +a\n        }\n        return 0\n    }\n})\nconst matchCompareOp = (keyword: string = '', tag: string = '') => ['compare'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.COMPARE }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n\n/**\n * Range Op\n */\nexport type RangeOp = any\nexport interface RangeNode { type: OP_TYPE.RANGE, op: RangeOp }\nconst RangeStartOp = (): RangeNode => ({\n    type: OP_TYPE.RANGE, op: (items: DItem[], attr: string) => {\n\n    }\n})\nconst RangeEndOp = (): RangeNode => ({ type: OP_TYPE.RANGE, op: () => { } })\nconst matchRangeStartOp = (keyword: string = '', tag: string = '') => [/\\bfrom\\b/].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: 'from' as string, type: OP_TYPE.RANGE }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst matchRangeEndOp = (keyword: string = '', tag: string = '', head_text: string = '') => [/\\bto\\b/].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    let matchIdx = matchRes?.index ?? -1\n    // no head_text now\n    matchIdx = ['from', 'decline', 'increase'].some(s => head_text.toLowerCase().includes(s)) ? matchIdx : -1\n    return { matchIdx, opKey: 'to' as string, type: OP_TYPE.RANGE }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n/**\n * Distribute Op\n */\nexport type DistributeOp = any\nexport interface DistributeNode { type: OP_TYPE.DISTRIBUTE, op: DistributeOp }\nconst DistributeDecreseOp = (): DistributeNode => ({\n    type: OP_TYPE.DISTRIBUTE, op: (items: DItem[], value: any, attr: string) => {\n        debugLog('DistributeDecreseOp', items, value, attr)\n        console.log('distribute', items)\n        // filter the rows that decline in `attr`\n        // desending by default\n        const getValue = item => value === '_all' ? item.data[attr] : item.data[value][attr]\n        return items.filter((item, itemIdx) => {\n            const filterValue = getValue(item)\n            const latterThan = items.filter((_, idx) => idx < itemIdx)\n            // not continue, but all decline\n            return latterThan.length > 0 ? latterThan.every(t => getValue(t) < filterValue) : false\n        })\n    }\n})\nconst DistributeIncreaseOp = (): DistributeNode => ({\n    type: OP_TYPE.DISTRIBUTE, op: (items: DItem[], value: any, attr: string) => {\n        debugLog('DistributeIncreaseOp', items, value, attr)\n        console.log('distribute', items)\n        // filter the rows that decline in `attr`\n        // desending by default\n        const getValue = item => value === '_all' ? item.data[attr] : item.data[value][attr]\n        return items.filter((item, itemIdx) => {\n            const filterValue = getValue(item)\n            const latterThan = items.filter((_, idx) => idx > itemIdx)\n            // not continue, but all decline\n            return latterThan.length > 0 ? latterThan.every(t => getValue(t) > filterValue) : false\n        })\n    }\n})\nconst matchDistributeDecreseOp = (keyword: string = '', tag: string = '') => ['decline'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.DISTRIBUTE }\n}).filter(({ matchIdx }) => matchIdx !== -1)\nconst matchDistributeIncreaseOp = (keyword: string = '', tag: string = '') => ['increase'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.DISTRIBUTE }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n/**\n * AddUp Op\n */\nexport type AddupOp = (items: DItem[]) => DItem[]\nexport interface AddupNode { type: OP_TYPE.ADD_UP, oData: string, op: AddupOp }\nconst matchAddupOp = (keyword: string = '', tag: string = '') => ['week'].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: key as string, type: OP_TYPE.ADD_UP }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n\n/**\n * ConstNum Op\n */\nexport type ConstNumOp = () => number\nexport interface ConstNumNode { type: OP_TYPE.CONST_NUMBER, op: ConstNumOp }\nconst matchConstNum = (keyword: string = '', tag: string = '') => [/\\d+/].map(key => {\n    const regEx = new RegExp(key, 'i')\n    const matchRes = keyword.match(regEx)\n    const matchIdx = matchRes?.index ?? -1\n    return { matchIdx, opKey: ((matchRes?.[0] ?? '') as string).toLowerCase(), type: OP_TYPE.CONST_NUMBER }\n}).filter(({ matchIdx }) => matchIdx !== -1)\n// ['CD'].includes(tag) || ['week'].includes(keyword)\n\nexport type IOpNode = ExtremeNode | FilterNode | ComputedNode | ConstNumNode | CompareNode | RangeNode | DistributeNode | AddupNode | AbsOpNode\n\nconst isOpNode = (n: any): n is IOpNode =>\n    typeof n === 'object'\n    && 'op' in n\n    && typeof n['op'] === 'function'\n    && 'type' in n\n    && (Object.keys(n).length === 2 || Object.keys(n).length === 3)\n\nconst build = {\n    ExtremeMaxOp,\n    ExtremeMinOp,\n    FilterLessOp,\n    FilterMoreOp,\n    FilterAllOp,\n    FilterLastOp,\n    ComputeSumOp,\n    ComputeAvgOp,\n    AbsOp,\n    CompareDiffOp,\n    CompareRatioOp,\n    RangeStartOp,\n    RangeEndOp,\n    DistributeDecreseOp,\n    DistributeIncreaseOp,\n    AddupNode: (interval: string | number, oData: string): AddupNode => ({\n        type: OP_TYPE.ADD_UP, oData, op: (items: DItem[]) => {\n            interval = interval.toString().includes('week') ? 7 : +interval\n            const chunkItems = chunk(items, interval)\n            return chunkItems.map((chunk, idx) => {\n\n                const data = chunk.reduce((o, item) => {\n                    if (Object.keys(o).length === 0) {\n                        o = { ...item.data }\n                    } else {\n                        Object.keys(item.data)\n                            .forEach(k => {\n                                if (k !== 'date') o[k] += item.data[k]\n                            })\n                    }\n                    return o\n                }, {} as Record<string, any>)\n\n                return { id: data['date'], rowIdx: idx, virtualAttr: [], data } as DItem\n            })\n        }\n    }),\n    ConstNum: (value: string): ConstNumNode => ({\n        type: OP_TYPE.CONST_NUMBER, op: () => {\n            if (isFinite(+value)) return +value\n            else if (value === 'week') return 7\n            return 0\n        }\n    })\n}\n\nconst match = {\n    ExtremeMaxOp: matchExtremeMaxOp,\n    ExtremeMinOp: matchExtremeMinOp,\n    filterLessOp,\n    filterMoreOp,\n    filterAllOp,\n    filterLastOp,\n    ComputeAvg: matchComputeAvg,\n    CompareOp: matchCompareOp,\n    ComputeSum: matchComputeSum,\n    Abs: matchAbs,\n    rangeStart: matchRangeStartOp,\n    rangeEnd: matchRangeEndOp,\n    distributeDecrese: matchDistributeDecreseOp,\n    distributeIncrease: matchDistributeIncreaseOp,\n    addupOp: matchAddupOp,\n    ConstNum: matchConstNum,\n}\n\nconst is = {\n    Op: isOpNode,\n    ExtremeOp: (n: any): n is ExtremeNode => isOpNode(n) && n.type === OP_TYPE.EXTREME,\n    FilterOp: (n: any): n is FilterNode => isOpNode(n) && n.type === OP_TYPE.FILTER,\n    ComputedOp: (n: any): n is ComputedNode => isOpNode(n) && n.type === OP_TYPE.COMPUTED,\n    ConstNumOp: (n: any): n is ConstNumNode => isOpNode(n) && n.type === OP_TYPE.CONST_NUMBER,\n    CompareOp: (n: any): n is CompareNode => isOpNode(n) && n.type === OP_TYPE.COMPARE,\n    RangeOp: (n: any): n is RangeNode => isOpNode(n) && n.type === OP_TYPE.RANGE,\n    DistributeOp: (n: any): n is DistributeNode => isOpNode(n) && n.type === OP_TYPE.DISTRIBUTE,\n    AddupOp: (n: any): n is AddupNode => isOpNode(n) && n.type === OP_TYPE.ADD_UP,\n    AbsOp: (n: any): n is AbsOpNode => isOpNode(n) && n.type === OP_TYPE.ABS\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    build, match, is\n}","import { ConstituencyNode } from \"../../../../@types\";\nimport { HintNode } from \"../types\";\nimport { AddupOp, CompareOp, ComputeOp, ExtremumOp, FilterOp } from \"./OpNode\";\n\nexport enum TASK_TYPE {\n    retrieve_value = 'retrieve_value',\n    find_extremum = 'find_extremum',\n    filter = 'filter',\n    derived_value = 'derived_value',\n    distribution = 'distribution',\n    outlier = 'outlier',\n    correlation = 'correlation',\n    negation = 'negation',\n    trend = 'trend',\n    comparison = 'comparison',\n    add_up = 'add_up',\n    range = 'range'\n    // RESULT = 'RESULT'\n}\n\ninterface BaseTaskNode {\n    node: ConstituencyNode\n    lv: number\n    task: TASK_TYPE | ''\n    op?: (...args: any[]) => any\n    hintNode?: HintNode\n    subTask?: ITaskNode[]\n}\nconst isTaskNode = (n: any): n is BaseTaskNode => typeof n === 'object' && 'task' in n && 'node' in n && 'lv' in n && typeof n['lv'] === 'number'\n\n/** \n * Extremem Task\n */\nexport interface ExtremeTask extends BaseTaskNode { task: TASK_TYPE.find_extremum, op: ExtremumOp, name: 'min' | 'max' }\n\n/**\n * Filter Task\n */\nexport interface FilterTask extends BaseTaskNode { task: TASK_TYPE.filter, op: FilterOp, oData?: string }\n\n/**\n * Compute task\n */\nexport interface ComputedTask extends BaseTaskNode { task: TASK_TYPE.derived_value, op: ComputeOp, hintNode: HintNode }\n\n/**\n * Retrieve Task\n */\nexport interface RetrieveTask extends BaseTaskNode { task: TASK_TYPE.retrieve_value }\n\n/**\n * Comparson Task\n */\nexport interface ComparisonTask extends BaseTaskNode { task: TASK_TYPE.comparison, op: CompareOp, notDoneYet?: boolean }\n\n/**\n * Range\n */\nexport interface RangeTask extends BaseTaskNode { task: TASK_TYPE.range }\n\n/**\n * AddUp task\n */\nexport interface AddupTask extends BaseTaskNode { task: TASK_TYPE.add_up, op: AddupOp, oData?: string }\n\n/**\n * RESULT task\n */\n// export interface RESULTTask extends BaseTaskNode { task: TASK_TYPE.RESULT }\n\nexport type ITaskNode = ExtremeTask | FilterTask | ComputedTask | RetrieveTask | ComparisonTask | AddupTask | RangeTask\n\nconst is = {\n    taskNode: isTaskNode,\n    Retrieve: (n: any): n is RetrieveTask => isTaskNode(n) && n.task === TASK_TYPE.retrieve_value,\n    Computed: (n: any): n is ComputedTask => isTaskNode(n) && n.task === TASK_TYPE.derived_value,\n    Filter: (n: any): n is FilterTask => isTaskNode(n) && n.task === TASK_TYPE.filter,\n    Extreme: (n: any): n is ExtremeTask => isTaskNode(n) && n.task === TASK_TYPE.find_extremum,\n    Comparison: (n: any): n is ComparisonTask => isTaskNode(n) && n.task === TASK_TYPE.comparison,\n    Addup: (n: any): n is AddupTask => isTaskNode(n) && n.task === TASK_TYPE.add_up,\n    Range: (n: any): n is RangeTask => isTaskNode(n) && n.task === TASK_TYPE.range,\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    is\n}","import { getNodeDeserializer } from '@udecode/plate-common';\nimport {\n    Deserialize,\n    getSlateClass,\n    getPlatePluginOptions,\n} from '@udecode/plate-core';\n\nimport { ELEMENT_HINT } from './types';\n\nexport const getHintDeserialize = (\n    pluginKey = ELEMENT_HINT\n): Deserialize => (editor) => {\n    const options = getPlatePluginOptions(editor, pluginKey);\n\n    return {\n        element: getNodeDeserializer({\n            type: options.type,\n            getNode: (el) => ({\n                type: options.type,\n                value: el.getAttribute('data-slate-value'),\n            }),\n            rules: [{ className: getSlateClass(options.type) }],\n            ...options.deserialize,\n        }),\n    };\n};","\nimport { insertNodes } from '@udecode/plate-common';\nimport {\n    getPlatePluginType,\n    SPEditor,\n} from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { HintNode, HintData, ELEMENT_HINT } from './types';\n\nexport function insertHint(editor: SPEditor, data: HintData) {\n    const pluginKey = ELEMENT_HINT\n    let children\n    if (data.nodeType === 'indep') {\n        const tokens = data.value.split(' ').flatMap(s => s.split('_'))\n        const targetIdx = tokens.findIndex((t) => t.toLowerCase().includes(data.query.toLowerCase()))\n        const regEx = new RegExp(data.query, \"ig\");\n        children = [{ text: tokens[targetIdx].replace(regEx, data.query) }]\n    } else {\n        children = [{ text: data.value }]\n    }\n\n    // it must be an evlauted value\n    console.log('update hintNode??')\n    const hintNode: HintNode = {\n        ...data,\n        type: getPlatePluginType(editor, pluginKey),\n        children\n    };\n    insertNodes<HintNode>(editor, hintNode);\n    Transforms.move(editor);\n}","import { BaseEditor, Editor, Path, Transforms } from \"slate\"\nimport { SPEditor } from \"@udecode/plate\"\n\nimport { ConstituencyNode, DItem, NLPLabel } from \"../../../@types\"\nimport { newTaskEngine } from \"./taskEngine\"\nimport { DepHintdata, PlaceholderHintData } from \"./types\"\n\nexport function setHintNode(editor: BaseEditor, props: any, path: Path) {\n  Transforms.setNodes(editor, props, { at: path })\n  Transforms.insertText(editor, props.value, { at: [...path, 0], voids: true })\n}\n\nexport function flatWrongOp(editor: BaseEditor, path: Path) {\n  // should highlight the data op if exist\n  const opNodeEntry = Editor.previous(editor, { at: path, match: node => node['underline'] })\n  if (opNodeEntry) {\n    const [opNode, opNodePath] = opNodeEntry\n    // flag it as italic\n    Transforms.setNodes(editor, {\n      italic: true\n    } as any, { at: opNodePath })\n  }\n}\n\nexport function unFlatWrongOp(editor: BaseEditor, path: Path) {\n  // should highlight the data op if exist\n  const opNodeEntry = Editor.previous(editor, { at: path, match: node => node['underline'] })\n  if (opNodeEntry) {\n    const [opNode, opNodePath] = opNodeEntry\n    Transforms.unsetNodes(editor, 'italic', { at: opNodePath })\n  }\n}\n\n\nexport function reactiveUpdate(tokens: NLPLabel[], constituency: ConstituencyNode | null,\n  oNode: PlaceholderHintData | DepHintdata, oNodePath: Path,\n  dataTable: DItem[], originalData: Record<string, DItem[]>,\n  editor: SPEditor,\n  // candidates?: DepHintdata[]\n) {\n  console.group('ReactiveUpdate')\n  // if (!candidates) {\n  const { others, candidates } = newTaskEngine(tokens, constituency, dataTable, originalData, editor)\n  // candidates = result.candidates\n  // }\n\n  if (!candidates.length) {\n    console.groupEnd()\n    return { returnNode: undefined, others }\n  }\n\n  // should get values based on the placeholder type\n  let nNode: PlaceholderHintData | DepHintdata | undefined\n\n  if (!constituency) {\n    console.groupEnd()\n    return { returnNode: nNode, others }\n  }\n\n  if (oNode.nodeType === 'placeholder') {\n    switch (oNode.phType) {\n      case 'VALUE':\n        nNode = {\n          ...oNode,\n          attr: candidates[0].attr,\n          colIdx: candidates[0].colIdx,\n          value: candidates[0].value.toString(),\n          rowIdx: candidates[0].rowIdx,\n          deps: candidates[0].deps\n        }\n        break\n      case 'COUNT_ITEMS':\n        nNode = {\n          ...oNode,\n          attr: candidates[0].attr,\n          colIdx: candidates[0].colIdx,\n          value: candidates.length.toString(),\n          deps: candidates[0].deps\n        }\n        break\n      case 'DIFF_ATTR':\n        nNode = {\n          ...oNode,\n          valueFormat: candidates[0].valueFormat,\n          attr: candidates[0].attr,\n          colIdx: candidates[0].colIdx,\n          value: candidates[0].value.toString(),\n          deps: candidates[0].deps\n        }\n        break\n      case 'RATIO':\n        nNode = {\n          ...oNode,\n          valueFormat: candidates[0].valueFormat,\n          rowId: candidates[0].rowId,\n          rowIdx: candidates[0].rowIdx,\n          attr: candidates[0].attr,\n          colIdx: candidates[0].colIdx,\n          value: candidates[0].value.toString(),\n          deps: candidates[0].deps\n        }\n        break\n    }\n  } else if (oNode.nodeType === 'dep') {\n    nNode = {\n      ...oNode,\n      rowId: candidates[oNode.selectedIdx!].rowId,\n      rowIdx: candidates[oNode.selectedIdx!].rowIdx,\n      attr: candidates[oNode.selectedIdx!].attr,\n      colIdx: candidates[oNode.selectedIdx!].colIdx,\n      value: candidates[oNode.selectedIdx!].value.toString(),\n      deps: candidates[oNode.selectedIdx!].deps\n    }\n  }\n\n  console.debug('reactive update candidates', candidates, 'newNode', nNode, 'oldNode', oNode)\n  if (!nNode) {\n    // should highlight the data op if exist\n    flatWrongOp(editor, oNodePath)\n  } else {\n    // update the node\n    setHintNode(editor, nNode, oNodePath)\n    // unflat the wrong op if exist\n    unFlatWrongOp(editor, oNodePath)\n  }\n\n  Transforms.select(editor, Editor.end(editor, [0]))\n  console.groupEnd()\n  return { returnNode: nNode, others }\n}","import React, { Component, createRef, RefObject, MouseEvent } from 'react'\nimport clsx from 'clsx'\n\nimport './style.scss'\n\nexport interface Option {\n  label?: string;\n  value: string;\n  idx: number\n  className?: string;\n}\nexport interface Group {\n  type: \"group\";\n  name: string;\n  items: Option[];\n}\n\nconst isGroup = (obj: any): obj is Group => typeof obj === 'object' && obj.type === 'group'\nconst isOption = (obj: any): obj is Option => typeof obj === 'object' && typeof obj.value === 'string'\n\nconst baseClassName = 'Dropdown'\n\nexport interface Props {\n  value: Option | string;\n  options: (Group | Option | string)[];\n  // className?: string;\n  disabled?: boolean;\n  // arrowClosed?: React.ReactNode,\n  // arrowOpen?: React.ReactNode,\n  onChange?: (arg: Option) => void;\n  onFocus?: (arg: boolean) => void;\n  // placeholder?: String;\n}\n\ninterface State {\n  selected: Option | string\n  isOpen: boolean\n}\n\nexport class Dropdown extends Component<Props, State> {\n  dropdownRef: RefObject<HTMLDivElement> = createRef()\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      selected: this.parseValue(props.value, props.options),\n      isOpen: true\n    }\n    console.log(this.state)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.value !== prevProps.value) {\n      const selected = this.parseValue(this.props.value, this.props.options)\n      if (selected !== this.state.selected) {\n        this.setState({ selected })\n      }\n    }\n  }\n\n  onMouseDown = (event: MouseEvent<HTMLDivElement, globalThis.MouseEvent>) => {\n    this.props.onFocus?.(this.state.isOpen)\n    if (event.type === 'mousedown' && event.button !== 0) return\n\n    event.stopPropagation()\n    event.preventDefault()\n\n    if (!this.props.disabled) {\n      this.setState({\n        isOpen: !this.state.isOpen\n      })\n    }\n  }\n\n  parseValue(value: string | Option, options: (Group | Option | string)[]) {\n    let selectedOption: Option | undefined\n\n    // if value is string but options are objects\n    if (typeof value === 'string') {\n      for (let i = 0, num = options.length; i < num; i++) {\n        const option = options[i]\n        if (isGroup(option)) {\n          selectedOption = option.items.find(item => item.value === value)\n        } else if (isOption(option) && option.value === value) {\n          selectedOption = option\n        }\n      }\n    }\n\n    return selectedOption || value\n  }\n\n  setValue = (value: string, label: string, idx: number) => {\n    console.log('setValue')\n    let newState = {\n      selected: {\n        value,\n        label,\n        idx\n      },\n      isOpen: false\n    }\n    if (newState.selected !== this.state.selected && this.props.onChange) {\n      this.props.onChange(newState.selected)\n    }\n    this.setState(newState)\n  }\n\n  renderOption(option: Option | string, idx: number) {\n\n    const value = isOption(option) ? option.value : option\n    const label = isOption(option) ? (option.label || option.value) : option\n    const isSelected = isOption(this.state.selected)\n      ? value === this.state.selected.value\n      : value === this.state.selected\n\n    const optionClass = clsx(isOption(option) ? option.className : '', {\n      [`${baseClassName}-option`]: true,\n      'is-selected': isSelected\n    })\n\n    return (\n      <div\n        key={value}\n        className={optionClass}\n        // onMouseDown={() => this.setValue(value, label)}\n        onClick={(e) => {\n          e.stopPropagation()\n          this.setValue(value, label, isOption(option)? option.idx : idx)\n        }}\n        role='option'\n        aria-selected={isSelected ? 'true' : 'false'}>\n        {label}\n      </div>\n    )\n  }\n\n  renderMenu() {\n    const { options } = this.props\n    let ops = options.map((option, idx) => {\n      if (isGroup(option)) {\n        return (\n          <div className={`${baseClassName}-group`} key={option.name} role='listbox' tabIndex={-1}>\n            <div className={`${baseClassName}-title`}>\n              {option.name}\n            </div>\n            {option.items.map((item) => this.renderOption(item, idx))}\n          </div>\n        )\n      } else {\n        return this.renderOption(option, idx)\n      }\n    })\n\n    return ops.length ? ops : <div className={`${baseClassName}-noresults`}>\n      No options found\n    </div>\n  }\n\n  render() {\n\n    // const disabledClass = this.props.disabled ? 'Dropdown-disabled' : ''\n    const valueLabel = typeof this.state.selected === 'string'\n      ? this.state.selected\n      : this.state.selected.label\n\n    const placeholderClass = clsx({\n      [`${baseClassName}-placeholder`]: true,\n      'is-selected': typeof this.state.selected === 'string' || this.state.selected.value !== ''\n    })\n\n    const menu = this.state.isOpen\n      ? <div className={`${baseClassName}-menu`} aria-expanded='true'>\n        {this.renderMenu()}\n      </div>\n      : null\n\n    return (\n      <div ref={this.dropdownRef} className={clsx('Dropdown-root', this.state.isOpen && 'is-open')}>\n        <div className={'Dropdown-control'}\n          onMouseDown={this.onMouseDown}\n          aria-haspopup='listbox'>\n          {/* <div className={placeholderClass}>\n            {valueLabel}\n          </div> */}\n          {/* <div className={`${baseClassName}-arrow-wrapper`}>\n            {\n              // arrowOpen && arrowClosed\n              //   ? this.state.isOpen ? arrowOpen : arrowClosed\n              //   : \n            }\n            <span className={`${baseClassName}-arrow`} />\n          </div> */}\n        </div>\n        {menu}\n      </div>\n    )\n  }\n}","\nconst englishAbbreviations = [\n    \"al\",\n    \"adj\",\n    \"assn\",\n    \"Ave\",\n    \"BSc\", \"MSc\",\n    \"Cell\",\n    \"Ch\",\n    \"Co\",\n    \"cc\",\n    \"Corp\",\n    \"Dem\",\n    \"Dept\",\n    \"ed\",\n    \"eg\",\n    \"Eq\",\n    \"Eqs\",\n    \"est\",\n    \"est\",\n    \"etc\",\n    \"Ex\",\n    \"ext\", // + number?\n    \"Fig\",\n    \"fig\",\n    \"Figs\",\n    \"figs\",\n    \"i.e\",\n    \"ie\",\n    \"Inc\",\n    \"inc\",\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Sept\", \"Oct\", \"Nov\", \"Dec\",\n    \"jr\",\n    \"mi\",\n    \"Miss\", \"Mrs\", \"Mr\", \"Ms\",\n    \"Mol\",\n    \"mt\",\n    \"mts\",\n    \"no\",\n    \"Nos\",\n    \"PhD\", \"MD\", \"BA\", \"MA\", \"MM\",\n    \"pl\",\n    \"pop\",\n    \"pp\",\n    \"Prof\", \"Dr\",\n    \"pt\",\n    \"Ref\",\n    \"Refs\",\n    \"Rep\",\n    \"repr\",\n    \"rev\",\n    \"Sec\",\n    \"Secs\",\n    \"Sgt\", \"Col\", \"Gen\", \"Rep\", \"Sen\", 'Gov', \"Lt\", \"Maj\", \"Capt\", \"St\",\n    \"Sr\", \"sr\", \"Jr\", \"jr\", \"Rev\",\n    \"Sun\", \"Mon\", \"Tu\", \"Tue\", \"Tues\", \"Wed\", \"Th\", \"Thu\", \"Thur\", \"Thurs\", \"Fri\", \"Sat\",\n    \"trans\",\n    \"Univ\",\n    \"Viz\",\n    \"Vol\",\n    \"vs\",\n    \"v\",\n];\n\nlet abbreviations;\nexport const setAbbreviations = function (abbr) {\n    if (abbr) {\n        abbreviations = abbr;\n    } else {\n        abbreviations = englishAbbreviations;\n    }\n}\n\nexport const isCapitalized = function (str: string) {\n    return /^[A-Z][a-z].*/.test(str) || isNumber(str);\n}\n\n// Start with opening quotes or capitalized letter\nexport const isSentenceStarter = function (str: string) {\n    return isCapitalized(str) || /``|\"|'/.test(str.substring(0, 2));\n}\n\nexport const isCommonAbbreviation = function (str: string) {\n    var noSymbols = str.replace(/[-'`~!@#$%^&*()_|+=?;:'\",.<>{}[\\]\\\\/]/gi, \"\");\n\n    return ~abbreviations.indexOf(noSymbols);\n}\n\n// This is going towards too much rule based\nexport const isTimeAbbreviation = function (word: string, next: string) {\n    if (word === \"a.m.\" || word === \"p.m.\") {\n        var tmp = next.replace(/\\W+/g, '').slice(-3).toLowerCase();\n\n        if (tmp === \"day\") {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport const isDottedAbbreviation = function (word: string) {\n    var matches = word.replace(/[()[\\]{}]/g, '').match(/(.\\.)*/);\n    return matches && matches[0].length > 0;\n}\n\n// TODO look for next words, if multiple are capitalized,\n// then it's probably not a sentence ending\nexport const isCustomAbbreviation = function (str: string) {\n    if (str.length <= 3) {\n        return true;\n    }\n\n    return isCapitalized(str);\n}\n\n// Uses current word count in sentence and next few words to check if it is\n// more likely an abbreviation + name or new sentence.\nexport const isNameAbbreviation = function (wordCount, words) {\n    if (words.length > 0) {\n        if (wordCount < 5 && words[0].length < 6 && isCapitalized(words[0])) {\n            return true;\n        }\n\n        var capitalized = words.filter(function (str) {\n            return /[A-Z]/.test(str.charAt(0));\n        });\n\n        return capitalized.length >= 3;\n    }\n\n    return false;\n}\n\nexport const isNumber = function (str: string, dotPos?: number) {\n    if (dotPos) {\n        str = str.slice(dotPos - 1, dotPos + 2);\n    }\n\n    return !isNaN(+str);\n};\n\n// Phone number matching\n// http://stackoverflow.com/a/123666/951517\nexport const isPhoneNr = function (str: string) {\n    return str.match(/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/);\n};\n\n// Match urls / emails\n// http://stackoverflow.com/a/3809435/951517\nexport const isURL = function (str: string) {\n    return str.match(/[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/);\n}\n\n// Starting a new sentence if beginning with capital letter\n// Exception: The word is enclosed in brackets\nexport const isConcatenated = function (word: string) {\n    let i = 0;\n\n    if ((i = word.indexOf(\".\")) > -1 ||\n        (i = word.indexOf(\"!\")) > -1 ||\n        (i = word.indexOf(\"?\")) > -1) {\n        var c = word.charAt(i + 1);\n\n        // Check if the next word starts with a letter\n        if (c.match(/[a-zA-Z].*/)) {\n            return [word.slice(0, i), word.slice(i + 1)];\n        }\n    }\n    return false;\n}\n\nexport const isBoundaryChar = function (word: string) {\n    return word === \".\" ||\n        word === \"!\" ||\n        word === \"?\";\n}","import { Path, Point } from 'slate';\n\nimport * as Match from './Match'\n\nconst newline_placeholder = \" @~@ \";\nconst newline_placeholder_t = newline_placeholder.trim();\n\nconst whiteSpaceCheck = new RegExp(\"\\\\S\", \"\");\n// const addNewLineBoundaries = new RegExp(\"\\\\n+|[-#=_+*]{4,}\", \"g\");\n// const splitIntoWords = new RegExp(\"\\\\S+|\\\\n\", \"g\");\n\ninterface Options {\n    newline_boundaries: boolean\n    preserve_whitespace: boolean\n    abbreviations: null\n}\n\nexport interface SplitSentence {\n    paths: Record<string, Point>\n    sentence: string\n    tokens: Array<{ token: string, path: Point }>\n    raw: Array<{ token: string, path: Point }>\n}\n\nexport function splitSentences(frags: Array<{ path: Path, text: string }>, user_options: Partial<Options> = {}): SplitSentence[] {\n    const text = frags.reduce((o, f) => o + f.text, \"\")\n\n    // whitespace-only string has no sentences\n    if (!text.length || !whiteSpaceCheck.test(text)) {\n        return [];\n    }\n\n    const options: Options = {\n        ...{\n            newline_boundaries: false,\n            preserve_whitespace: true,\n            abbreviations: null\n        },\n        ...user_options\n    }\n\n    Match.setAbbreviations(options.abbreviations);\n\n    // Split the text into words\n    // let words: string[] | null = []\n    // let tokens: Array<{ token: string, path: Path }>\n    // Split the text into words\n    // <br> tags are the odd man out, as whitespace is allowed inside the tag\n    // tokens = text.split(/(<br\\s*\\/?>|\\S+|\\n+)/);\n    const tokens = frags.reduce((o: Array<{ token: string, path: Point }>, frag, i) => {\n        let offset = 0\n        let n = frag.text.split(/(<br\\s*\\/?>|\\S+|\\n+)/)\n            .map(t => ({ token: t, path: { path: frag.path, offset: offset += t.length } }))\n\n        // console.log('token', n)\n        // every other token is a word\n        // words = words!.concat(n.filter((_, ii) => ii % 2).map(d => d.token))\n        // remove the empty string, except those with only one token\n\n        if (n.length !== 1 && i !== 0) n = n.filter(t => t.token.length)\n        return o.concat(n)\n    }, [])\n    // const words = tokens.filter((d, ii) => ii % 2).map(d => d.token)\n    const words = tokens.filter((d, ii) => /\\S/.test(d.token)).map(d => d.token)\n\n    // If given text is only whitespace (or nothing of \\S+)\n    if (words === null || !words.length) {\n        return [];\n    }\n\n    let wordCount = 0;\n    let sentences: string[][] = [];\n    let current: string[] = [];\n    for (let i = 0, L = words.length; i < L; i++) {\n        wordCount++;\n        const word = words[i]\n        // Add the word to current sentence\n        current.push(word);\n        // Sub-sentences, reset counter\n        if (~word.indexOf(\",\")) {\n            wordCount = 0;\n        }\n\n        if (Match.isBoundaryChar(word) ||\n            word.endsWith(\"?!\") ||\n            word === newline_placeholder_t) {\n\n            if (options.newline_boundaries && word === newline_placeholder_t) {\n                current.pop();\n            }\n            sentences.push(current);\n\n            wordCount = 0;\n            current = [];\n\n            continue;\n        }\n\n        // if (word.endsWith(\"\\\"\") || word.endsWith(\"”\")) {\n        //     word = word.slice(0, -1);\n        // }\n\n        // A dot might indicate the end sentences\n        // Exception: The next sentence starts with a word (non abbreviation)\n        //            that has a capital letter.\n        if (word.endsWith(\".\")) {\n            // Check if there is a next word\n            // This probably needs to be improved with machine learning\n            if (i + 1 < L) {\n                // Single character abbr.\n                if (word.length === 2 && isNaN(+word.charAt(0))) {\n                    continue;\n                }\n\n                // Common abbr. that often do not end sentences\n                if (Match.isCommonAbbreviation(word)) {\n                    continue;\n                }\n\n                // Next word starts with capital word, but current sentence is\n                // quite short\n                if (Match.isSentenceStarter(words[i + 1])) {\n                    if (Match.isTimeAbbreviation(word, words[i + 1])) {\n                        continue;\n                    }\n\n                    // Dealing with names at the start of sentences\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 6))) {\n                        continue;\n                    }\n\n                    if (Match.isNumber(words[i + 1])) {\n                        if (Match.isCustomAbbreviation(word)) {\n                            continue;\n                        }\n                    }\n                } else {\n                    // Skip ellipsis\n                    if (word.endsWith(\"..\")) {\n                        continue;\n                    }\n\n                    //// Skip abbreviations\n                    // Short words + dot or a dot after each letter\n                    if (Match.isDottedAbbreviation(word)) {\n                        continue;\n                    }\n\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 5))) {\n                        continue;\n                    }\n                }\n            }\n\n            sentences.push(current);\n            current = [];\n            wordCount = 0;\n\n            continue;\n        }\n\n        // Check if the word has a dot in it\n        let index: number = word.indexOf(\".\")\n        if (index > -1) {\n            if (Match.isNumber(word, index)) {\n                continue;\n            }\n\n            // Custom dotted abbreviations (like K.L.M or I.C.T)\n            if (Match.isDottedAbbreviation(word)) {\n                continue;\n            }\n\n            // Skip urls / emails and the like\n            if (Match.isURL(word) || Match.isPhoneNr(word)) {\n                continue;\n            }\n        }\n\n        let temp = Match.isConcatenated(word)\n        if (temp) {\n            current.pop();\n            current.push(temp[0]);\n            sentences.push(current);\n\n            current = [];\n            wordCount = 0;\n            current.push(temp[1]);\n        }\n    }\n\n    if (current.length) {\n        sentences.push(current);\n    }\n\n    // Clear \"empty\" sentences\n    sentences = sentences.filter(s => s.length > 0)\n\n    const result = sentences.slice(1).reduce((out, sentence) => {\n        const lastSentence = out[out.length - 1];\n\n        // Single words, could be \"enumeration lists\"\n        if (lastSentence.length === 1 && /^.{1,2}[.]$/.test(lastSentence[0])) {\n            // Check if there is a next sentence\n            // It should not be another list item\n            if (!/[.]/.test(sentence[0])) {\n                out.pop()\n                out.push(lastSentence.concat(sentence));\n                return out;\n            }\n        }\n\n        out.push(sentence);\n        return out;\n    }, [sentences[0]]);\n\n    // join tokens back together\n    return result.filter(s => s.length > 0 && s[0].length > 0).map((sentence, ii) => {\n\n        // tokens looks like so: [leading-space token, non-space token, space\n        // token, non-space token, space token... ]. In other words, the first\n        // item is the leading space (or the empty string), and the rest of\n        // the tokens are [non-space, space] token pairs.\n        // let tokenCount = sentence.length * 2;\n\n        if (ii === 0) {\n            // tokenCount += 1;\n            tokens.shift()\n        }\n\n        const tmpTokens: Array<{ token: string; path: Point }> = []\n        // skip the first empty space, if\n        if (!/\\S/.test(tokens[0].token) && tokens[0].token !== sentence[0]) {\n            tokens.shift()\n        }\n        for (let j = 0, len = sentence.length; j < len;) {\n            const firstToken = tokens.shift()\n            if (firstToken === undefined) {\n                console.warn('Something wrong! the firstToken is undefined', firstToken)\n                break\n            }\n            tmpTokens.push(firstToken)\n            if (firstToken.token === sentence[j]) {\n                ++j\n            }\n        }\n        // add the last empty space, if\n        if (tokens.length === 1 && /\\s+/.test(tokens[0].token) && tmpTokens.length !== 0) {\n            tmpTokens.push(tokens[0])\n            tokens.shift()\n        }\n\n        const paths = tmpTokens.reduce((o, t) => {\n            const pId = t.path.path.join('_')\n            o[pId] = t.path\n            return o\n        }, {})\n\n        return {\n            paths,\n            sentence: tmpTokens.map(t => t.token).join(''),\n            raw: tmpTokens,\n            tokens: tmpTokens.filter(p => p.token.match(/\\S+/))\n        }\n    });\n}\n\n// Split the entry into sentences.\n// export function splitSentences(text: string, user_options: Partial<Options> = {}) {\n//     // whitespace-only string has no sentences\n//     if (!text.length || !whiteSpaceCheck.test(text)) {\n//         return [];\n//     }\n\n//     const options: Options = {\n//         ...{\n//             newline_boundaries: false,\n//             preserve_whitespace: false,\n//             abbreviations: null\n//         },\n//         ...user_options\n//     }\n\n//     Match.setAbbreviations(options.abbreviations);\n\n//     if (options.newline_boundaries) {\n//         text = text.replace(addNewLineBoundaries, newline_placeholder);\n//     }\n\n//     // Split the text into words\n//     let words: string[] | null\n//     let tokens: string[]\n//     // Split the text into words\n//     if (options.preserve_whitespace) {\n//         // <br> tags are the odd man out, as whitespace is allowed inside the tag\n//         tokens = text.split(/(<br\\s*\\/?>|\\S+|\\n+)/);\n//         // every other token is a word\n//         words = tokens.filter((token, ii) => ii % 2);\n//     } else {\n//         // - see http://blog.tompawlak.org/split-string-into-tokens-javascript\n//         words = text.trim().match(splitIntoWords);\n//     }\n\n//     // If given text is only whitespace (or nothing of \\S+)\n//     if (words === null || !words.length) {\n//         return [];\n//     }\n\n//     let wordCount = 0;\n//     let sentences: string[][] = [];\n//     let current: string[] = [];\n//     for (let i = 0, L = words.length; i < L; i++) {\n//         wordCount++;\n//         const word = words[i]\n//         // Add the word to current sentence\n//         current.push(word);\n//         // Sub-sentences, reset counter\n//         if (~word.indexOf(\",\")) {\n//             wordCount = 0;\n//         }\n\n//         if (Match.isBoundaryChar(word) ||\n//             word.endsWith(\"?!\") ||\n//             word === newline_placeholder_t) {\n\n//             if (options.newline_boundaries && word === newline_placeholder_t) {\n//                 current.pop();\n//             }\n//             sentences.push(current);\n\n//             wordCount = 0;\n//             current = [];\n\n//             continue;\n//         }\n\n//         if (word.endsWith(\"\\\"\") || word.endsWith(\"”\")) {\n//             word = word.slice(0, -1);\n//         }\n\n//         // A dot might indicate the end sentences\n//         // Exception: The next sentence starts with a word (non abbreviation)\n//         //            that has a capital letter.\n//         if (word.endsWith(\".\")) {\n//             // Check if there is a next word\n//             // This probably needs to be improved with machine learning\n//             if (i + 1 < L) {\n//                 // Single character abbr.\n//                 if (word.length === 2 && isNaN(+word.charAt(0))) {\n//                     continue;\n//                 }\n\n//                 // Common abbr. that often do not end sentences\n//                 if (Match.isCommonAbbreviation(word)) {\n//                     continue;\n//                 }\n\n//                 // Next word starts with capital word, but current sentence is\n//                 // quite short\n//                 if (Match.isSentenceStarter(words[i + 1])) {\n//                     if (Match.isTimeAbbreviation(word, words[i + 1])) {\n//                         continue;\n//                     }\n\n//                     // Dealing with names at the start of sentences\n//                     if (Match.isNameAbbreviation(wordCount, words.slice(i, 6))) {\n//                         continue;\n//                     }\n\n//                     if (Match.isNumber(words[i + 1])) {\n//                         if (Match.isCustomAbbreviation(word)) {\n//                             continue;\n//                         }\n//                     }\n//                 } else {\n//                     // Skip ellipsis\n//                     if (word.endsWith(\"..\")) {\n//                         continue;\n//                     }\n\n//                     //// Skip abbreviations\n//                     // Short words + dot or a dot after each letter\n//                     if (Match.isDottedAbbreviation(word)) {\n//                         continue;\n//                     }\n\n//                     if (Match.isNameAbbreviation(wordCount, words.slice(i, 5))) {\n//                         continue;\n//                     }\n//                 }\n//             }\n\n//             sentences.push(current);\n//             current = [];\n//             wordCount = 0;\n\n//             continue;\n//         }\n\n//         // Check if the word has a dot in it\n//         let index: number = word.indexOf(\".\")\n//         if (index > -1) {\n//             if (Match.isNumber(word, index)) {\n//                 continue;\n//             }\n\n//             // Custom dotted abbreviations (like K.L.M or I.C.T)\n//             if (Match.isDottedAbbreviation(word)) {\n//                 continue;\n//             }\n\n//             // Skip urls / emails and the like\n//             if (Match.isURL(word) || Match.isPhoneNr(word)) {\n//                 continue;\n//             }\n//         }\n\n//         let temp = Match.isConcatenated(word)\n//         if (temp) {\n//             current.pop();\n//             current.push(temp[0]);\n//             sentences.push(current);\n\n//             current = [];\n//             wordCount = 0;\n//             current.push(temp[1]);\n//         }\n//     }\n\n//     if (current.length) {\n//         sentences.push(current);\n//     }\n\n//     // Clear \"empty\" sentences\n//     sentences = sentences.filter(s => s.length > 0)\n\n//     const result = sentences.slice(1).reduce((out, sentence) => {\n//         const lastSentence = out[out.length - 1];\n\n//         // Single words, could be \"enumeration lists\"\n//         if (lastSentence.length === 1 && /^.{1,2}[.]$/.test(lastSentence[0])) {\n//             // Check if there is a next sentence\n//             // It should not be another list item\n//             if (!/[.]/.test(sentence[0])) {\n//                 out.pop()\n//                 out.push(lastSentence.concat(sentence));\n//                 return out;\n//             }\n//         }\n\n//         out.push(sentence);\n//         return out;\n//     }, [sentences[0]]);\n\n//     console.log('words', words)\n//     console.log('sentences', sentences)\n//     console.log('results', result)\n\n//     // join tokens back together\n//     return result.map((sentence, ii) => {\n//         if (options.preserve_whitespace && !options.newline_boundaries) {\n//             // tokens looks like so: [leading-space token, non-space token, space\n//             // token, non-space token, space token... ]. In other words, the first\n//             // item is the leading space (or the empty string), and the rest of\n//             // the tokens are [non-space, space] token pairs.\n//             let tokenCount = sentence.length * 2;\n\n//             if (ii === 0) {\n//                 tokenCount += 1;\n//             }\n\n//             return tokens.splice(0, tokenCount).join(\"\");\n//         }\n\n//         return sentence.join(\" \");\n//     });\n// }","import { SPEditor } from \"@udecode/plate\";\nimport { BaseEditor, BaseRange, Editor, Range, Path, Text } from \"slate\";\nimport { ReactEditor } from \"slate-react\";\n\nimport { Cell, ConstituencyNode, DItem, NLPLabel, SpacyRet, VisLabel } from \"../../../@types\";\nimport { SplitSentence, splitSentences } from \"../../../SBD/tokenizer\";\nimport { isOpNode, OpNode } from \"../operator\";\nimport { HintNode, isHintNode } from \"./types\";\n\n/**\n * Get previous index from 0 to max.\n * If index is 0, get to max.\n */\nexport const getPreviousIndex = (i: number, max: number) =>\n  i <= 0 ? max : i - 1;\n\n/**\n * Get next index from 0 to max.\n * If index is max, get to 0.\n */\nexport const getNextIndex = (i: number, max: number) => (i >= max ? 0 : i + 1);\n\nexport function maxItem<T extends DItem>(arr: T[], key: string) {\n  return [...arr].reduce((o, d) => +o.data[key] > +d.data[key] ? o : d)\n}\nexport function minItem<T extends DItem>(arr: T[], key: string) {\n  return [...arr].reduce((o, d) => +o.data[key] < +d.data[key] ? o : d)\n}\n\n/**\n * Filter Op\n */\nexport function lessThanItem<T extends DItem>(arr: T[], target: number | string, key: string) {\n  return [...arr].filter(item => item.data[key] < +target)\n}\nexport function largerThanItem<T extends DItem>(arr: T[], target: number | string, key: string) {\n  return [...arr].filter(item => item.data[key] > +target)\n}\nexport function equalToItem<T extends DItem>(arr: T[], target: string | number, key: string) {\n  console.log('target', target, 'key', key)\n  return [...arr].filter(item => item.data[key].toString() === target.toString())\n}\nexport function allItem<T extends DItem>(arr: T[], target: any, key: string) {\n  return [...arr]\n}\n/**\n * The previous one\n */\nexport function lastUnit<T extends DItem>(arr: T[], unit: number | string = 1, attr: string) {\n  if (typeof unit === 'string') unit = +unit\n  return [...arr].slice(1 * unit, 2 * unit)\n}\n\n/**\n * Compute\n */\nexport function sum(values: number[]): number;\nexport function sum<T extends DItem>(arr: T[], key: string): number;\nexport function sum(items: any[], key?: string) {\n  if (key) {\n    return [...items].reduce((o, d) => o + +d.data[key], 0)\n  }\n  return [...items].reduce((o, d) => o + +d, 0)\n}\n\nexport function avg(values: number[]): number;\nexport function avg<T extends DItem>(arr: T[], key: string): number;\nexport function avg(items: any[], key?: string) {\n  if (key) return sum(items, key) / items.length\n  return +(sum(items) / items.length).toFixed(2)\n}\n\nexport function abs(values: number[]): number {\n  return Math.abs(values[0])\n}\n\n\nexport async function NLPParser(search: string, sentence?: SplitSentence) {\n  if (!sentence?.sentence) return { nlpTokens: [], constituency: null }\n\n  // parse the sentence, get nlp tags\n  // if the searchIsEmpty, add a placeholder\n  const rawtext = search === ''\n    ? `${sentence?.sentence}TTOKEN`\n    : sentence?.sentence\n\n  // const apiUrl = 'http://ddw.chenzhutian.org/nlp'\n    // const apiUrl = 'http://localhost:9901/nlp'\n  // const apiUrl = 'https://creativitybot.ucsd.edu/nlp'\n  const apiUrl ='http://18.162.148.243/nlp'\n  const nlpTokens: { deps: SpacyRet[], constituency: ConstituencyNode } = await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ rawtext })\n  }).then(d => d.json())\n  return { nlpTokens: nlpTokens.deps, constituency: nlpTokens.constituency }\n}\n\nexport function addHintData(editor: SPEditor, nlpTokens: SpacyRet[], sentence?: SplitSentence) {\n  if (!sentence?.sentence) return []\n  return sentence?.tokens.map((p, token_idx) => {\n    const { token, path } = p\n\n    // get the bounding box of the token\n    let hintNode: HintNode | undefined\n    let hintPath: Path | undefined\n    if (path.path.length >= 3) {\n      const [parentNode, parentPath] = Editor.parent(editor, path.path)\n      // this should be a hint node\n      if (!isHintNode(parentNode)) {\n        console.warn('path', path, token)\n        console.warn('The parentNode is not a hint node!', parentNode)\n      } else {\n        hintNode = parentNode\n        hintPath = parentPath\n      }\n    }\n\n    const nlpToken = nlpTokens.find(t => t.token_idx === token_idx)\n    return nlpToken ? {\n      ...nlpToken,\n      // hintNode,\n      hintPath,\n    } : undefined\n  }).filter(l => l !== undefined) as NLPLabel[]\n}\n\nexport function addVisData(editor: SPEditor, nlpLabels: SpacyRet[], sentence?: SplitSentence) {\n  if (!sentence?.sentence) return []\n\n  return sentence?.tokens.map((p, token_idx) => {\n    const { token, path } = p\n\n    // get the bounding box of the token\n    let bbox: DOMRect\n    if (path.path.length < 3) {\n      const range = ReactEditor.toDOMRange(editor as any, {\n        anchor: { path: path.path, offset: path.offset - token.length },\n        focus: { path: path.path, offset: path.offset },\n      })\n      bbox = range?.getBoundingClientRect()\n    } else {\n      const [parentNode] = Editor.parent(editor, path.path)\n      // this should be a hint node\n      console.log('parentNode', parentNode)\n      const dom = ReactEditor.toDOMNode(editor as any, parentNode)\n      bbox = dom.getBoundingClientRect()\n    }\n\n    const nlpLabel = nlpLabels.find(t => t.token_idx === token_idx)\n    return nlpLabel ? {\n      ...nlpLabel,\n      x: bbox.x,\n      y: bbox.y,\n    } : undefined\n  }).filter(l => l !== undefined) as VisLabel[]\n}\n\nexport function findByIdx(idx: number, labels: NLPLabel[]) {\n  return labels.find(l => l.token_idx === idx)\n}\n\nexport function headOf(idx: number, labels: NLPLabel[]): NLPLabel | undefined;\nexport function headOf(label: NLPLabel, labels: NLPLabel[]): NLPLabel | undefined;\nexport function headOf(query: number | NLPLabel, labels: NLPLabel[]) {\n  return (typeof query === 'number')\n    ? labels.find(l => l.token_idx === findByIdx(query, labels)?.head_idx)\n    : labels.find(l => l.token_idx === query.head_idx)\n}\n\nexport function headsOf(label: NLPLabel, labels: NLPLabel[]) {\n  const heads: NLPLabel[] = []\n  let head = headOf(label, labels)\n  let count = 0\n  while (head) {\n    heads.push(head)\n    if (head.dep === 'ROOT') break\n\n    head = headOf(head, labels)\n    ++count\n    if (count > 100) {\n      console.error('Try too many times to get the head', head)\n      break\n    }\n  }\n  console.log('heads', heads)\n  return heads\n}\n\nexport function childrenOf(token: NLPLabel, tokens: NLPLabel[]) {\n  return tokens.filter(l => l.head_idx === token.token_idx)\n}\nexport function attrChildrenOf(token: NLPLabel, tokens: NLPLabel[], editor: SPEditor) {\n  return childrenOf(token, tokens).filter(l => {\n    const [hintNode] = Editor.node(editor, l.hintPath || [])\n    return isHintNode(hintNode) && hintNode.dataType === 'attr'\n  })\n}\n\nexport function getHintNode(token: NLPLabel, editor: SPEditor) {\n  if (!token.hintPath) return\n  const [hintNode] = Editor.node(editor, token.hintPath || [])\n  if (!isHintNode(hintNode)) {\n    console.warn('Path ', token, ' is not a HintNode')\n    return\n  }\n  return hintNode\n}\n\n/**\n * @todo maybe need to remove duplicate attrs\n * @param token \n * @param tokens \n * @returns \n */\nexport function flatAttrChildrenOf(token: NLPLabel, tokens: NLPLabel[], editor: SPEditor): Array<{ token: NLPLabel, attr: NLPLabel }> {\n  const directChild = attrChildrenOf(token, tokens, editor)\n    .flatMap(attr => {\n      const conjAttrTokens = attr.conjuncts\n        .map(ct => findByIdx(ct.token_idx, tokens))\n        .filter(ct => ct !== undefined) as NLPLabel[]\n      return [\n        { token: attr, attr },\n        ...conjAttrTokens.map(cattr => ({ token: attr, attr: cattr }))\n      ]\n    })\n\n  // prep + attr\n  const children = childrenOf(token, tokens)\n    .flatMap(child => {\n      // need to get all children with prep + attr\n      const prepChildren = childrenOf(child, tokens).filter(cc => cc.dep === 'prep')\n      return prepChildren.flatMap(prepChild => attrChildrenOf(prepChild, tokens, editor))\n        .map(prepAttr => ({ attr: prepAttr, token: child }))\n\n    })\n\n  return [...directChild, ...children]\n}\n\nexport function valueChildrenOf(label: NLPLabel, tokens: NLPLabel[], editor: SPEditor) {\n  return childrenOf(label, tokens)\n    .filter(l => {\n      const [hintNode] = Editor.node(editor, l.hintPath || [])\n      return isHintNode(hintNode) && hintNode.dataType === 'value'\n    })\n}\n\nexport function getCurrentSentence(selection: BaseRange, editor: BaseEditor): [number, SplitSentence[]] {\n  const cursor = Range.start(selection);\n\n  // get the current sentence\n  const [parentNode, parentPos] = Editor.parent(editor!, selection.anchor.path)\n\n  // 0. iterate all text node, and concate them to get the text\n  const range = Editor.range(editor, parentPos)\n  const frags: Array<{ path: Path, text: string }> = []\n  for (const [node, path] of Editor.nodes(editor, {\n    at: range,\n    match: Text.isText,\n    voids: true,\n  })) {\n    frags.push({ path, text: node.text })\n  }\n\n  // 1. split the sentences\n  const sentences = splitSentences(frags)\n\n  // 2. find the current sentence\n  const sentenceIdx = sentences.findIndex(s => {\n    const pId = cursor.path.join('_')\n    const point = s.paths[pId]\n    return point && cursor.offset <= point.offset\n  })\n  // console.log('getCurrentSentence:', sentences[sentenceIdx], 'from ', sentences)\n  return [sentenceIdx, sentences]\n}\n\nexport function getDataPhrases(sentence: SplitSentence, editor: Editor) {\n  const dataPhrases = sentence.tokens\n    .reduce((o, p, token_idx) => {\n      const { path } = p\n      if (path.path.length >= 3) {\n        const [parentNode] = Editor.parent(editor, path.path)\n        // this should be a hint node\n        if (isHintNode(parentNode)) {\n          if (!o.includes(parentNode))\n            o.push(parentNode)\n        } else if (isOpNode(parentNode)) {\n          if (!o.includes(parentNode))\n            o.push(parentNode)\n        } else {\n          console.warn('The parentNode is not a hint node!', parentNode)\n        }\n      }\n      return o\n    }, [] as Array<HintNode | OpNode>)\n\n  return dataPhrases\n}\n\n///////////////////////////////////////////\n///////////////////////////////////////////\nexport function flatDataTableToCell(dataItems: DItem[]): Cell[] {\n  return dataItems.flatMap(({ data, rowIdx, id }) => Object.entries(data).map(([attr, v], colIdx) => ({\n    rowId: id, attr, colIdx, rowIdx, value: v.toString()\n  })))\n}\n\n///////////////////////////////////////////\n///////////////////////////////////////////\nexport const debugLog = (label: string, ...content: any[]) =>\n  console.log(`%c ${label}`, 'background: #222; color: #1E90FF', ...content)","import { useCallback, useMemo, useState, KeyboardEvent, useEffect } from 'react';\nimport { Editor, Range, Transforms, BasePoint } from 'slate';\nimport {\n  isCollapsed,\n  isPointAtWordEnd,\n  getRenderElement,\n  getPlatePluginTypes,\n  OnChange,\n  // KeyboardHandler,\n  PlatePlugin,\n  SPEditor,\n  useEventEditorId, useStoreEditorRef,\n} from '@udecode/plate';\nimport { cloneDeep, isEqual } from 'lodash';\n\nimport { insertHint } from './insertHint';\nimport {\n  getPreviousIndex, getNextIndex, NLPParser, addVisData, getCurrentSentence, addHintData, getHintNode, getDataPhrases\n} from './utils';\nimport { stringSearch, newTaskEngine, ITaskNode } from './taskEngine'\nimport { getHintDeserialize } from './getHintDeserialize';\nimport { reactiveUpdate } from './reactiveUpdate';\n\nimport {\n  GetHintSelectProps,\n  HintData,\n  HintPluginOptions,\n  ELEMENT_HINT,\n  PlaceholderHintData,\n  Others,\n} from './types';\nimport { ConstituencyNode, NLPLabel } from '../../../@types';\n\nimport { useCompare } from '../../../App';\nimport { OpNode } from '../operator';\n\ntype KeyboardHandler<T extends SPEditor = SPEditor> = (editor: T) => (event: KeyboardEvent<Element>) => Promise<void | false>\n\ntype HintPluginReturn = { plugin: PlatePlugin; getHintSelectProps: () => GetHintSelectProps; searchValue: string; }\n\nconst pluginKey = ELEMENT_HINT\n\nexport const useAutoHintPlugin = ({\n  // dataTable, \n  rawData,\n  onTab, onSelectHint, onFocusCurSentence, onOthers, onChangeDataPhrases\n}: HintPluginOptions): HintPluginReturn => {\n  // dataTable = useCompare(dataTable)\n  rawData = useCompare(rawData)\n\n  const [targetRange, setTargetRange] = useState<Range | null>(null);\n  const [valueIndex, setValueIndex] = useState(0);\n  const [curTokens, setCurTokens] = useState<{\n    search?: string,\n    nlpTokens: NLPLabel[],\n    constituency: ConstituencyNode | null\n    tab: boolean,\n  }>({ search: '', nlpTokens: [], constituency: null, tab: false })\n  const [curDataPhrases, setCurDataPhrases] = useState<\n    { curIdx: number, sentences: Array<Array<HintData | OpNode>> }>({ curIdx: -1, sentences: [] })\n\n  const editor = useStoreEditorRef(useEventEditorId('focus'));\n\n  // here must evaluate the value\n  const { candidates: hintCandidates, taskTree, others } = useMemo(\n    () => {\n      if (!targetRange || !curTokens) return { candidates: [] }\n      const { nlpTokens, constituency, search, tab } = curTokens\n\n      // how to lock dataset?\n      const hintNodes = nlpTokens.filter(t => t.hintPath).map(t => getHintNode(t, editor!))\n      console.log('hintNode', hintNodes, 'nlpTokens', nlpTokens)\n      let datasetKey\n      if (hintNodes.some(h => h?.datasetId)) {\n        datasetKey = hintNodes.find(h => h?.datasetId)?.datasetId\n      }\n      console.log('=====> datasetKey', datasetKey)\n\n      console.group('Update hintCandidates')\n      // auto-hint, string match\n      let candidates: HintData[] = []\n      let taskTree: ITaskNode | undefined\n      let others: Others | undefined\n      if (search) {\n        console.log('search text:', search)\n        candidates = stringSearch(search, rawData, datasetKey)\n      } else {\n        // no search text, thus the system should give a computed value\n        console.log('NLPLabels', curTokens)\n        // if curTokens contains countries, load another dataset\n        const result = newTaskEngine(nlpTokens, constituency, rawData[datasetKey], rawData, editor!)\n        candidates = result.candidates.map(d => ({ ...d, datasetId: datasetKey }))\n        taskTree = result.taskTree as ITaskNode\n        others = result.others\n      }\n\n      if (tab && candidates.length === 1 && candidates[0].dataType === 'value' && isFinite(+candidates[0].value)) {\n        candidates.push({\n          rowId: '_null',\n          nodeType: 'placeholder',\n          phType: 'RATIO',\n          value: 'RATIO',\n          dataType: 'computed',\n          attr: 'TBD',\n          colIdx: -1,\n          rowIdx: -1,\n          deps: null\n        })\n      }\n\n      // if no candidates, proivde some placeholder for the user\n      if (tab && candidates.length === 0) {\n        // candidates.push()\n        candidates.push({\n          rowId: '_null',\n          nodeType: 'placeholder',\n          phType: 'VALUE',\n          value: 'VALUE',\n          dataType: 'value',\n          attr: 'TBD',\n          colIdx: -1,\n          rowIdx: -1,\n          deps: null,\n        }, {\n          rowId: '_null',\n          nodeType: 'placeholder',\n          phType: 'COUNT_ITEMS',\n          value: 'COUNT_ITEMS',\n          dataType: 'computed',\n          attr: 'TBD',\n          colIdx: -1,\n          rowIdx: -1,\n          deps: null\n        }, {\n          rowId: '_null',\n          nodeType: 'placeholder',\n          phType: 'RATIO',\n          value: 'RATIO',\n          dataType: 'computed',\n          attr: 'TBD',\n          colIdx: -1,\n          rowIdx: -1,\n          deps: null\n        }, {\n          rowId: '_null',\n          nodeType: 'placeholder',\n          phType: 'DIFF_ATTR',\n          value: 'DIFF_ATTR',\n          dataType: 'computed',\n          attr: 'TBD',\n          colIdx: -1,\n          rowIdx: -1,\n          deps: null\n        })\n      }\n\n      console.groupEnd()\n      return { candidates, taskTree, others }\n    },\n    [curTokens, targetRange, editor, rawData]\n  )\n\n  /**\n   * Update the highlighted cell\n   */\n  useEffect(() => {\n    console.group('useEffect onSelectHint')\n    const candidate = hintCandidates[valueIndex]\n    onSelectHint?.(candidate, taskTree, others)\n    console.groupEnd()\n  }, [valueIndex, hintCandidates, taskTree, others, onSelectHint])\n\n  const onKeyDownHint: KeyboardHandler = useCallback((editor) => async (e: KeyboardEvent) => {\n    // a bug here\n    if (targetRange && hintCandidates.length) {\n      switch (e.key) {\n        case 'ArrowDown': {\n          e.preventDefault();\n          const newIdx = getNextIndex(valueIndex, hintCandidates.length - 1)\n          return setValueIndex(newIdx);\n        }\n        case 'ArrowUp': {\n          e.preventDefault();\n          const newIdx = getPreviousIndex(valueIndex, hintCandidates.length - 1)\n          return setValueIndex(newIdx);\n        }\n        case 'Escape': {\n          e.preventDefault();\n          return setTargetRange(null);\n        }\n        case 'Tab':\n        case 'Enter': {\n          e.preventDefault();\n          console.group('To Insert Hints')\n          // insert\n          hintCandidates[valueIndex].selectedIdx = valueIndex\n          if (targetRange !== null) {\n            Transforms.select(editor, targetRange);\n            insertHint(editor, hintCandidates[valueIndex]);\n          }\n\n          // after insert\n\n\n          // 2. update the placeholder\n          if (curTokens) {\n            let { nlpTokens, constituency } = curTokens\n            if (!curTokens.tab) {\n              const { selection } = editor;\n              if (!selection) {\n                console.warn('No selection after insert the hint!')\n                return false\n              }\n              console.log(editor.children)\n              const [sentenceIdx, sentences] = getCurrentSentence(selection, editor)\n              // a hack\n              const sentence = sentences[sentences.length - 1]\n              // 3. parse the sentence\n              const { nlpTokens: newNlpTokens, constituency: newConstituency } = await NLPParser('_placeholder', sentence)\n              // merge with hintData\n              const nlpLabels = addHintData(editor, newNlpTokens, sentence)\n\n              if (!isEqual(curTokens.constituency, newConstituency)) {\n                setCurTokens({\n                  ...curTokens,\n                  nlpTokens: nlpLabels,\n                  constituency: newConstituency, tab: true,\n                })\n                nlpTokens = nlpLabels\n                constituency = newConstituency\n              }\n            }\n\n            // get all placeholder\n            const placeHolder = nlpTokens?.reduce((o, t) => {\n              const hintNode = getHintNode(t, editor)\n              return hintNode?.nodeType === 'placeholder'\n                ? { token: t, hintNode }\n                : o\n            }, null as null | { token: NLPLabel, hintNode: PlaceholderHintData })\n            console.log('placeHolder', placeHolder)\n\n            if (placeHolder) {\n              const vTokens = cloneDeep(nlpTokens)\n              vTokens![vTokens.length - 1].hintPath = [0, editor.children[0].children.length - 2]\n              console.log('vTokens', vTokens)\n\n              let datasetKey\n              const hintNodes = vTokens.filter(t => t.hintPath).map(t => getHintNode(t, editor!))\n              if (hintNodes.some(h => h?.datasetId)) {\n                datasetKey = hintNodes.find(h => h?.datasetId)?.datasetId\n              }\n              console.log('datasetKey for placeholder update', datasetKey)\n\n              // update the value\n              const { returnNode, others } = reactiveUpdate(vTokens!, constituency,\n                placeHolder.hintNode, placeHolder.token.hintPath!,\n                rawData[datasetKey], rawData, editor)\n\n              if (returnNode) {\n                setImmediate(() => {\n                  others && onOthers?.(others, returnNode?.valueFormat)\n                })\n              }\n            }\n          }\n\n          // should update the curDataPhrases\n          const curSentenceDPs = curDataPhrases.sentences[curDataPhrases.curIdx] ?? []\n          if (curDataPhrases.curIdx === -1) {\n            console.warn('The idx of curDataPhrases should not be -1!')\n          }\n          // update the dataPhrases\n          const newCurDataPhrases = {\n            ...curDataPhrases,\n            sentences: [...curDataPhrases.sentences]\n          }\n          newCurDataPhrases.sentences[curDataPhrases.curIdx] = [...curSentenceDPs, hintCandidates[valueIndex]]\n          setCurDataPhrases(newCurDataPhrases)\n\n          const dataPhrases = newCurDataPhrases.sentences\n          onFocusCurSentence?.(dataPhrases[curDataPhrases.curIdx])\n          onChangeDataPhrases?.(dataPhrases.filter(d => d !== undefined && d.length !== 0) as Array<Array<HintData | OpNode>>)\n\n          setTargetRange(null);\n          console.log('finish insertHint')\n          console.groupEnd()\n          return false;\n        }\n      }\n    } else {\n      if (e.key === 'Tab') {\n        e.preventDefault()\n        console.group('Tab fetch')\n\n        const { selection } = editor;\n        if (selection && isCollapsed(selection)) {\n          const cursor = Range.start(selection);\n\n          // Point at the start of line\n          const { mentionRange, afterMatchText } = matchTheLastSpace(editor, cursor);\n\n          if (isPointAtWordEnd(editor, { at: cursor })) {\n            // 2. find the current sentence\n            const [sentenceIdx, sentences] = getCurrentSentence(selection, editor)\n            const sentence = sentences[sentenceIdx]\n            // 3. parse the sentence\n            const { nlpTokens, constituency } = await NLPParser(afterMatchText, sentence)\n            // merge with hintData\n            const nlpLabels = addHintData(editor, nlpTokens, sentence)\n\n            console.log('sentence', sentence)\n            console.log('To set:', 'afterMatchText', afterMatchText)\n            console.log('NlpLabels', nlpLabels, 'nlpTokens', nlpTokens)\n            console.log('Constituency', constituency)\n            setValueIndex(0);\n            if (afterMatchText !== curTokens.search || !isEqual(curTokens.constituency, constituency)) {\n              setCurTokens({\n                search: afterMatchText,\n                nlpTokens: afterMatchText ? nlpLabels : [...nlpLabels, { ...nlpTokens.pop()! }],\n                constituency, tab: true,\n              })\n            }\n            setTargetRange(mentionRange as Range);\n\n            // for visualizing the dependencies, merge with bbox\n            const visLabels = addVisData(editor, nlpTokens, sentence)\n            onTab?.(visLabels, nlpLabels, constituency)\n\n            console.groupEnd()\n            return false;\n          }\n\n          setTargetRange(null);\n          console.groupEnd()\n        }\n      }\n    }\n  }, [targetRange, valueIndex, hintCandidates, curTokens, curDataPhrases, onFocusCurSentence, onChangeDataPhrases, rawData, onOthers, onTab]\n  );\n\n  /**\n   * typing the words\n   */\n  const onChange: OnChange = useCallback((editor) => (inputValue) => {\n    console.log('useHint onChange<====', inputValue)\n    const { selection } = editor;\n    if (!(selection && isCollapsed(selection))) return\n\n    // if already in hint\n    const cursor = Range.start(selection);\n    // Point at the start of line\n    const { mentionRange, afterMatchText } = matchTheLastSpace(editor, cursor);\n    if (isPointAtWordEnd(editor, { at: cursor }) && afterMatchText.length > 1) {\n      console.log('afterMatchText', afterMatchText)\n      setTargetRange(mentionRange as Range);\n      setCurTokens({\n        ...curTokens,\n        // nlpTokens: [], constituency: null,\n        search: afterMatchText, tab: false,\n      })\n      setValueIndex(0);\n    } else {\n      setTargetRange(null);\n    }\n\n    // 1. find the current sentence\n    let [newCurSentenceIdx, sentences] = getCurrentSentence(selection, editor)\n    if (selection.anchor.path[0] === 0 && selection.anchor.path[1] === editor.children[0].children.length - 1) {\n      // ===>should be the last sentence\n      console.log('hack to the last sentence')\n      console.log('newCurSentenceIdx:', newCurSentenceIdx, 'sentences:', sentences)\n      newCurSentenceIdx = sentences.length - 1\n    }\n\n    // if the last sentence end with period, should start a new sentence\n    if (sentences[newCurSentenceIdx]?.sentence.trimEnd().endsWith('.')) {\n      newCurSentenceIdx += 1\n    }\n\n    // get the current data phrase\n    const newDataPhrases = sentences.map(sentence => getDataPhrases(sentence, editor))\n    // use this dataPhrase to calculate which cells should be highlighted\n    const newCurDataPhrases = {\n      curIdx: newCurSentenceIdx,\n      sentences: newDataPhrases\n    }\n    console.log('newCurDataPhrases', newCurDataPhrases)\n    // if all is different\n    const diffAll = !isEqual(newDataPhrases, curDataPhrases.sentences)\n    const diffCur = !isEqual(newDataPhrases[newCurSentenceIdx], curDataPhrases.sentences[curDataPhrases.curIdx])\n    if (diffAll) {\n      onChangeDataPhrases?.(newDataPhrases.filter(d => d !== undefined && d.length !== 0) as Array<Array<HintData | OpNode>>)\n    }\n\n    if (newCurSentenceIdx !== curDataPhrases.curIdx) {\n      // change sentence, should clean the curTokens\n      console.log('========+> change sentence', newCurSentenceIdx)\n      setCurTokens({\n        ...curTokens,\n        nlpTokens: [], constituency: null,\n      })\n    }\n\n    if (diffCur) {\n      // console.log('onChange --> onFocusCurSentence')\n      onFocusCurSentence?.(newDataPhrases[newCurSentenceIdx])\n    }\n    //  if either all or curIdx is differnt\n    if (diffAll || diffCur) {\n      console.log('setCurDataPhrases')\n      setCurDataPhrases(newCurDataPhrases)\n    }\n  }, [curDataPhrases, curTokens, onFocusCurSentence, onChangeDataPhrases])\n\n  return {\n    plugin: useMemo(\n      () => ({\n        pluginKeys: pluginKey,\n        onChange,\n        renderElement: getRenderElement(pluginKey),\n        onKeyDown: onKeyDownHint,\n        deserialize: getHintDeserialize(pluginKey),\n        inlineTypes: getPlatePluginTypes(pluginKey),\n        voidTypes: getPlatePluginTypes(pluginKey),\n      }) as any,\n      [onChange, onKeyDownHint]\n    ),\n\n    getHintSelectProps: useCallback(\n      () => ({\n        at: targetRange,\n        valueIndex,\n        options: hintCandidates,\n      }),\n      [targetRange, valueIndex, hintCandidates]\n    ),\n    searchValue: curTokens.search || '',\n  };\n}\n\nfunction matchTheLastSpace(editor: SPEditor, cursor: BasePoint) {\n  const lineStart = Editor.before(editor, cursor, { unit: 'line' });\n  // Range from before to start\n  const beforeRange = lineStart && Editor.range(editor, lineStart, cursor);\n  // Before text\n  const beforeText = (beforeRange && Editor.string(editor, beforeRange)) ?? '';\n  // Match regex on before text\n  const match = !!beforeText && beforeText.match(/\\s(?=\\S*$)/);\n  const afterMatchText = (match && typeof match?.index === 'number')\n    ? match.input?.slice(match?.index + 1) ?? ''\n    : '';\n  // Point at the start of mention\n  const mentionStart = afterMatchText.length === 0\n    ? cursor\n    : Editor.before(editor, cursor, {\n      unit: 'character',\n      distance: afterMatchText.length,\n    });\n  // Range from mention to start\n  const mentionRange = mentionStart && Editor.range(editor, mentionStart, cursor);\n  return { mentionRange, afterMatchText };\n}\n","import './style.scss'\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ReactEditor, useFocused, useSelected, useSlate } from 'slate-react';\nimport { Editor } from 'slate';\nimport clsx from 'clsx';\n\nimport { HintElementProps } from './types';\nimport { Dropdown, Option } from '../Select';\n\nimport { isDepHintNode, reactiveUpdate, setHintNode } from '../WordProcessor/autoHint';\nimport { DatatableContext } from '..';\n\nexport const HintElement = (props: HintElementProps) => {\n  const {\n    attributes,\n    children,\n    element: hintNode,\n    nodeProps,\n    onSelectOption,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n  } = props\n\n  const { rawData } = useContext(DatatableContext);\n  const [dropDown, setDropDown] = useState<{ value: any, attr: string, options: Option[] }>()\n\n  // can we evalute the hintNode here?\n  const selected = useSelected();\n  const focused = useFocused();\n  const editor = useSlate()\n  const path = ReactEditor.findPath(editor as any, hintNode)\n\n  // const tokens = element.value.split(' ')\n  // const targetIdx = tokens.findIndex(t => t.includes(element.query))\n  useEffect(() => {\n    const onMouseDown = (e: MouseEvent) => {\n      setDropDown(undefined)\n    }\n    document.addEventListener('mousedown', onMouseDown)\n    return () => {\n      document.removeEventListener('mousedown', onMouseDown)\n    }\n  }, [])\n\n  const toolTip = (hintNode.dataType === 'value' && hintNode.colIdx === 0)\n    ? `Item: ${hintNode.value}`\n    : hintNode.dataType === 'value'\n      ? `Value of ${hintNode.attr}`\n      : hintNode.dataType === 'computed'\n        ? 'Computed Value'\n        : `Attr: ${hintNode.attr}`\n\n  return (\n    <>\n      <span\n        id={`io_${hintNode.id}`}\n        {...attributes}\n        data-slate-value={hintNode.value}\n        data-tooltip={toolTip} data-tooltip-position=\"top\"\n        className={clsx('slate-HintElement', { selected, focused }, hintNode.nodeType)}\n        contentEditable={false}\n        onMouseDown={(e) => onMouseDown?.(e, hintNode, path)}\n        onMouseUp={(e) => onMouseUp?.(e, hintNode, path)}\n        onDoubleClick={(e) => onDoubleClick?.(e, hintNode, path)}\n        onClick={(e) => {\n          onClick?.(e, hintNode, path)\n\n          if (hintNode.nodeType === 'indep') {\n            console.log('click on indep', hintNode)\n            const dataTable = rawData[hintNode.datasetId]\n            const options = {\n              value: hintNode.value,\n              attr: hintNode.attr!,\n              options: hintNode.dataType === 'value'\n                ? dataTable.map((d, idx) => ({ value: d.data[hintNode.attr!], idx }))\n                  .reduce((o, d) => {\n                    if (!o.some(t => t.value === d.value)) {\n                      o.push(d)\n                    }\n                    return o\n                  }, [] as Option[])\n                : (hintNode.colIdx !== 0 && hintNode.attr !== 'region')\n                  ? Object.keys(dataTable[0].data)\n                    .map((key, idx) => ({ value: key, idx }))\n                    .filter(({ idx }) => idx !== 0)\n                  : []\n            }\n            if (options.options.length)\n              setDropDown(options)\n          }\n        }}\n        {...nodeProps}\n      >\n        {/* {renderLabel(element)} */}\n        {hintNode.children[0].text}\n        {/** must render this children */}\n        {children}\n\n        {dropDown && <div\n          style={{ position: 'absolute', display: 'inline', left: 0, top: '20px' }}\n          onMouseDown={e => e.stopPropagation()}\n        >\n          <Dropdown\n            value={dropDown.value}\n            options={dropDown.options}\n            onChange={newOption => {\n              console.group('Select From Dropdown ===>')\n              console.debug('newOption:', newOption)\n              let returnNode, others\n              if (hintNode.dataType === 'value') {\n                console.group('Change a value hintNode')\n                const dataTable = rawData[hintNode.datasetId]\n                const newData = dataTable[newOption.idx]\n\n                console.group('Update the value of the hintNode')\n                console.debug('newData', newData, 'path', path, newData.data[hintNode.attr])\n                setHintNode(editor, {\n                  rowIdx: newData.rowIdx,\n                  rowId: newData.id,\n                  value: newData.data[hintNode.attr]\n                }, path)\n                console.groupEnd()\n\n                // should then trigger some reactive update\n                console.group('Triger reactive update')\n                for (const [node, nodePath] of Editor.nodes(editor, { at: [path[0]], match: isDepHintNode, voids: true })) {\n                  // re-evaluate\n                  console.log('hintNode re-evaluate', node)\n                  if (!node.deps) {\n                    console.warn('Dep node has no deps', node)\n                    continue\n                  }\n                  const result = reactiveUpdate(node.deps.tokens, node.deps.constituency, node as any, nodePath, dataTable, rawData, editor as any)\n                  returnNode = result.returnNode\n                  others = result.others\n                }\n                console.groupEnd()\n\n                console.groupEnd()\n              } else if (hintNode.dataType === 'attr' && hintNode.colIdx !== 0) {\n                console.group('Change a attr hintNode')\n                const dataTable = rawData[hintNode.datasetId]\n                const newAttr = Object.keys(dataTable[0].data)[newOption.idx]\n\n                console.group('Update the attr of the hintNode')\n                console.debug('newAttr', newAttr, 'path', path)\n                setHintNode(editor, {\n                  attr: newAttr,\n                  value: newAttr,\n                }, path)\n                console.groupEnd()\n\n                // should then trigger some reactive update\n                console.group('Triger reactive update')\n                for (const [node, nodePath] of Editor.nodes(editor, { at: [path[0]], match: isDepHintNode, voids: true })) {\n                  // re-evaluate\n                  console.log('hintNode re-evaluate', node)\n                  if (!node.deps) {\n                    console.warn('Dep node has no deps', node)\n                    continue\n                  }\n                  const result = reactiveUpdate(node.deps.tokens, node.deps.constituency, node as any, nodePath, dataTable, rawData, editor as any)\n                  returnNode = result.returnNode\n                  others = result.others\n\n                }\n                console.groupEnd()\n                console.groupEnd()\n              }\n\n              onSelectOption?.({ returnNode, others }, hintNode, path)\n              setDropDown(undefined)\n              console.groupEnd()\n            }}\n          >\n          </Dropdown>\n        </div>}\n      </span>\n    </>\n  );\n}\n\nexport * from './types'","import \"./style.scss\"\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { PortalBody } from '@udecode/plate-styled-components';\nimport {\n  useEventEditorId,\n  useStoreEditorRef\n} from '@udecode/plate-core';\nimport { ReactEditor } from 'slate-react';\nimport clsx from 'clsx';\n\nimport { HintSelectProps } from './types';\n\nexport const HintSelect = (props: HintSelectProps) => {\n  const {\n    at,\n    options,\n    valueIndex,\n    onClickHint,\n  } = props\n\n  const ref: any = useRef();\n  const editor = useStoreEditorRef(useEventEditorId('focus'));\n\n  useEffect(() => {\n    if (at && options.length > 0) {\n      const el = ref.current;\n      const domRange = ReactEditor.toDOMRange(editor!, at);\n      const rect = domRange.getBoundingClientRect();\n      if (el) {\n        el.style.top = `${rect.top + window.pageYOffset + 24}px`;\n        el.style.left = `${rect.left + window.pageXOffset}px`;\n      }\n    }\n  }, [options.length, editor, at]);\n\n  if (!at || !options.length) {\n    return null;\n  }\n\n  const renderPreview = () => {\n    const option = options[valueIndex]\n\n    let imgSrc = ''\n    if (option && 'datasetId' in option) {\n      switch (option['datasetId']) {\n        case 'trainingData':\n          imgSrc = 'pTTable.png'\n          break\n        case 'trainingData2':\n          imgSrc = 'pTChart.png'\n          break\n        case 'reProductionMap':\n          imgSrc = 'pMap.png'\n          break\n        case 'reProductionData':\n          imgSrc = 'pLine.png'\n          break\n        case 'lastWeekByRegion':\n          imgSrc = 'pMTable.png'\n          break\n        case 'lastWeekByRegion2':\n          imgSrc = 'pMChart.png'\n          break\n        case 'lastWeekByCountry':\n          imgSrc = 'pMMap.png'\n          break\n      }\n    }\n\n    return imgSrc ? <div className={'hintPreview'}>\n      <img src={`${process.env.PUBLIC_URL}/${imgSrc}`}>\n      </img>\n    </div> : ''\n  }\n\n  return (\n    <PortalBody>\n      <div ref={ref}\n        className={clsx('slate-HintSelect')}>\n        {options.map((option, i) => {\n          const tokens = option.value.split(' ').flatMap(s => s.split('_'))\n          const targetIdx = option.nodeType !== 'indep'\n            ? 0\n            : tokens.findIndex((t: string) => t.toLowerCase().includes(option.query.toLowerCase()))\n\n          return <div\n            key={`${option.rowIdx}_${option.value}_${('datasetId' in option) ? option['datasetId'] : ''}`}\n            className={clsx('hint-item', { selected: i === valueIndex })}\n          >\n            <span className={'value'}>\n              {tokens.slice(0, targetIdx).join(' ') + ' '}\n              {<span className=\"query\">{tokens[targetIdx]}</span>}\n              {' ' + tokens.slice(targetIdx + 1).join(' ')}\n            </span>\n            <span className={'more'}>{option.attr}</span>\n            {/* {renderLabel(option)} */}\n          </div>\n        })}\n        {renderPreview()}\n      </div>\n    </PortalBody>\n  );\n}","import './style.scss'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { OpNodeData } from '../WordProcessor/operator'\nimport { StyledElementProps } from '@udecode/plate-styled-components';\n\nimport { Dropdown, Option } from '../Select';\nimport clsx from 'clsx';\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { Editor, Transforms } from 'slate';\nimport { getHintNode, isDepHintNode, reactiveUpdate } from '../WordProcessor/autoHint';\nimport { DatatableContext } from '../WordProcessor';\nimport { NLPLabel } from '../../@types';\n\nexport const OpElement = (props: StyledElementProps<OpNodeData>) => {\n  const { attributes, children, element: opNode, nodeProps } = props;\n  const [dropDown, setDropDown] = useState<{ value: any, options: Option[] }>()\n  const [alt, setAlt] = useState(false)\n  const { rawData } = useContext(DatatableContext);\n  const editor = useSlate()\n  const path = ReactEditor.findPath(editor as any, opNode)\n\n\n  useEffect(() => {\n    const onMouseDown = (e: MouseEvent) => {\n      setDropDown(undefined)\n    }\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Alt') {\n        setAlt(true)\n      }\n    }\n    const onKeyUp = (e: KeyboardEvent) => {\n      setAlt(false)\n    }\n    document.addEventListener('keydown', onKeyDown)\n    document.addEventListener('keyup', onKeyUp)\n    document.addEventListener('mousedown', onMouseDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n      document.removeEventListener('keyup', onKeyUp)\n      document.removeEventListener('mousedown', onMouseDown)\n    }\n  }, [])\n\n  return (\n    <a\n      {...attributes}\n      data-tooltip={opNode.opType}\n      data-tooltip-position=\"top\"\n      // href={element.opKey}\n      className={clsx('OpElement', { alt, selected: dropDown !== undefined })}\n      {...nodeProps}\n      onClick={e => {\n        if (alt) {\n          if (opNode.opType === 'computed') {\n            const options = {\n              value: opNode.opKey,\n              options: ['total', 'average'].map((t, idx) => ({ idx, value: t }))\n            }\n            setDropDown(options)\n          } else if (opNode.opType === 'extreme') {\n            const options = {\n              value: opNode.opKey,\n              options: ['maximum', 'highest', 'minimum', 'lowest'].map((t, idx) => ({ idx, value: t }))\n            }\n            setDropDown(options)\n          }\n        }\n      }}\n    >\n      {children}\n\n      {dropDown && <div\n        style={{ position: 'absolute', display: 'inline', left: 0, top: '20px' }}\n        onMouseDown={e => e.stopPropagation()}\n      >\n        <Dropdown\n          value={dropDown.value}\n          options={dropDown.options}\n          onChange={newOption => {\n            console.group('Select From Dropdown ===>')\n            console.debug('newOption:', newOption)\n\n\n            if (opNode.opType === 'computed' || opNode.opType === 'extreme') {\n              console.group('Change a computed opNode')\n              console.debug('newData', 'path', path)\n              Transforms.setNodes(editor, { opKey: newOption.value } as any, { at: path })\n              Transforms.insertText(editor, newOption.value, { at: [...path, 0], voids: true })\n\n              // should then trigger some reactive update\n              console.group('Triger reactive update')\n              for (const [node, nodePath] of Editor.nodes(editor, { at: [path[0]], match: isDepHintNode, voids: true })) {\n                // re-evaluate\n                console.log('hintNode re-evaluate', node)\n                if (!node.deps) {\n                  console.warn('Dep node has no deps', node)\n                  continue\n                }\n                const datasetKey = node.deps.tokens.filter(t => t.hintPath)\n                  .map(t => getHintNode(t, editor as any))\n                  .find(h => h?.datasetId)?.datasetId\n                const dataTable = rawData[datasetKey]\n                console.log(datasetKey)\n                // should update the tokens\n                // string match\n                const tokens = (node.deps.tokens as NLPLabel[]).map(token => {\n                  if (token.text === opNode.children[0].text) {\n                    return { ...token, text: newOption.value, lemma: newOption.value }\n                  }\n                  return token\n                }) as NLPLabel[]\n                const result = reactiveUpdate(tokens, node.deps.constituency, node as any, nodePath, dataTable, rawData, editor as any)\n                // returnNode = result.returnNode\n                // others = result.others\n\n              }\n              console.groupEnd()\n\n\n              setDropDown(undefined)\n              console.groupEnd()\n            }\n          }}\n        >\n        </Dropdown>\n      </div>}\n    </a>\n  );\n};","import {\n  createPlateOptions,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_CODE_BLOCK,\n  ELEMENT_PARAGRAPH,\n  ELEMENT_TD,\n  ELEMENT_TODO_LI,\n  ExitBreakPluginOptions,\n  isBlockAboveEmpty,\n  isSelectionAtBlockStart,\n  KEYS_HEADING,\n  ResetBlockTypePluginOptions,\n  SoftBreakPluginOptions,\n} from '@udecode/plate';\nimport { HintData } from './autoHint';\n\nexport const options = createPlateOptions();\n\nexport const renderHintLabel = (hintable: HintData) => {\n  if (!hintable) return 'unknown option'\n\n  // if(!hintable.date) {\n  //   return hintable.value\n  // } \n  // return hintable.date.toISOString().slice(0, 10)\n  return 'renderHintLabel not implement'\n}\n\nconst resetBlockTypesCommonRule = {\n  types: [options[ELEMENT_BLOCKQUOTE].type, options[ELEMENT_TODO_LI].type],\n  defaultType: options[ELEMENT_PARAGRAPH].type,\n};\n\nexport const optionsResetBlockTypePlugin: ResetBlockTypePluginOptions = {\n  rules: [\n    {\n      ...resetBlockTypesCommonRule,\n      hotkey: 'Enter',\n      predicate: isBlockAboveEmpty,\n    },\n    {\n      ...resetBlockTypesCommonRule,\n      hotkey: 'Backspace',\n      predicate: isSelectionAtBlockStart,\n    },\n  ],\n};\n\nexport const optionsSoftBreakPlugin: SoftBreakPluginOptions = {\n  rules: [\n    { hotkey: 'shift+enter' },\n    {\n      hotkey: 'enter',\n      query: {\n        allow: [\n          options[ELEMENT_CODE_BLOCK].type,\n          options[ELEMENT_BLOCKQUOTE].type,\n          options[ELEMENT_TD].type,\n        ],\n      },\n    },\n  ],\n};\n\nexport const optionsExitBreakPlugin: ExitBreakPluginOptions = {\n  rules: [\n    {\n      hotkey: 'mod+enter',\n    },\n    {\n      hotkey: 'mod+shift+enter',\n      before: true,\n    },\n    {\n      hotkey: 'enter',\n      query: {\n        start: true,\n        end: true,\n        allow: KEYS_HEADING,\n      },\n    },\n  ],\n};\n\nexport const editableProps = {\n  // placeholder: 'Enter some rich text…',\n  spellCheck: false,\n  autoFocus: true,\n};","import React from 'react';\n// import { CodeAlt } from '@styled-icons/boxicons-regular/CodeAlt';\n// import { CodeBlock } from '@styled-icons/boxicons-regular/CodeBlock';\nimport { BorderAll } from '@styled-icons/material/BorderAll';\nimport { BorderBottom } from '@styled-icons/material/BorderBottom';\nimport { BorderClear } from '@styled-icons/material/BorderClear';\nimport { BorderLeft } from '@styled-icons/material/BorderLeft';\nimport { BorderRight } from '@styled-icons/material/BorderRight';\nimport { BorderTop } from '@styled-icons/material/BorderTop';\nimport { FormatAlignCenter } from '@styled-icons/material/FormatAlignCenter';\nimport { FormatAlignJustify } from '@styled-icons/material/FormatAlignJustify';\nimport { FormatAlignLeft } from '@styled-icons/material/FormatAlignLeft';\nimport { FormatAlignRight } from '@styled-icons/material/FormatAlignRight';\nimport { FormatBold } from '@styled-icons/material/FormatBold';\nimport { FormatItalic } from '@styled-icons/material/FormatItalic';\nimport { FormatListBulleted } from '@styled-icons/material/FormatListBulleted';\nimport { FormatListNumbered } from '@styled-icons/material/FormatListNumbered';\n// import { FormatQuote } from '@styled-icons/material/FormatQuote';\n// import { FormatStrikethrough } from '@styled-icons/material/FormatStrikethrough';\nimport { FormatUnderlined } from '@styled-icons/material/FormatUnderlined';\nimport { Looks3 } from '@styled-icons/material/Looks3';\nimport { Looks4 } from '@styled-icons/material/Looks4';\nimport { Looks5 } from '@styled-icons/material/Looks5';\nimport { Looks6 } from '@styled-icons/material/Looks6';\nimport { LooksOne } from '@styled-icons/material/LooksOne';\nimport { LooksTwo } from '@styled-icons/material/LooksTwo';\nimport { TippyProps } from '@tippyjs/react';\nimport {\n  addColumn,\n  addRow,\n  BalloonToolbar,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  ELEMENT_ALIGN_CENTER,\n  ELEMENT_ALIGN_JUSTIFY,\n  ELEMENT_ALIGN_RIGHT,\n  // ELEMENT_BLOCKQUOTE,\n  // ELEMENT_CODE_BLOCK,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n  ELEMENT_OL,\n  ELEMENT_UL,\n  insertTable,\n  MARK_BOLD,\n  // MARK_CODE,\n  MARK_ITALIC,\n  // MARK_KBD,\n  // MARK_STRIKETHROUGH,\n  // MARK_SUBSCRIPT,\n  // MARK_SUPERSCRIPT,\n  MARK_UNDERLINE,\n  ToolbarAlign,\n  // ToolbarCodeBlock,\n  ToolbarElement,\n  ToolbarList,\n  ToolbarMark,\n  ToolbarTable,\n  useEventEditorId,\n  useStoreEditorRef,\n  // getSlatePluginType,\n  getPlatePluginType,\n} from '@udecode/plate';\n\nexport const ToolbarButtonsBasicElements = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H1)}\n        icon={<LooksOne />}\n      />\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H2)}\n        icon={<LooksTwo />}\n      />\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H3)}\n        icon={<Looks3 />}\n      />\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H4)}\n        icon={<Looks4 />}\n      />\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H5)}\n        icon={<Looks5 />}\n      />\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H6)}\n        icon={<Looks6 />}\n      />\n      {/* <ToolbarElement\n                type={getSlatePluginType(editor, ELEMENT_BLOCKQUOTE)}\n                icon={<FormatQuote />}\n            /> */}\n      {/* <ToolbarCodeBlock\n                type={getSlatePluginType(editor, ELEMENT_CODE_BLOCK)}\n                icon={<CodeBlock />}\n            /> */}\n    </>\n  )\n}\n\nexport const ToolbarButtonsList = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarList\n        type={getPlatePluginType(editor, ELEMENT_UL)}\n        icon={<FormatListBulleted />}\n      />\n      <ToolbarList\n        type={getPlatePluginType(editor, ELEMENT_OL)}\n        icon={<FormatListNumbered />}\n      />\n    </>\n  )\n}\n\nexport const ToolbarButtonsAlign = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarAlign icon={<FormatAlignLeft />} />\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_CENTER)}\n        icon={<FormatAlignCenter />}\n      />\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_RIGHT)}\n        icon={<FormatAlignRight />}\n      />\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_JUSTIFY)}\n        icon={<FormatAlignJustify />}\n      />\n    </>\n  )\n}\n\nexport const ToolbarButtonsBasicMarks = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_BOLD)}\n        icon={<FormatBold />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_ITALIC)}\n        icon={<FormatItalic />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_UNDERLINE)}\n        icon={<FormatUnderlined />}\n      />\n      {/* <ToolbarMark\n                type={getSlatePluginType(editor, MARK_STRIKETHROUGH)}\n                icon={<FormatStrikethrough />}\n            /> */}\n      {/* <ToolbarMark\n                type={getSlatePluginType(editor, MARK_CODE)}\n                icon={<CodeAlt />}\n            /> */}\n      {/* <ToolbarMark\n                type={getSlatePluginType(editor, MARK_SUPERSCRIPT)}\n                clear={getSlatePluginType(editor, MARK_SUBSCRIPT)}\n                icon={<Superscript />}\n            />\n            <ToolbarMark\n                type={getSlatePluginType(editor, MARK_SUBSCRIPT)}\n                clear={getSlatePluginType(editor, MARK_SUPERSCRIPT)}\n                icon={<Subscript />}\n            /> */}\n    </>\n  )\n}\n\nexport const ToolbarButtonsTable = () => (\n  <>\n    <ToolbarTable icon={<BorderAll />} transform={insertTable} />\n    <ToolbarTable icon={<BorderClear />} transform={deleteTable} />\n    <ToolbarTable icon={<BorderBottom />} transform={addRow} />\n    <ToolbarTable icon={<BorderTop />} transform={deleteRow} />\n    <ToolbarTable icon={<BorderLeft />} transform={addColumn} />\n    <ToolbarTable icon={<BorderRight />} transform={deleteColumn} />\n  </>\n)\n\nexport const BallonToolbarMarks = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  const arrow = false\n  const theme = 'dark'\n  const direction = 'top'\n  const hiddenDelay = 0\n  const tooltip: TippyProps = {\n    arrow: true,\n    delay: 0,\n    duration: [200, 0],\n    hideOnClick: false,\n    offset: [0, 17],\n    placement: 'top',\n  }\n\n  return (\n    <BalloonToolbar\n      direction={direction}\n      hiddenDelay={hiddenDelay}\n      theme={theme}\n      arrow={arrow}\n    >\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_BOLD)}\n        icon={<FormatBold />}\n        tooltip={{ content: 'Bold (⌘B)', ...tooltip }}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_ITALIC)}\n        icon={<FormatItalic />}\n        tooltip={{ content: 'Italic (⌘I)', ...tooltip }}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_UNDERLINE)}\n        icon={<FormatUnderlined />}\n        tooltip={{ content: 'Underline (⌘U)', ...tooltip }}\n      />\n    </BalloonToolbar>\n  )\n}","export * from './getHintDeserialize';\nexport * from './types';\nexport * from './useAutoHint';\nexport * from './insertHint';\nexport * from './utils';\nexport * from './taskEngine/TaskNode'\nexport * from './reactiveUpdate'","import {\n    ELEMENT_PARAGRAPH,\n    withPlaceholders,\n} from '@udecode/plate';\n\nexport const withStyledPlaceHolders = (components: any) =>\n    withPlaceholders(components, [\n        {\n            key: ELEMENT_PARAGRAPH,\n            placeholder: 'Type a paragraph',\n            hideOnBlur: true,\n        }\n    ]);","import './style.scss'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport * as d3 from 'd3'\nimport { chunk, cloneDeep, uniq } from 'lodash'\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nimport { DItem } from '../../@types'\nimport { HintData } from '../WordProcessor/autoHint'\nimport { useCompare } from '../../App'\nimport { isOpNode, OpNode } from '../WordProcessor/operator'\n\ninterface Props {\n  data: DItem[]\n  focused?: Array<HintData | OpNode>\n  allDataPhrases?: Array<Array<HintData | OpNode>>\n  onUpdateBrush?: (from: string, to: string) => void\n}\n\n// const focusHeight = 110\nconst height = 400\nconst width = 700\nconst margin = { top: 20, right: 20, bottom: 30, left: 40 }\n\nconst xAxis = (g, x) => g\n  .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n  .call(d3.axisBottom(x).tickSizeOuter(0)\n    .tickValues(\n      x.domain()\n        .filter((d, i) => !(i % 7))\n    )\n    .tickFormat((d, i) => {\n      return `W${i}` // d.toString().slice(5)\n    })\n  )\n  .call(g => g.selectAll(\".domain\").remove())\n\nconst yAxis = (g, y) => g\n  .attr(\"transform\", `translate(${margin.left},0)`)\n  .call(d3.axisLeft(y).ticks(null, \"s\"))\n  .call(g => g.selectAll(\".domain\").remove())\n\n\nexport const Chart = React.memo((props: Props) => {\n  let { focused = [], allDataPhrases = [] } = props\n  focused = useCompare(focused)\n  allDataPhrases = useCompare(allDataPhrases)\n  const data = useCompare(props.data ?? [])\n  const dataField = 'new_cases'\n\n  const [groupBy, setGroupBy] = useState<'daily' | 'weekly' | null>(null)\n  const [hlRegionOptions, setHLRegionOptions] = useState<string[] | null>(null)\n  const [hlRegion, setHLRegion] = useState<string | null>(null)\n  const svgRef = useRef<SVGSVGElement | null>(null)\n\n  const { series, items } = useMemo(() => {\n    // get the new_cases data\n    let items = data.map(item => ({\n      ...item,\n      data: Object.keys(item.data).reduce((o, k) => {\n        if (k === 'date') o[k] = item.data[k]\n        else o[k] = item.data[k][dataField]\n        return o\n      }, {})\n    }))\n    // either change to weekly\n    const byWeek = groupBy === null\n      ? focused.some(d => isOpNode(d) && d.opKey === 'week')\n      : groupBy\n    if (byWeek === true || byWeek === 'weekly') {\n      const chunkItems = chunk(items, 7)\n      items = chunkItems.map((chunk, idx) => {\n        const data = chunk.reduce((o, item) => {\n          if (Object.keys(o).length === 0) {\n            o = { ...item.data }\n          } else {\n            Object.keys(item.data)\n              .forEach(k => {\n                if (k !== 'date') o[k] += item.data[k]\n              })\n          }\n          return o\n        }, {} as Record<string, any>)\n\n        return { id: data['date'], rowIdx: idx, virtualAttr: [], data } as DItem\n      })\n    }\n\n    // or highlight the specific region\n    const highlightedRegions = hlRegion === null\n      ? focused.filter(d => d.attr === 'region' && d.dataType === 'value').map(d => d.value)\n      : hlRegion === 'all' ? [] : [hlRegion]\n    const regions = [\n      ...highlightedRegions,\n      ...Object.keys(items[0]?.data || {}).slice(1).filter(r => !highlightedRegions.includes(r))\n    ]\n\n    const series = d3.stack()\n      .keys(regions)(items.map(d => d.data))\n      .map(d => {\n        d['highlighted'] = highlightedRegions.length > 0 ? highlightedRegions.includes(d.key) : true\n        return d\n      }) || []\n\n    return { series, items }\n  }, [data, focused, groupBy, hlRegion])\n\n  useEffect(() => {\n    const flatDataPhrases = allDataPhrases.flatMap(d => d)\n    const byWeek = flatDataPhrases.some(d => isOpNode(d) && d.opKey === 'week')\n    setGroupBy(byWeek ? 'weekly' : null)\n\n    const highlightedRegions = uniq(flatDataPhrases.filter(d => d.attr === 'region' && d.dataType === 'value').map(d => d.value))\n    setHLRegionOptions(highlightedRegions.length ? highlightedRegions : null)\n    setHLRegion(highlightedRegions.length ? highlightedRegions[highlightedRegions.length - 1] : null)\n  }, [allDataPhrases])\n\n  const x = d3.scaleBand()\n    .domain([...items].reverse().map(d => d.data['date'] as string))\n    .range([margin.left, width - margin.right])\n    .padding(0.1)\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(series, d => d3.max(d, d => d[1])) as number])\n    .rangeRound([height - margin.bottom, margin.top])\n\n  const brushed = ({ selection }) => {\n    if (selection) {\n      const domain = x.domain();\n      const paddingOuter = x(domain[0]) || 0;\n      const eachBand = x.step();\n\n      const [minX, maxX] = selection.map(v => {\n        const index = Math.floor((v - paddingOuter) / eachBand)\n        return domain[Math.max(0, Math.min(index, domain.length - 1))];\n      })\n      // console.log('minX', minX, 'maxX', maxX)\n      props.onUpdateBrush?.(minX, maxX)\n    }\n  }\n\n  function brushended(this: any, { sourceEvent, selection }) {\n    if (!sourceEvent) return;\n  }\n\n  const brush = d3.brushX<any>()\n    .extent([[margin.left, margin.top], [width - margin.right, height - margin.bottom]])\n    .on(\"brush\", brushed)\n    .on(\"end\", brushended);\n\n  const gb = d3.select(svgRef.current)\n    .select<SVGGElement>('g#brush')\n    .call(brush)\n\n  useEffect(() => {\n    d3.select(svgRef.current)\n      .select('g#gx')\n      .call(xAxis, x);\n\n    d3.select(svgRef.current)\n      .select('g#gy')\n      .call(yAxis, y)\n\n  }, [svgRef, x, y])\n\n  // brush\n  useEffect(() => {\n    console.log('Chart focused', focused)\n    const dates = focused.filter(f => f.attr === 'date')\n    if (dates.length === 0) return\n\n    // create selection\n    if (dates.length === 1) {\n      dates.push(cloneDeep(dates[0]))\n    }\n\n    // calculate the extent\n    const defaultSelection = [x(dates[0].value), x(dates[1].value)];\n\n    // move the brush\n    gb.call(brush.move, defaultSelection);\n  }, [brush.move, focused, gb, x])\n\n  const color = d3.scaleOrdinal<string>()\n    .domain(Object.keys(data[0]?.data || {}).slice(1))\n    .range(d3.schemeSpectral[6]) // dirty hack\n    .unknown(\"#ccc\")\n\n  return <div className=\"chartWrapper\">\n    <div className=\"controls\">\n      {groupBy &&\n        <ToggleButtonGroup\n          size=\"small\"\n          exclusive\n          aria-label=\"data-basis\"\n          value={groupBy}\n          onChange={(_, v) => { setGroupBy(v) }}\n        >\n          <ToggleButton value=\"daily\" aria-label=\"left aligned\">\n            {\"Daily\"}\n          </ToggleButton>\n          <ToggleButton value=\"weekly\" aria-label=\"centered\">\n            {\"Weekly\"}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      }\n\n      {hlRegionOptions &&\n        <FormControl style={{ minWidth: '80px' }} size=\"small\" variant='outlined'>\n          <InputLabel id=\"select-outlined-label\">Region</InputLabel>\n          <Select\n            labelId=\"select-outlined-label\"\n            id=\"simple-select-outlined\"\n            value={hlRegion}\n            onChange={(e) => {\n              console.log('highlight region', e.target.value)\n              const value: string = e.target.value as string\n              setHLRegion(value)\n            }}\n            displayEmpty\n            label=\"Region\"\n          >\n            <MenuItem value={'all'}>All</MenuItem>\n            {hlRegionOptions.map(r => <MenuItem value={r}>{r}</MenuItem>)}\n          </Select>\n        </FormControl>\n      }\n    </div>\n\n    <svg id=\"vis\" ref={svgRef} viewBox={`0 0 ${width} ${height}`} className={'chart'}>\n      {series.map(serie => {\n        return <g key={serie.key} fill={color(serie.key)} opacity={serie['highlighted'] ? 1 : 0.4}>\n          {serie.map(d => {\n            return <rect\n              key={`${d.data['date']}_${serie.key}`}\n              className={'bar'}\n              x={`${x(d.data['date'].toString())}`}\n              y={`${y(d[1])}`}\n              height={`${y(d[0]) - y(d[1])}`}\n              width={`${x.bandwidth()}`}\n            >\n            </rect>\n          })}\n        </g>\n      })}\n      <g id=\"gx\"></g>\n      <g id=\"gy\"></g>\n      <g id=\"brush\"></g>\n    </svg>\n  </div>\n})\nChart.displayName = 'Chart'\nChart.whyDidYouRender = true\n\n// const yAxis = (g, y) => g\n//     .attr(\"transform\", `translate(${margin.left},0)`)\n//     .call(d3.axisLeft(y))\n//     .call(g => g.select(\".domain\").remove())\n//     .call(g => g.selectAll(\".title\").data(['Price']).join(\"text\")\n//         .attr(\"class\", \"title\")\n//         .attr(\"x\", -margin.left)\n//         .attr(\"y\", 10)\n//         .attr(\"fill\", \"currentColor\")\n//         .attr(\"text-anchor\", \"start\")\n//         .text('Price'))\n\n// const xAxis = (g, x, height: number) => g\n//     .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n//     .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\n\n// const area = (x, y) => d3.area<DItem>()\n//     .defined(d => !isNaN(d.price))\n//     .x(d => x(d.date))\n//     .y0(y(0))\n//     .y1(d => y(d.price))\n\n// export function Chart(props: Props) {\n\n//     const { data, hints: currentHints } = props\n//     const contextSvg = useRef<SVGSVGElement | null>(null)\n//     const focusSvg = useRef<SVGSVGElement | null>(null)\n\n//     const x = useMemo(() => d3.scaleUtc()\n//         .range([margin.left, width - margin.right])\n//         .domain(d3.extent(data, d => d.date) as Date[]), [data])\n\n//     const y = useMemo(() => d3.scaleLinear()\n//         .range([height - margin.bottom, margin.top])\n//         .domain([0, d3.max(data, d => d.price)] as number[]), [data])\n\n//     useEffect(() => {\n//         if (!contextSvg.current) return\n\n//         // context\n//         const svg = d3.select(contextSvg.current)\n//         svg.select('g#xAxes')\n//             .call(xAxis, x, focusHeight)\n//         svg.select('#area')\n//             .datum(data)\n//             .attr(\"d\", area(x, y.copy().range([focusHeight - margin.bottom, 4])));\n\n//     }, [data, contextSvg, x, y])\n\n//     // brush\n//     useEffect(() => {\n//         // focus\n//         const path = d3.select(focusSvg.current).select('#path')\n//         path.datum(data)\n//         const gx = d3.select(focusSvg.current).select(\"#gx\");\n//         const gy = d3.select(focusSvg.current).select(\"#gy\");\n\n//         if (!currentHints) return\n\n//         const { hints, newline } = currentHints\n//         if (!hints.length) return\n//         // 1. if only 1 date\n//         const padHints = [...hints]\n//         if (hints.length % 2 === 1) {\n//             padHints.push(hints[hints.length - 1])\n//         }\n//         const defaultSelection: Array<{ brushObj: d3.BrushBehavior<unknown>, extent: [number, number] }> = []\n//         for (let i = 0, len = padHints.length; i < len - 1; i += 2) {\n//             const brushed = ({ selection }) => {\n//                 if (selection) {\n//                     console.log('brushed')\n//                     const [minX, maxX]: [Date, Date] = selection.map(x.invert, x).map(d3.utcDay.round)\n//                     const maxY: number = d3.max(data, d => minX <= d.date && d.date <= maxX ? d.price : NaN)!\n//                     const focusX = x.copy().domain([minX, maxX])\n//                     const focusY = y.copy().domain([0, maxY])\n//                     gx.call(xAxis, focusX, height);\n//                     gy.call(yAxis, focusY);\n//                     path.attr(\"d\", area(focusX, focusY) as any);\n//                 }\n//             }\n\n//             function brushended(this: any, { sourceEvent, selection }) {\n//                 if (!sourceEvent) return;\n//             }\n\n//             const brush = d3.brushX()\n//                 .extent([[margin.left, 0.5],\n//                 [width - margin.right, focusHeight - margin.bottom + 0.5]])\n//                 .on('start', brushed)\n//                 .on(\"brush\", brushed)\n//                 .on(\"end\", brushended)\n\n//             defaultSelection.push({\n//                 brushObj: brush,\n//                 extent: [\n//                     x(padHints[i].date), x(padHints[i + 1].date)\n//                 ]\n//             })\n//         }\n\n//         const svg = d3.select(contextSvg.current)\n//         const brushG = svg.selectAll<SVGGElement, unknown>('g.brush')\n//             .data(defaultSelection, (d, id) => id)\n\n//         brushG.exit()\n//             .remove()\n\n//         brushG.enter()\n//             .append('g')\n//             .attr('class', 'brush')\n//             .attr('id', (_, idx) => `b_${idx}`)\n//             .each(function (brushObj) {\n//                 brushObj.brushObj(d3.select(this))\n\n//                 d3.select(this)\n//                     .attr('class', 'brush')\n//                     .selectAll('.overlay')\n//                     .attr('pointer-events', 'none')\n//             })\n\n//         brushG.each(function (brushObj, idx) {\n//             if (newline) {\n//                 d3.select(this)\n//                     .transition()\n//                     .duration(400)\n//                     .call(brushObj.brushObj.move, brushObj.extent)\n//             } else {\n//                 d3.select(this)\n//                     .call(brushObj.brushObj.move, brushObj.extent)\n//             }\n//         })\n\n//         //[x(d3.utcYear.offset(x.domain()[1], -1)), x.range()[1]];\n//     }, [data, currentHints, contextSvg, focusSvg, x, y])\n\n//     const clipPathId = 'clip_id_xx'\n//     return <div className=\"chart\">\n\n//         <svg ref={focusSvg} width={width} height={height} display=\"block\">\n//             <clipPath id={clipPathId}>\n//                 <rect x={margin.left} y={0} height={height} width={width - margin.left - margin.right}></rect>\n//             </clipPath>\n//             <g id=\"gx\"></g>\n//             <g id=\"gy\"></g>\n//             <path clipPath={`url(#${clipPathId})`} id=\"path\" fill=\"steelblue\">\n//             </path>\n//         </svg>\n//         <svg ref={contextSvg} width={width} height={focusHeight} display=\"block\">\n//             <path id=\"area\" fill=\"steelblue\"></path>\n//             <g id=\"xAxes\"></g>\n//         </svg>\n//     </div>\n\n// }","import React, { useEffect, useMemo, useState } from 'react';\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport {\n  CloseSharp as DeleteIcon,\n  CheckSharp as CheckIcon,\n  ArrowUpwardSharp as ArrowUpwardSharpIcon,\n  ArrowDownwardSharp as ArrowDownwardSharpIcon,\n  RemoveSharp as RemoveSharpIcon\n} from '@material-ui/icons';\nimport FlipMove from 'react-flip-move';\nimport clsx from 'clsx';\n\nimport './style.scss'\n\nimport { DItem } from '../../@types';\nimport { green, red, blueGrey } from '@material-ui/core/colors';\nimport { HintData, isHintData } from '../WordProcessor/autoHint';\nimport { TableFilter } from '../../App';\nimport { OpNode } from '../WordProcessor';\n\ninterface Props {\n  data: DItem[]\n  idx: number\n  datasetId: string\n  highlighted?: HintData | undefined\n  focused?: Array<HintData | OpNode>\n  filters?: TableFilter[]\n  onEditCell?: (id: string, field: string, value: string, chartIdx: number) => void\n  onAcceptRow?: (rowId: string, chartIdx: number) => void\n  onRejectRow?: (rowId: string, chartIdx: number) => void\n  onAcceptCol?: (attr: string, chartIdx: number) => void\n  onRejectCol?: (attr: string, chartIdx: number) => void\n  onRemoveFilter?: (attr: string, chartIdx: number) => void\n  onToggleSorter?: (filter: TableFilter, chartIdx: number) => void\n}\n\ninterface Row {\n  id: string\n  virtual?: boolean\n  virtualAttr: string[]\n  data: {\n    [key: string]: {\n      value: any,\n      isHighlightedH?: boolean\n      isHighlightedV?: boolean\n      isFocused: boolean\n    }\n  }\n}\n\ninterface Head {\n  field: string\n  headerName: string\n  sortable: boolean\n  editable: boolean\n  isHighlightedV?: boolean\n  isFocused?: boolean\n  virtual: boolean\n}\n\nexport const SubDataTable = React.memo((props: Props) => {\n  let { highlighted, data = [], filters, onEditCell, focused = [], datasetId } = props\n  const [editingCell, setEditingCell] = useState<{ id: string, attr: string, cellId: string, value: string } | null>(null)\n\n  highlighted = (highlighted && 'datasetId' in highlighted && highlighted['datasetId'] === datasetId) ? highlighted : undefined\n  const focusedHintNode = useMemo(() => {\n    const hintNOdes = focused?.filter(isHintData).filter(d => 'datasetId' in d && d['datasetId'] === datasetId)\n    console.log('hintNOdes', hintNOdes, focused)\n    return hintNOdes\n  }, [datasetId, focused])\n  // const onEditCellChangeCommitted = React.useCallback(\n  //   ({ id, field, props }) => {\n  //     onEditCell?.(id, field, props.value)\n  //   },\n  //   [onEditCell],\n  // );\n\n  const heads: Head[] = Object.keys(data[0]?.data || {}).map(h => {\n    // .filter(hintData => hintData.colIdx !== 0)\n    const isFocused = focusedHintNode\n      ? focusedHintNode?.some(hintData => hintData.attr === h && hintData.dataType === 'attr')\n      && !focusedHintNode.some(hintData => (hintData.attr === h && hintData.dataType === 'value') ||\n        (hintData.colIdx === 0 && hintData.dataType === 'value')\n      )\n      : false\n\n    const isHighlightedV = (highlighted?.attr === h\n      && !(highlighted?.dataType === 'value' && highlighted?.colIdx === 0))\n      || (highlighted && isFocused)\n\n    return {\n      field: h,\n      headerName: h,\n      sortable: true,\n      editable: true,\n      isHighlightedV,\n      isFocused,\n      virtual: data[0].virtualAttr.includes(h)\n    }\n  })\n\n  heads.push({\n    field: 'ctrl',\n    headerName: '',\n    sortable: false,\n    editable: true,\n    virtual: false,\n  })\n\n  const rows: Row[] = data\n    .map(({ data, rowIdx, id, virtual, virtualAttr }) => {\n      // const isFocusedRow = focused?.some(hintData => hintData.dataType === 'value' && hintData.colIdx === 0 && rowIdx === hintData.rowIdx)\n\n      data = Object.keys(data).reduce((o, h) => {\n\n        const isFocused = focusedHintNode?.length !== 0\n          ? focusedHintNode?.every(hintData => (hintData.dataType === 'attr' && hintData.attr === h)\n            || (hintData.dataType === 'value' && hintData.colIdx === 0 && rowIdx === hintData.rowIdx)\n            || (hintData.dataType === 'value' && hintData.colIdx !== 0 && rowIdx === hintData.rowIdx && hintData.attr === h)\n          )\n          : false\n\n        // if column is highlighted\n        const isHighlightedV = (highlighted?.attr === h && highlighted.colIdx !== 0) || heads.find(head => head.headerName === h)?.isHighlightedV // || (highlighted && isFocused)\n        const isHighlightedH = (highlighted?.dataType === 'value' && highlighted.rowIdx === rowIdx) // || (highlighted && isFocused)\n\n        o[h] = {\n          value: data[h],\n          isFocused, //: focused?.some(fr => fr.rowIdx === rowIdx), // && heads[dataPhrase.colIdx].isFocused)\n          isHighlightedV,\n          isHighlightedH,\n        }\n        return o\n      }, {})\n      return { data, id, virtual, virtualAttr }\n    })\n\n\n  useEffect(() => {\n\n    const cleanEditing = (e: MouseEvent) => {\n      if (!editingCell) return\n      const cellElm = document.querySelector<HTMLTableDataCellElement>(`#subTable_${props.idx} #${editingCell?.cellId}`);\n      if (cellElm !== null && e.target !== cellElm) {\n        // should commit change\n        console.log('old value', editingCell.value)\n        onEditCell?.(editingCell.id, editingCell.attr, cellElm.innerText, props.idx)\n        setEditingCell(null)\n      }\n    }\n    const onEnter = (e: KeyboardEvent) => {\n      if (!editingCell) return\n      if (e.key === 'Enter') {\n        e.preventDefault()\n        const cellElm = document.querySelector<HTMLTableDataCellElement>(`#subTable_${props.idx} #${editingCell?.cellId}`);\n        if (cellElm !== null) {\n          // should commit change\n          onEditCell?.(editingCell.id, editingCell.attr, cellElm.innerText, props.idx)\n          setEditingCell(null)\n        }\n      }\n    }\n    document.addEventListener('mousedown', cleanEditing)\n    document.addEventListener('keydown', onEnter)\n    return () => {\n      document.removeEventListener('mousedown', cleanEditing)\n      document.removeEventListener('keydown', onEnter)\n    }\n  }, [editingCell, onEditCell, props.idx])\n\n  return <TableContainer>\n    <Table id={`subTable_${props.idx}`} className={'table'} size=\"small\" aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          {heads.map(head => {\n            const filter = filters?.find(d => d.attr === head.field)\n            const { virtual } = head\n            return <TableCell\n              key={`top_${head.field}`}\n              title={head.headerName}\n              className={clsx('head', 'cell', 'upper')}>\n              {filter &&\n                <>\n                  <IconButton\n                    style={{ color: blueGrey[500] }}\n                    size=\"small\"\n                    aria-label=\"asce-filter\"\n                    onClick={() => props.onToggleSorter?.(filter, props.idx)}\n                  >\n                    {filter.direct === 'asce'\n                      ? <ArrowUpwardSharpIcon />\n                      : filter.direct === 'clean'\n                        ? <RemoveSharpIcon />\n                        : <ArrowDownwardSharpIcon />}\n                  </IconButton>\n                </>\n              }\n              {\n                virtual && <>\n                  <IconButton style={{ color: green[500] }} aria-label=\"accept-col\"\n                    onClick={() => {\n                      props.onAcceptCol?.(head.field, props.idx)\n                    }}>\n                    <CheckIcon />\n                  </IconButton>\n                  <IconButton style={{ color: red[500] }} aria-label=\"reject-col\"\n                    onClick={() => {\n                      props.onRejectCol?.(head.field, props.idx)\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </>\n              }\n              {!(filter || virtual) && <div style={{ padding: '20px' }}></div>}\n            </TableCell>\n          })}\n        </TableRow>\n        <TableRow>\n          {heads.map(h => <TableCell\n            key={`head_${h.headerName}`}\n            title={h.headerName}\n            className={clsx('head', 'cell', {\n              'highlighted-v': h?.isHighlightedV,\n              focused: h.isFocused,\n              virtual: h.virtual,\n            })}>\n            {h.headerName}\n          </TableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody style={{ position: 'relative' }}>\n        <FlipMove typeName={null} staggerDurationBy={15} staggerDelayBy={20} duration={700} easing={'ease'}>\n          {rows.map((row) => (\n            <TableRow key={row.id} className={clsx('row', {\n              virtual: row.virtual\n            })}>\n              {Object.entries(row.data).map(([h, value]) =>\n                <TableCell\n                  key={`cell_${row.id}_${h}`}\n                  id={`cell_${row.id}_${h}`}\n                  className={clsx('cell', {\n                    'highlighted-v': value.isHighlightedV,\n                    'highlighted-h': value.isHighlightedH,\n                    focused: value.isFocused,\n                    virtual: row.virtualAttr.includes(h),\n                    editing: editingCell?.id === row.id && editingCell?.attr === h\n                  })}\n                  title={value.value}\n                  contentEditable={editingCell?.id === row.id && editingCell?.attr === h}\n                  // onInput={e => {\n                  //   console.log('onInput', (e.target as HTMLTableDataCellElement).innerText)\n                  //   console.log(e)\n                  // }}\n                  onKeyDown={e => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault()\n                    }\n                  }}\n                  onDoubleClick={e => {\n                    // console.log('onDbclick a cell', e)\n                    setEditingCell({ id: row.id, attr: h, cellId: `cell_${row.id}_${h}`, value: value.value })\n                  }}\n                >\n                  {value.value}\n                </TableCell>)}\n\n              {row.virtual &&\n                <TableCell className={'cell ctrl'} style={{ width: '100px' }}>\n                  <IconButton style={{ color: green[500] }} aria-label=\"accept-row\"\n                    onClick={() => {\n                      props.onAcceptRow?.(row.id, props.idx)\n                    }}>\n                    <CheckIcon />\n                  </IconButton>\n                  <IconButton style={{ color: red[500] }} aria-label=\"reject-row\"\n                    onClick={() => {\n                      props.onRejectRow?.(row.id, props.idx)\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              }\n            </TableRow>\n          ))}\n        </FlipMove>\n      </TableBody>\n    </Table>\n  </TableContainer>\n\n})\nSubDataTable.displayName = 'SubDataTable'","import './style.scss'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport * as d3 from 'd3'\nimport { ExtendedGeometryCollection, GeoGeometryObjects } from 'd3'\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport * as topojson from 'topojson-client'\nimport { uniq, isEqual } from 'lodash';\n\nimport world from './countries-50m.json'\nimport { DItem } from '../../@types'\nimport { useCompare } from '../../App'\nimport { HintData, OpNode } from '../WordProcessor'\n\nconst width = 975\n\nconst rename = new Map([\n  [\"Antigua and Barbuda\", \"Antigua and Barb.\"],\n  [\"Bolivia (Plurinational State of)\", \"Bolivia\"],\n  [\"Bosnia and Herzegovina\", \"Bosnia and Herz.\"],\n  [\"Brunei Darussalam\", \"Brunei\"],\n  [\"Central African Republic\", \"Central African Rep.\"],\n  [\"Cook Islands\", \"Cook Is.\"],\n  [\"Democratic People's Republic of Korea\", \"North Korea\"],\n  [\"Democratic Republic of the Congo\", \"Dem. Rep. Congo\"],\n  [\"Dominican Republic\", \"Dominican Rep.\"],\n  [\"Equatorial Guinea\", \"Eq. Guinea\"],\n  [\"Iran (Islamic Republic of)\", \"Iran\"],\n  [\"Lao People's Democratic Republic\", \"Laos\"],\n  [\"Marshall Islands\", \"Marshall Is.\"],\n  [\"Micronesia (Federated States of)\", \"Micronesia\"],\n  [\"Republic of Korea\", \"South Korea\"],\n  [\"Republic of Moldova\", \"Moldova\"],\n  [\"Russian Federation\", \"Russia\"],\n  [\"Saint Kitts and Nevis\", \"St. Kitts and Nevis\"],\n  [\"Saint Vincent and the Grenadines\", \"St. Vin. and Gren.\"],\n  [\"Sao Tome and Principe\", \"São Tomé and Principe\"],\n  [\"Solomon Islands\", \"Solomon Is.\"],\n  [\"South Sudan\", \"S. Sudan\"],\n  [\"Swaziland\", \"eSwatini\"],\n  [\"Syrian Arab Republic\", \"Syria\"],\n  [\"The former Yugoslav Republic of Macedonia\", \"Macedonia\"],\n  // [\"Tuvalu\", ?],\n  [\"United Republic of Tanzania\", \"Tanzania\"],\n  [\"Venezuela (Bolivarian Republic of)\", \"Venezuela\"],\n  [\"Viet Nam\", \"Vietnam\"]\n])\n\nconst projection = d3.geoEqualEarth()\nconst path = d3.geoPath(projection)\nconst countries = topojson.feature(world, world.objects.countries)\nconst outline = { type: \"Sphere\" } as ExtendedGeometryCollection<GeoGeometryObjects>\n\ninterface Props {\n  data: DItem[]\n  focused?: Array<HintData | OpNode>\n  allDataPhrases?: Array<Array<HintData | OpNode>>\n}\n\nexport const MapVis = React.memo((props: Props) => {\n  const focused = useCompare(props.focused ?? [])\n  const cacheData = useCompare(props.data ?? []) //useMemo(() => getLastWeekByCountry(props.data ?? []), [props.data])\n\n  const allDataPhrases = useCompare(props.allDataPhrases ?? [])\n\n  const [dataType, setDataType] = useState<'cases' | 'deaths' | null>(null)\n  const [totalData, setTotalData] = useState<'total' | 'this_week' | null>(null)\n  const [hlRegionOptions, setHLRegionOptions] = useState<string[] | null>(null)\n  const [hlRegion, setHLRegion] = useState<string | null>(null)\n\n  const { data } = useMemo(() => {\n\n    const focusedRegions = hlRegion === null\n      ? focused.filter(d => d.attr === 'region' && d.dataType === 'value').map(d => d.value)\n      : hlRegion === 'all' ? [] : [hlRegion]\n\n    const data = new Map(cacheData.map(d => ([\n      rename.get(d.data.country) || d.data.country as string,\n      { ...d, focuse: focusedRegions.length === 0 ? true : focusedRegions.includes(d.data.region) }\n    ])))\n    return { data, focusedRegions }\n  }, [cacheData, focused, hlRegion])\n\n  useEffect(() => {\n    const flatDataPhrases = allDataPhrases.flatMap(d => d)\n    const dataType = flatDataPhrases.find(d => d.value === 'new_deaths' || d.value === 'total_deaths')\n    setDataType(dataType ? 'deaths' : null)\n\n    const totalData = flatDataPhrases.find(d => d.value === 'total_deaths' || d.value === 'total_cases')\n    setTotalData(totalData ? 'total' : null)\n\n    const highlightedRegions = uniq(flatDataPhrases.filter(d => d.attr === 'region' && d.dataType === 'value').map(d => d.value))\n\n    if (!isEqual(highlightedRegions, hlRegionOptions)) {\n      console.log('setHLRegionOptions')\n      setHLRegionOptions(highlightedRegions.length ? highlightedRegions : null)\n    }\n    setHLRegion(highlightedRegions.length ? highlightedRegions[highlightedRegions.length - 1] : null)\n  }, [allDataPhrases, hlRegionOptions])\n\n  const color = useMemo(() => d3.scaleSequentialSymlog()\n    .domain(d3.extent(\n      Array.from(data.values()).map(d => d.data.new_cases)\n    ) as [number, number])\n    .interpolator(d3.interpolateYlGnBu)\n    .unknown(\"#ccc\"), [data])\n\n  const height = useMemo(() => {\n    const [[x0, y0], [x1, y1]] = d3.geoPath(projection.fitWidth(width, outline)).bounds(outline);\n    const dy = Math.ceil(y1 - y0), l = Math.min(Math.ceil(x1 - x0), dy);\n    projection.scale(projection.scale() * (l - 1) / l).precision(0.2);\n    return dy;\n  }, [])\n\n  return <div className=\"mapWrapper\">\n    <div className=\"controls\" style={{ marginBottom: '20px' }}>\n\n      {totalData &&\n        <ToggleButtonGroup\n          size=\"small\"\n          exclusive\n          aria-label=\"data-basis\"\n          value={totalData}\n          onChange={(_, v) => setTotalData(v)}\n        >\n          <ToggleButton value=\"this_week\" aria-label=\"left aligned\">\n            {\"This Week\"}\n          </ToggleButton>\n          <ToggleButton value=\"total\" aria-label=\"centered\">\n            {\"Total\"}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      }\n\n\n      {dataType &&\n        <ToggleButtonGroup\n          size=\"small\"\n          exclusive\n          aria-label=\"data-basis\"\n          value={dataType}\n          onChange={(_, v) => setDataType(v)}\n        >\n          <ToggleButton value=\"cases\" aria-label=\"left aligned\">\n            {\"Cases\"}\n          </ToggleButton>\n          <ToggleButton value=\"deaths\" aria-label=\"centered\">\n            {\"Deaths\"}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      }\n\n      {hlRegionOptions &&\n        <FormControl style={{ minWidth: '80px' }} size=\"small\" variant='outlined'>\n          <InputLabel id=\"select-outlined-label\">Region</InputLabel>\n          <Select\n            labelId=\"select-outlined-label\"\n            id=\"simple-select-outlined\"\n            value={hlRegion}\n            onChange={(e) => {\n              console.log('highlight region', e.target.value)\n              const value: string = e.target.value as string\n              setHLRegion(value)\n            }}\n            displayEmpty\n            label=\"Region\"\n          >\n            <MenuItem value={'all'}>All</MenuItem>\n            {hlRegionOptions.map(r => <MenuItem key={r} value={r}>{r}</MenuItem>)}\n          </Select>\n        </FormControl>\n      }\n    </div>\n    <svg display='block' viewBox={`0 0 ${width} ${height}`} className={'map'}>\n      <defs>\n        <path id=\"outline\" d={path(outline)!} />\n        <clipPath id=\"clip\">\n          <use xlinkHref={new URL(\"#outline\", window?.location.href).href}></use>\n        </clipPath>\n      </defs>\n      <g clipPath={`url(${new URL(\"#clip\", window.location.href)})`}>\n        <use xlinkHref={new URL(\"#outline\", window.location.href).href} fill=\"white\"></use>\n        {countries.features.map(d => {\n          const attr = (totalData === 'total' && dataType === 'cases')\n            ? 'total_cases'\n            : (totalData === 'total' && dataType === 'deaths')\n              ? 'total_deaths'\n              : dataType === 'deaths'\n                ? 'new_deaths'\n                : 'new_cases'\n          return <path key={d.properties.name}\n            fill={color(data.get(d.properties.name)?.data[attr])}\n            d={path(d)!}\n            opacity={data.get(d.properties.name)?.focuse ? 1 : 0.2}\n            className=\"country\"\n          >\n            <title>{`${d.properties.name} ${data.has(d.properties.name) ? data.get(d.properties.name)?.data[attr] : \"N/A\"}`}\n            </title>\n          </path>\n        })}\n        <path fill='none' stroke='white' strokeLinejoin=\"round\"\n          d={path(topojson.mesh(world, world.objects.countries, (a, b) => a !== b))!}>\n        </path>\n      </g>\n\n      <use xlinkHref={new URL(\"#outline\", window?.location.href).href} fill=\"none\" stroke='black'>\n      </use>\n    </svg>\n  </div>\n})\nMapVis.displayName = 'MapVis'","import \"./style.scss\"\nimport { IconButton, Paper } from '@material-ui/core'\nimport React, { forwardRef } from 'react'\nimport {\n  BookmarkSharp as BookmarkSharpIcon,\n  TableChartSharp as TableChartSharpIcon\n} from '@material-ui/icons';\n\ntype Props = {\n  title: string\n  insights?: string[]\n  minH?: number\n  onSave?: () => void\n  onShowData?: () => void\n} & React.HTMLAttributes<HTMLDivElement>\n\nexport const Panel = React.memo(forwardRef<HTMLDivElement, Props>((props, ref) => {\n  const { title, className, insights = [], minH = 0, onSave, onShowData, children, ...restOfProps } = props\n\n  return <Paper className={`panel ${className}`} ref={ref} {...restOfProps}>\n    <div className=\"header\">\n      <h4 className={'title'}>{title}</h4>\n      <div className={'toolbars'}>\n        {/* {onShowData && <IconButton aria-label=\"chart\" color=\"primary\"\n          onClick={onShowData}\n        >\n          <TableChartSharpIcon />\n        </IconButton>} */}\n        {onSave && <IconButton aria-label=\"chart\" color=\"primary\"\n          onClick={onSave}\n        >\n          <BookmarkSharpIcon />\n        </IconButton>}\n      </div>\n    </div>\n    <div style={{ minHeight: `${minH}px` }}\n      className=\"wrapper\">\n      {children}\n\n      {(insights.length > 0) &&\n        <div className=\"insight-list\">\n          <h4 className=\"title\">Insights found in this chart/table:</h4>\n          <ol>\n            {insights.map(insight => <li key={insight} >{insight}</li>)}\n          </ol>\n        </div>\n      }\n\n    </div>\n  </Paper>\n}))\nPanel.displayName = 'Panel'","import './style.scss'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport * as d3 from 'd3'\nimport { cloneDeep, isEqual, uniq } from 'lodash'\n\nimport { DItem } from '../../@types'\nimport { HintData, OpNode } from '../WordProcessor'\nimport { useCompare } from '../../App'\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\n\nconst margin = { top: 20, right: 20, bottom: 30, left: 40 }\nconst height = 600\nconst width = 900\n\nconst xAxis = (g, x) => g\n  .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n  .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\n\nconst yAxis = (g, y) => g\n  .attr(\"transform\", `translate(${margin.left},0)`)\n  .call(d3.axisLeft(y))\n  .call(g => g.select(\".domain\").remove())\n  .call(g => g.select(\".tick:last-of-type text\").clone()\n    .attr(\"x\", 3)\n    .attr(\"text-anchor\", \"start\")\n    .attr(\"font-weight\", \"bold\")\n    // .text(data.y))\n  )\n\ninterface Props {\n  data: DItem[]\n  focused?: Array<HintData | OpNode>\n  allDataPhrases?: Array<Array<HintData | OpNode>>\n  onUpdateBrush?: (from: Date, to: Date) => void\n}\n\nexport const LineChart = React.memo((props: Props) => {\n  const { data: rawData = [], focused = [], allDataPhrases = [], onUpdateBrush } = props\n  // focused = useCompare(focused)\n  // allDataPhrases = useCompare(allDataPhrases)\n  const svgRef = useRef<SVGSVGElement | null>(null)\n  const [dotPos, setDotPos] = useState<{ x: number, y: number, text: string, data: { name: string, values: number[] } } | null>(null)\n\n  const [hlStateOptions, setHLStateOptions] = useState<string[] | null>(null)\n  const [hlState, setHLState] = useState<string | null>(null)\n\n  const { series, dates } = useMemo(() => {\n\n    const highlightedStates = hlState === null\n      ? focused.filter(d => d.attr !== 'date' && d.dataType === 'attr').map(d => d.value)\n      : hlState === 'all' ? [] : [hlState]\n\n    const series = Object.keys(rawData[0].data).filter(name => name !== 'date').map((name) => {\n      return { name, isFocus: highlightedStates.length === 0 || hlState === name, values: rawData.map(d => d.data[name]) }\n    }) as { name: string, isFocus: boolean, values: number[] }[]\n    const dates = rawData.map(d => new Date(d.id)) as Date[]\n\n    return { series, dates }\n\n  }, [focused, hlState, rawData])\n\n  useEffect(() => {\n    const flatDataPhrases = allDataPhrases.flatMap(d => d).filter(d => 'datasetId' in d && d['datasetId'] === 'reProductionData')\n    const highlightedRegions = uniq(flatDataPhrases.filter(d => d.attr !== 'date' && d.dataType === 'attr').map(d => d.value))\n    setHLStateOptions(highlightedRegions.length ? highlightedRegions : null)\n    setHLState(highlightedRegions.length ? highlightedRegions[highlightedRegions.length - 1] : null)\n  }, [allDataPhrases])\n\n  const x = d3.scaleUtc()\n    .domain(d3.extent(dates) as [Date, Date])\n    .range([margin.left, width - margin.right])\n\n  const y = d3.scaleSqrt()\n    .domain([0, d3.max(series, d => d3.max(d.values)) as number]).nice()\n    .range([height - margin.bottom, margin.top])\n\n  const line = d3.line<number>()\n    .defined(d => !isNaN(+d))\n    .x((d, i) => x(dates[i]))\n    .y(d => y(+d))\n\n  const brush = useMemo(() => d3.brushX<any>()\n    .extent([[margin.left, margin.top], [width - margin.right, height - margin.bottom]])\n    .on(\"brush\", ({ selection }) => {\n      if (selection) {\n        const [minX, maxX] = selection.map(x.invert, x)\n\n        onUpdateBrush?.(minX, maxX)\n      }\n    }), [onUpdateBrush, x])\n\n  const gb = useMemo(() => d3.select(svgRef.current)\n    .select<SVGGElement>('g#brush')\n    .call(brush), [brush])\n\n  useEffect(() => {\n    d3.select(svgRef.current)\n      .select('g#gx')\n      .call(xAxis, x);\n\n    d3.select(svgRef.current)\n      .select('g#gy')\n      .call(yAxis, y)\n\n  }, [svgRef, x, y])\n\n  // brush\n  useEffect(() => {\n    console.log('Chart focused', focused)\n    const dates = focused.filter(f => f.attr === 'date')\n    if (dates.length === 0) return\n\n    // create selection\n    if (dates.length === 1) {\n      dates.push(cloneDeep(dates[0]))\n    }\n\n    // calculate the extent\n    const defaultSelection = [x(new Date(dates[0].value)), x(new Date(dates[1].value))];\n\n    // move the brush\n    gb.call(brush.move, defaultSelection);\n  }, [brush.move, focused, gb, x])\n\n\n  const color = d3.scaleOrdinal<string>()\n    .domain(series.map(d => d.name))\n    // .range(d3.schemeSpectral[data.series.length]) // dirty hack\n    .range(d3.schemeTableau10)\n    .unknown(\"#ccc\")\n\n  return <div className='chartWrapper'>\n\n    <div className=\"controls\">\n      {hlStateOptions &&\n        <FormControl style={{ minWidth: '80px' }} size=\"small\" variant='outlined'>\n          <InputLabel id=\"select-outlined-label\">State</InputLabel>\n          <Select\n            labelId=\"select-outlined-label\"\n            id=\"simple-select-outlined\"\n            value={hlState}\n            onChange={(e) => {\n              console.log('highlight region', e.target.value)\n              const value: string = e.target.value as string\n              setHLState(value)\n            }}\n            displayEmpty\n            label=\"Region\"\n          >\n            <MenuItem value={'all'}>All</MenuItem>\n            {hlStateOptions.map(r => <MenuItem value={r}>{r}</MenuItem>)}\n          </Select>\n        </FormControl>\n      }\n    </div>\n\n\n    <svg ref={svgRef} viewBox={`0 0 ${width} ${height}`} overflow=\"visable\" className=\"chart\"\n      // onMouseLeave={() => {\n      //   setDotPos(null)\n      // }}\n      // onMouseMove={(event) => {\n      //   event.preventDefault();\n      //   if (!svgRef.current || hlStateOptions?.length) return\n\n      //   const svg = svgRef.current.ownerSVGElement || svgRef.current;\n      //   let point = svg.createSVGPoint();\n      //   point.x = event.clientX\n      //   point.y = event.clientY;\n      //   point = point.matrixTransform(svgRef.current.getScreenCTM()!.inverse());\n      //   const px = point.x\n      //   const py = point.y\n\n      //   const xm = x.invert(px);\n      //   const ym = y.invert(py);\n      //   const i = d3.bisectCenter(dates, xm);\n      //   const s = d3.least(series, d => Math.abs(d.values[i] - ym))!;\n\n      //   const newPos = { x: x(dates[i]), y: y(s.values[i]), text: s.name, data: s }\n      //   if (!isEqual(newPos, dotPos)) {\n      //     setDotPos(newPos)\n      //   }\n      // }}\n    >\n      <g className=\"lines\">\n        {series.map(serie => {\n          return <path\n            key={serie.name}\n            stroke={\n              (hlStateOptions && hlStateOptions?.length > 0)\n                ? serie.isFocus ? color(serie.name) : '#ddd'\n                : (!dotPos || dotPos.data.name === serie.name) ? color(serie.name) : '#ddd'\n            }\n            style={{\n              mixBlendMode: dotPos ? 'initial' : 'multiply'\n            }}\n            d={line(serie.values)!}\n\n          ></path>\n        })}\n      </g>\n      {dotPos && <g id=\"dot\" transform={`translate(${dotPos.x}, ${dotPos.y})`}>\n        <circle r=\"2.5\"></circle>\n        <text y=\"-8\">{dotPos.text}</text>\n      </g>}\n\n      <g id=\"gx\"></g>\n      <g id=\"gy\"></g>\n      <g id=\"brush\"></g>\n    </svg>\n  </div>\n})\nLineChart.displayName = 'LineChart'\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport * as d3 from 'd3'\n\nimport { cloneDeep, isEqual } from 'lodash'\nimport { HintData, OpNode } from '../WordProcessor'\nimport { DItem } from '../../@types'\nimport clsx from 'clsx'\nimport { useCompare } from '../../App'\n\nconst margin = { top: 20, right: 20, bottom: 30, left: 40 }\nconst height = 300\nconst width = 500\n\nconst xAxis = (g, x) => g\n  .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n  .call(d3.axisBottom(x).tickSizeOuter(0))\n\nconst yAxis = (g, y) => g\n  .attr(\"transform\", `translate(${margin.left},0)`)\n  .call(d3.axisLeft(y))\n  .call(g => g.select(\".domain\").remove())\n  .call(g => g.append(\"text\")\n    .attr(\"x\", -margin.left)\n    .attr(\"y\", 10)\n    .attr(\"fill\", \"currentColor\")\n    .attr(\"text-anchor\", \"start\")\n    .text('Amount'))\n\ninterface Props {\n  data: DItem[]\n  focused?: Array<HintData | OpNode>\n  allDataPhrases?: Array<Array<HintData | OpNode>>\n  onUpdateBrush?: (fromItem: DItem, toItem: DItem) => void\n}\n\nexport const BarChart = React.memo((props: Props) => {\n  let { data, focused = [], allDataPhrases = [], onUpdateBrush } = props\n  focused = useCompare(focused)\n  data = useCompare(data.sort((a, b) => a.rowIdx - b.rowIdx))\n\n  const [dotPos, setDotPos] = useState<{ day: string } | null>(null)\n\n  const svgRef = useRef<SVGSVGElement | null>(null)\n\n  const x = useMemo(() => d3.scaleBand()\n    .domain(data.map(d => d.id))\n    .range([margin.left, width - margin.right])\n    .padding(0.1), [data])\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.data.money)!]).nice()\n    .range([height - margin.bottom, margin.top])\n\n  const brush = useMemo(() => d3.brushX<any>()\n    .extent([[margin.left, margin.top], [width - margin.right, height - margin.bottom]])\n    .on(\"brush\", ({ selection }) => {\n      if (selection) {\n        const domain = x.domain();\n        const paddingOuter = x(domain[0]) || 0;\n        const eachBand = x.step();\n\n        const [minX, maxX] = selection.map(v => {\n          const index = Math.floor((v - paddingOuter) / eachBand)\n          return domain[Math.max(0, Math.min(index, domain.length - 1))];\n        })\n\n        const minItem = data.find(d => d.id === minX)\n        const maxItem = data.find(d => d.id === maxX)\n        if (minItem && maxItem) {\n          onUpdateBrush?.(minItem, maxItem)\n        }\n      }\n    }), [data, onUpdateBrush, x])\n\n  const gb = useMemo(() => d3.select(svgRef.current)\n    .select<SVGGElement>('g#brush')\n    .call(brush), [brush])\n\n  useEffect(() => {\n\n    d3.select(svgRef.current)\n      .select('g#gx')\n      .call(xAxis, x);\n\n    d3.select(svgRef.current)\n      .select('g#gy')\n      .call(yAxis, y)\n\n  }, [data, svgRef, x, y])\n\n  useEffect(() => {\n    const days = focused.filter(f => f.attr === 'day')\n    if (days.length === 0) return\n\n    if (days.length === 1) {\n      days.push(cloneDeep(days[0]))\n    }\n    console.log('focused', focused)\n\n    const defaultSelection = [x(days[0].rowId), x(days[1].rowId)! + x.bandwidth()];\n\n    // move the brush\n    gb.call(brush.move, defaultSelection);\n  }, [brush.move, focused, gb, x])\n\n\n  const renderTooltip = () => {\n    const item = data.find(d => d.id === dotPos?.day)!\n    const px = x(item.id)! + x.bandwidth() / 2\n    const py = y(item.data.money) - 5\n\n    return <g id=\"dot\" transform={`translate(${px}, ${py})`}>\n      <circle r=\"2.5\"></circle>\n      <text fill=\"#313131\" y=\"-8\" x=\"-40\">Amount: {item.data.money}</text>\n    </g>\n  }\n\n  return <div className='chartWrapper'>\n\n    <svg ref={svgRef} viewBox={`0 0 ${width} ${height}`} overflow=\"visable\" fill='steelblue'\n      // onMouseMove={(event) => {\n      //   event.preventDefault();\n      //   if (!svgRef.current) return\n      //   const svg = svgRef.current.ownerSVGElement || svgRef.current;\n      //   let point = svg.createSVGPoint();\n      //   point.x = event.clientX\n      //   point.y = event.clientY;\n      //   point = point.matrixTransform(svgRef.current.getScreenCTM()!.inverse());\n      //   const px = point.x\n\n      //   const domain = x.domain();\n      //   const paddingOuter = x(domain[0]) || 0;\n      //   const eachBand = x.step();\n\n      //   const index = Math.floor((px - paddingOuter) / eachBand)\n      //   const data = domain[Math.max(0, Math.min(index, domain.length - 1))];\n\n      //   const newPos = { day: data }\n      //   if (!isEqual(newPos, dotPos)) {\n      //     setDotPos(newPos)\n      //   }\n      // }}\n\n      // onMouseLeave={() => {\n      //   setDotPos(null)\n      // }}\n    >\n      {data.map((item, i) => {\n        const fRows = focused.filter(f => f.dataType === 'value')\n        return <rect\n          key={item.id}\n          className={clsx({ unFocused: fRows.length > 0 && fRows.every(f => f.rowIdx !== item.rowIdx) })}\n          x={x(item.id)}\n          y={y(item.data.money)}\n          height={y(0) - y(item.data.money)}\n          width={x.bandwidth()}\n        >\n        </rect>\n      })}\n\n      {dotPos && renderTooltip()}\n      <g id=\"gx\"></g>\n      <g id=\"gy\"></g>\n      <g id=\"brush\"></g>\n    </svg>\n  </div>\n})\nBarChart.displayName = 'BarChart'","export const dates = [\n// \"2020-03-05T00:00:00.000Z\", \"2020-03-06T00:00:00.000Z\", \"2020-03-07T00:00:00.000Z\", \"2020-03-08T00:00:00.000Z\", \n// \"2020-03-09T00:00:00.000Z\", \"2020-03-10T00:00:00.000Z\", \n\"2020-03-11T00:00:00.000Z\", \"2020-03-12T00:00:00.000Z\", \"2020-03-13T00:00:00.000Z\", \"2020-03-14T00:00:00.000Z\", \"2020-03-15T00:00:00.000Z\", \"2020-03-16T00:00:00.000Z\", \"2020-03-17T00:00:00.000Z\", \"2020-03-18T00:00:00.000Z\", \"2020-03-19T00:00:00.000Z\", \"2020-03-20T00:00:00.000Z\", \"2020-03-21T00:00:00.000Z\", \"2020-03-22T00:00:00.000Z\", \"2020-03-23T00:00:00.000Z\", \"2020-03-24T00:00:00.000Z\", \"2020-03-25T00:00:00.000Z\", \"2020-03-26T00:00:00.000Z\", \"2020-03-27T00:00:00.000Z\", \"2020-03-28T00:00:00.000Z\", \"2020-03-29T00:00:00.000Z\", \"2020-03-30T00:00:00.000Z\", \"2020-03-31T00:00:00.000Z\", \"2020-04-01T00:00:00.000Z\", \"2020-04-02T00:00:00.000Z\", \"2020-04-03T00:00:00.000Z\", \"2020-04-04T00:00:00.000Z\", \"2020-04-05T00:00:00.000Z\", \"2020-04-06T00:00:00.000Z\", \"2020-04-07T00:00:00.000Z\", \"2020-04-08T00:00:00.000Z\", \"2020-04-09T00:00:00.000Z\", \"2020-04-10T00:00:00.000Z\", \"2020-04-11T00:00:00.000Z\", \"2020-04-12T00:00:00.000Z\", \"2020-04-13T00:00:00.000Z\", \"2020-04-14T00:00:00.000Z\", \"2020-04-15T00:00:00.000Z\", \"2020-04-16T00:00:00.000Z\", \"2020-04-17T00:00:00.000Z\", \"2020-04-18T00:00:00.000Z\", \"2020-04-19T00:00:00.000Z\", \"2020-04-20T00:00:00.000Z\", \"2020-04-21T00:00:00.000Z\", \"2020-04-22T00:00:00.000Z\", \"2020-04-23T00:00:00.000Z\", \"2020-04-24T00:00:00.000Z\", \"2020-04-25T00:00:00.000Z\", \"2020-04-26T00:00:00.000Z\", \"2020-04-27T00:00:00.000Z\", \"2020-04-28T00:00:00.000Z\", \"2020-04-29T00:00:00.000Z\", \"2020-04-30T00:00:00.000Z\", \"2020-05-01T00:00:00.000Z\", \"2020-05-02T00:00:00.000Z\", \"2020-05-03T00:00:00.000Z\", \"2020-05-04T00:00:00.000Z\", \"2020-05-05T00:00:00.000Z\", \"2020-05-06T00:00:00.000Z\", \"2020-05-07T00:00:00.000Z\", \"2020-05-08T00:00:00.000Z\", \"2020-05-09T00:00:00.000Z\", \"2020-05-10T00:00:00.000Z\", \"2020-05-11T00:00:00.000Z\", \"2020-05-12T00:00:00.000Z\", \"2020-05-13T00:00:00.000Z\", \"2020-05-14T00:00:00.000Z\", \"2020-05-15T00:00:00.000Z\", \"2020-05-16T00:00:00.000Z\", \"2020-05-17T00:00:00.000Z\", \"2020-05-18T00:00:00.000Z\", \"2020-05-19T00:00:00.000Z\", \"2020-05-20T00:00:00.000Z\", \"2020-05-21T00:00:00.000Z\", \"2020-05-22T00:00:00.000Z\", \"2020-05-23T00:00:00.000Z\", \"2020-05-24T00:00:00.000Z\", \"2020-05-25T00:00:00.000Z\", \"2020-05-26T00:00:00.000Z\", \"2020-05-27T00:00:00.000Z\", \"2020-05-28T00:00:00.000Z\", \"2020-05-29T00:00:00.000Z\", \"2020-05-30T00:00:00.000Z\", \"2020-05-31T00:00:00.000Z\", \"2020-06-01T00:00:00.000Z\", \"2020-06-02T00:00:00.000Z\", \"2020-06-03T00:00:00.000Z\", \"2020-06-04T00:00:00.000Z\", \"2020-06-05T00:00:00.000Z\", \"2020-06-06T00:00:00.000Z\", \"2020-06-07T00:00:00.000Z\", \"2020-06-08T00:00:00.000Z\", \"2020-06-09T00:00:00.000Z\", \"2020-06-10T00:00:00.000Z\", \"2020-06-11T00:00:00.000Z\", \"2020-06-12T00:00:00.000Z\", \"2020-06-13T00:00:00.000Z\", \"2020-06-14T00:00:00.000Z\", \"2020-06-15T00:00:00.000Z\", \"2020-06-16T00:00:00.000Z\", \"2020-06-17T00:00:00.000Z\", \"2020-06-18T00:00:00.000Z\", \"2020-06-19T00:00:00.000Z\", \"2020-06-20T00:00:00.000Z\", \"2020-06-21T00:00:00.000Z\", \"2020-06-22T00:00:00.000Z\", \"2020-06-23T00:00:00.000Z\", \"2020-06-24T00:00:00.000Z\", \"2020-06-25T00:00:00.000Z\", \"2020-06-26T00:00:00.000Z\", \"2020-06-27T00:00:00.000Z\", \"2020-06-28T00:00:00.000Z\", \"2020-06-29T00:00:00.000Z\", \"2020-06-30T00:00:00.000Z\", \"2020-07-01T00:00:00.000Z\", \"2020-07-02T00:00:00.000Z\", \"2020-07-03T00:00:00.000Z\", \"2020-07-04T00:00:00.000Z\", \"2020-07-05T00:00:00.000Z\", \"2020-07-06T00:00:00.000Z\", \"2020-07-07T00:00:00.000Z\", \"2020-07-08T00:00:00.000Z\", \"2020-07-09T00:00:00.000Z\", \"2020-07-10T00:00:00.000Z\", \"2020-07-11T00:00:00.000Z\", \"2020-07-12T00:00:00.000Z\", \"2020-07-13T00:00:00.000Z\", \"2020-07-14T00:00:00.000Z\", \"2020-07-15T00:00:00.000Z\", \"2020-07-16T00:00:00.000Z\", \"2020-07-17T00:00:00.000Z\", \"2020-07-18T00:00:00.000Z\", \"2020-07-19T00:00:00.000Z\", \"2020-07-20T00:00:00.000Z\", \"2020-07-21T00:00:00.000Z\", \"2020-07-22T00:00:00.000Z\", \"2020-07-23T00:00:00.000Z\", \"2020-07-24T00:00:00.000Z\", \"2020-07-25T00:00:00.000Z\", \"2020-07-26T00:00:00.000Z\", \"2020-07-27T00:00:00.000Z\", \"2020-07-28T00:00:00.000Z\", \"2020-07-29T00:00:00.000Z\", \"2020-07-30T00:00:00.000Z\", \"2020-07-31T00:00:00.000Z\", \"2020-08-01T00:00:00.000Z\", \"2020-08-02T00:00:00.000Z\", \"2020-08-03T00:00:00.000Z\", \"2020-08-04T00:00:00.000Z\", \"2020-08-05T00:00:00.000Z\", \"2020-08-06T00:00:00.000Z\", \"2020-08-07T00:00:00.000Z\", \"2020-08-08T00:00:00.000Z\", \"2020-08-09T00:00:00.000Z\", \"2020-08-10T00:00:00.000Z\", \"2020-08-11T00:00:00.000Z\", \"2020-08-12T00:00:00.000Z\", \"2020-08-13T00:00:00.000Z\", \"2020-08-14T00:00:00.000Z\", \"2020-08-15T00:00:00.000Z\", \"2020-08-16T00:00:00.000Z\", \"2020-08-17T00:00:00.000Z\", \"2020-08-18T00:00:00.000Z\", \"2020-08-19T00:00:00.000Z\", \"2020-08-20T00:00:00.000Z\", \"2020-08-21T00:00:00.000Z\", \"2020-08-22T00:00:00.000Z\", \"2020-08-23T00:00:00.000Z\", \"2020-08-24T00:00:00.000Z\", \"2020-08-25T00:00:00.000Z\", \"2020-08-26T00:00:00.000Z\", \"2020-08-27T00:00:00.000Z\", \"2020-08-28T00:00:00.000Z\", \"2020-08-29T00:00:00.000Z\", \"2020-08-30T00:00:00.000Z\", \"2020-08-31T00:00:00.000Z\", \"2020-09-01T00:00:00.000Z\"]","import Papa from 'papaparse'\nimport { chunk } from 'lodash'\n\nimport reproductionData from './state_cases.json'\nimport reproductionMap from './more_state_cases.json'\n\nimport { DItem } from '../@types'\nimport { dates as rDates } from '../components/LineChart/dates'\n\nconst reNameRegion = {\n  AMRO: 'Americas',\n  AFRO: 'Africa',\n  SEARO: 'South_East_Asia',\n  EURO: 'Europe',\n  EMRO: 'Eastern_Mediterranean',\n  WPRO: 'Western_Pacific'\n}\n\ntype RawData = {\n  date: string\n  country: string\n  region: string\n  new_cases: number\n  total_cases: number\n  new_deaths: number\n  total_deaths: number\n}\n\nexport const fetchData = async () => {\n  let rawData = localStorage.getItem('rawData')\n  if (!rawData) {\n    rawData = await fetch(`${process.env.PUBLIC_URL}/byDailyCountry.csv`).then(res => res.text())\n    localStorage.setItem('rawData', rawData!)\n  }\n  const results = Papa.parse(rawData, { header: true, dynamicTyping: true });\n\n  return results.data as RawData[]\n}\n\nexport function getByRegionDaily(rawData: RawData[]): DItem[] {\n  return Object.entries(rawData.reduce((o, item) => {\n    if (!(item.date in o)) {\n      o[item.date] = []\n    }\n    o[item.date].push(item)\n    return o\n  }, {} as Record<string, RawData[]>)).map(([date, items]) => {\n    // then group by region\n    const byRegion = items.reduce((o, item) => {\n      if (!(item.region in o)) {\n        o[item.region] = { new_cases: 0, new_deaths: 0, total_cases: 0, total_deaths: 0 }\n      }\n      o[item.region] = {\n        new_cases: o[item.region].new_cases + item.new_cases,\n        new_deaths: o[item.region].new_deaths + item.new_deaths,\n        total_cases: o[item.region].total_cases + item.total_cases,\n        total_deaths: o[item.region].total_deaths + item.total_deaths\n      }\n      return o\n    }, {})\n    const day = { date, ...byRegion }\n\n    return day\n  })\n    .map(({ date, ...item }, rowIdx) => ({\n      id: date, rowIdx, virtualAttr: [],\n      data: {\n        date: date.slice(0, 10).replaceAll('-', '/'),\n        ...Object.keys(item).reduce((o, region) => {\n          // hardcode to new_cases\n          o[reNameRegion[region]] = item[region]\n          return o\n        }, {}),\n      }\n    })).reverse()\n}\n\nexport function getByCountryWeek(rawData: RawData[]): DItem[] {\n  const byDate = Object.entries(rawData.reduce((o, item) => {\n    if (!(item.date in o)) {\n      o[item.date] = []\n    }\n    o[item.date].push(item)\n    return o\n  }, {} as Record<string, RawData[]>))\n\n  const byWeek = chunk(byDate.sort((a, b) => {\n    const d1 = new Date(a[0])\n    const d2 = new Date(b[0])\n    return d2.getTime() - d1.getTime()\n  }).map(d => d[1]), 7)\n    .map(countryIn7Days => {\n\n      return countryIn7Days.reduce((o, countryIn1Day) => {\n\n        const item = countryIn1Day.reduce((o, country) => {\n          if (!('date' in o)) o['date'] = country.date.replaceAll('-', '/')\n          if (!(country.country in o)) {\n            o[country.country] = {\n              region: reNameRegion[country.region] || country.region,\n              new_cases: country.new_cases,\n              new_deaths: country.new_deaths,\n              total_cases: country.total_cases,\n              total_deaths: country.total_deaths\n            }\n          }\n          return o\n        }, {})\n\n        if (Object.keys(o).length === 0) {\n          o = item\n        } else {\n          o = Object.keys(o).reduce((oo, country) => {\n            if (country === 'date') {\n              oo[country] = o[country]\n              return oo\n            }\n            oo[country] = {\n              region: o[country].region,\n              new_cases: o[country].new_cases + item[country].new_cases,\n              new_deaths: o[country].new_deaths + item[country].new_deaths,\n              total_cases: o[country].total_cases + item[country].total_cases,\n              total_deaths: o[country].total_deaths + item[country].total_deaths\n            }\n            return oo\n          }, {})\n        }\n        return o\n      }, {})\n    }).map((data, rowIdx) => ({ id: data['date'], rowIdx, virtualAttr: [], data }))\n\n  return byWeek\n}\n\nexport function getLastWeekByCountry(byWeek: DItem[]): DItem[] {\n  const week = byWeek[0]\n  if (!week) return []\n  return Object.entries(week.data).filter(([country]) => country !== 'date')\n    .map(([country, data], rowIdx) => {\n      const { date, region, ...restData } = data\n      return {\n        id: country, rowIdx, virtualAttr: [],\n        data: { country, region: reNameRegion[region] || region, ...restData }\n      }\n    })\n}\n\nexport function getByRegionWeek(byDay: DItem[]): DItem[] {\n  const chunkItems = chunk(byDay, 7)\n  return chunkItems.map((regionIn7Days, rowIdx) => {\n\n    const data = regionIn7Days.map(d => d.data).reduce((o, item) => {\n      // region\n      if (Object.keys(o).length === 0) o = item\n      else {\n        const { date, ...regions } = item\n        o = Object.keys(o).reduce((oo, key) => {\n          if (key === 'date') oo[key] = o[key]\n          else {\n            oo[key] = {\n              new_cases: o[key].new_cases + regions[key].new_cases,\n              new_deaths: o[key].new_deaths + regions[key].new_deaths,\n              total_cases: o[key].total_cases + regions[key].total_cases,\n              total_deaths: o[key].total_deaths + regions[key].total_deaths,\n            }\n          }\n          return oo\n        }, {})\n      }\n\n      return o\n    }, {})\n\n    return { id: data['date'], rowIdx, virtualAttr: [], data }\n  })\n}\n\nexport function getLastWeekByRegion(byRegionWeek: DItem[]): DItem[] {\n  const week = byRegionWeek[0]\n  if (!week) return []\n  return Object.entries(week.data)\n    .filter(([key]) => key !== 'date')\n    .map(([region, data], rowIdx) => {\n      return {\n        id: region, rowIdx, virtualAttr: [], data: { region, ...data }\n      }\n    })\n}\n\nexport function getTrainingData(): DItem[] {\n\n  return [\n    { day: 'Monday', money: 150 },\n    { day: 'Tuesday', money: 20 },\n    { day: 'Wednesday', money: 70 },\n    { day: 'Thursday', money: 180 },\n    { day: 'Friday', money: 200 },\n    { day: 'Saturday', money: 240 },\n    { day: 'Sunday', money: 340 },\n  ].map((d, rowIdx) => ({\n    id: d.day, rowIdx, virtualAttr: [], data: { ...d }\n  }))\n}\n\n\nexport function getReproductionData(): DItem[] {\n\n  return rDates.map((date, rowIdx) => {\n\n    date = date.slice(0, 10).replaceAll('-', '/')\n\n    return {\n      id: date, rowIdx, virtualAttr: [], data: {\n        date, ...reproductionData.reduce((o, state) => {\n          o[state.name] = state.values[rowIdx + 6] ?? 0\n          return o\n        }, {})\n      }\n\n    }\n  }).reverse()\n}\n\n\n\nexport function getReproductionMap(): DItem[] {\n\n  return reproductionMap.map((d, rowIdx) => {\n    const values = d.values as number[]\n\n    const cases = Math.round(values.filter(v => v !== null).reduce((o, v: number) => o + v, 0))\n    return {\n      id: d.name, rowIdx, virtualAttr: [], data: { state: d.name, cases }\n    }\n  })\n\n}","import React, { useMemo } from 'react'\nimport * as d3 from 'd3'\nimport * as topojson from 'topojson-client'\nimport us from './states-albers-10m.json'\nimport { DItem } from '../../@types'\n\nconst width = 975\nconst height = 610\n\nconst path = d3.geoPath()\n\ninterface Props {\n  data: DItem[]\n}\n\nexport function StateMap(props: Props) {\n  const { data } = props\n\n  const color = useMemo(() => d3.scaleSequentialSymlog()\n    .domain(d3.extent(data.map(d => d.data.cases)) as [number, number])\n    .interpolator(d3.interpolateYlGnBu)\n    .unknown(\"#ccc\"), [data])\n\n  return <svg display='block' viewBox={`0 0 ${width} ${height}`} className={'map'}>\n\n    <g fill=\"#ccc\">\n      {topojson.feature(us, us.objects.states).features.map(d => {\n        const stateName = d.properties.name\n        return <path key={d.properties.name}\n          fill={color(data.find(state => state.id === stateName)?.data.cases)}\n          d={path(d)!}\n          // opacity={data.get(d.properties.name)?.focuse ? 1 : 0.2}\n          className=\"state\"\n        >\n          {/* <title>{`${d.properties.name} ${data.has(d.properties.name) ? data.get(d.properties.name)?.data[attr] : \"N/A\"}`}\n                    </title> */}\n        </path>\n      })}\n    </g>\n\n    <path fill=\"none\"\n      stroke=\"white\"\n      strokeLinejoin=\"round\"\n      pointerEvents=\"none\"\n      d={path(topojson.mesh(us, us.objects.states, (a, b) => a !== b))!}></path>\n\n    <path fill='none' stroke='black' strokeLinejoin=\"round\" ></path>\n\n  </svg>\n\n}","export const instructionText = [\n    {\n        title: 'Start',\n        background: 'After summarizing your  data into a table and bar chart, you start to write the article.',\n        action: 'Plz click the bookmark icon to insert the table to the document.'\n    },\n    {\n        title: 'Feature: Retrieve Value (1a)',\n        background: 'Assume that you want to report the money you used on Friday by using the following sentence:',\n        content: 'The money used on Friday is ??',\n        action: [\n            'Input the first word <em>\"The\"</em>',\n            'Input the 2ed word <em>\"money\"</em>',\n            'When you see the suggested text from the table, you must press the <strong>Tab</strong> key to confirm it. By doing this, you will create a connection between the text and the underlying data.',\n            'Then, you need to add a <strong>space</strong> after the suggested word.',\n            'Input <em>\"used on\"</em>',\n            'Input <em>\"Frid\"</em>',\n            'Press the tab key to build the connection',\n            'Input a space after the <em>\"Friday\"</em>',\n            'Input <em>\"is\"</em>',\n            'Press the <string>Tab</strong> key to get the suggestions of <strong>??</strong>. ',\n            'Select the suggested value <em>\"200\"</em>.'\n        ]\n    },\n    {\n        title: 'Feature: Compute Value1 (1b)',\n        background: 'Assume that you want to report the total money you used this week.',\n        content: 'The total money spent this week is ??',\n        action: [\n            'Input <em>\"The total\"</em>',\n            'Input <em>\"mone\"</em>',\n            'When you see the suggested text from the table, you must press the <strong>Tab</strong> key to confirm it. By doing this, you will create a connection between the text and the underlying data.',\n            'Input <em>\"spent this week is\"</em>',\n            'Press the <string>Tab</strong> key to get the suggestions of <strong>??</strong>.',\n            'Select the suggested value <em>\"1200\"</em>.'\n        ]\n\n        // ps: [\n        //     'When you see the suggested text from the table, you must press the <strong>Tab</strong> key to confirm it. By doing this, you will create a connection between the text and the underlying data.',\n        //     'You need to add a <strong>space</strong> after each word.',\n        //     'Plz press the <string>Tab</strong> key to get the suggestions of <strong>??</strong>. '\n        // ]\n    },\n    {\n        title: 'Feature: Compute Value2 (1b)',\n        background: 'Sometimes the system cannot calculate the value based on the existing text. In such case, you can input a <strong>placeholder</strong> to tell the system what computed value you want to have. For example, suppose you want to report the <strong>ratio</strong> of the money used on Friday in this week.',\n        content: 'The money used on Friday is ?? of all day.',\n        action: [\n            'Similar to the previous steps, input <em>\"The money used on Friday is\"</em>',\n            'Press the <string>Tab</strong> key to get the suggestions of <strong>??</strong>. ',\n            'Selec the 2ed choice -- the <strong>RATIO</strong> placeholder',\n            'input <em>\"of all\"</em>',\n            'input and build connection for <em>\"day\"</em>'\n        ],\n        result: \"You should see the ratio value is automatically computed.\"\n    },\n    {\n        title: 'Feature: Table Update (4a)',\n        background: 'If everything goes well, you should already see a new row and a new column have been added to the table. This is the Table Update feature -- the system will update the table based on your writing. Try to accept these updates.',\n        action: 'Plz click all green check icons to add the new row and column',\n    },\n\n    {\n        title: 'Feature: Interactive Data (2a)',\n        background: 'Now assume that you change your mind and want to report the money of Sunday in the 1st sentence (<em>\"The money used on Friday is 200\"</em>).',\n        action: 'Plz click on the <em>\"Friday\"</em> in the 1st sentence. After you see a list of other days, select <em>\"Sunday\"</em>. You should see that the <em>\"Friday\"</em> is change to <em>\"Sunday\"</em>.',\n    },\n\n    {\n        title: 'Feature: Reactive Update (3a)',\n        background: 'Besides, after changing <em>\"Friday\"</em> to <em>\"Sunday\"</em>, the system will automatically update all other text to ensure the data consistency. You should see the number in the 1st sentence is also updated from \"200\" to \"340\". This is the Reactive Update feature (3a)',\n    },\n\n    {\n        title: 'Feature: Interactive Operation (2b)',\n        background: 'Now, let’s try another interactive feature on the data operations. Suppose you want to report an average value instead of total value in the 2ed sentence.',\n        action: [\n            'Press <strong>Alt</strong> key and click the <em>\"total\"</em> in the 2ed sentence (<em>\"The total money spent this week is 1200\"</em>)',\n            'Select <em>\"average\"</em>',\n        ],\n        result: 'Again, you should see the text and the number are updated, thanks to the reactive update feature (3a).'\n    },\n\n    {\n        title: 'Feature: Retrieve Value2 (1a)',\n        background: 'Before we move on, let’s try another retrieve value (1a). Assume that you want to report the day that you spent the max money.',\n        content: 'The highest amount of money is spent on ??',\n        action: 'Plz input the sentence, remmeber press <strong>Tab</strong> to connect the text and data',\n        result: 'You should see the rows are sorted as well (this is also the Table Update feature). You can click the small icon on the top of the money column to try different orders (i.e., ascending, default, and descending).'\n    },\n    {\n        title: 'Feature: Data-driven Update (3b)',\n        background: 'Well done! Let\\'s try the data-driven update feautre. Assume that you find out that the money spent on Sunday should be 200 instead of 340. You need to correct the data.',\n        action: ['Double click on the <strong>money</strong> cell of <em>\"Sunday\"</em>',\n            'Change the 340 to 100, and press the enter key.'],\n        result: 'You should see all the numbers in the text are updated accordingly.'\n    },\n\n    {\n        title: 'Feature: Vis Update (4b)',\n        background: 'Now, you want to report some data about the barchart.',\n        content: 'The spent money increases from ?? to ??',\n        action: [\n            'Insert the bar chart into the document.',\n            'Input <em>\"The spent\"</em>', \n            'Input <em>\"money\"</em>',\n            \"You should see a small thumbnail besides the suggested list, showing which dataset to bind\",\n            'In the suggestion list, select the 3rd choice to bind your sentence to the bar chart dataset',\n            \"Plus, you should see the border of the panel to bind is highlighted\",\n            'Keep entering the remaining text, do not input period at the end',\n            'For the first <strong>??</strong>, select <em>\"Tuesday\"</em>;',\n            'For the second <strong>??</strong>, select <em>\"Thursday\"</em>.'\n        ],\n        // ps: [\n        //     // \"Make sure that you are binding the text to the bar chart dataset\",\n      \n        // ],\n        result: 'You may notice that an interval has been added to the bar chart. This interval is corresponding to the range (from Tuesday to Thursday) in your sentence. This shows the Vis Update (4b) feature.'\n    },\n\n    {\n        title: 'Feature: Data-driven Update (3b)',\n        background: 'Based on the bar chart, you find out that the spent money actually increaes from Tue. to Fri. Thus, you want to refine the text to report this finding',\n        action: 'Plz drag the right edge of the interval to cover the bar of Saturday.',\n        result: 'You should see the text in your final sentence is updated accordingly. This feature is particularly useful when you cannot efficiently select the date you want from the suggested list. If you cannot select the date from the suggested list, you can drag the interval to get the number. '\n    },\n    {\n        title: 'Finish!',\n        background: 'All done! You have finished the training task!'\n    }\n]","import './style.scss'\nimport React, { useState } from 'react'\nimport { Button, MobileStepper } from '@material-ui/core'\nimport {\n  KeyboardArrowLeft as KeyboardArrowLeftIcon,\n  KeyboardArrowRight as KeyboardArrowRightIcon\n} from '@material-ui/icons'\n\nimport { instructionText } from './instructions'\n\nexport function Task3() {\n\n  const reqs = [\n    'It must include one chart or one table',\n    'It must include 4 insights.',\n    '3 of the 4 insights should come from different datasets. It means that you should report at least one insight for each of the provided datasets.',\n    'The last insight can be selected from any of the provided datasets.',\n    'In summary, you need to report 3+1 insights.'\n  ]\n\n  const tips = [\n    'Please use the same sentence structure as the provided insights.',\n    'Press <strong>Tab</strong> to build connection',\n    'Remember to select the correct dataset for each sentence (based on the <strong>preview</strong>)',\n    'Remember to add <strong>space</strong> after each word',\n    'Select the correct <strong>placehoder</strong>',\n    'Input two random dates, then brush the visualization to refine the dates',\n    'Ask me for help if you have any questions',\n  ]\n\n  return <div className=\"instruction\">\n\n    <div className=\"instructionText\">\n      <div className=\"title\">\n        Creation Task\n      </div>\n\n      <div className=\"background\">\n        <span>In this task, you will need to write a short paragraph to report the covid situation based on the provided insights. Your report must fulfill the following requirements:</span>\n      </div>\n\n      <div className=\"action\">\n        <span className=\"label\">Requirements:</span> <br />\n        <ol>\n          {reqs.map(p => <li dangerouslySetInnerHTML={{ __html: p }}></li>)}\n        </ol>\n      </div>\n\n      <div className=\"action\">\n        <span className=\"label\">Tips:</span> <br />\n        <ol>\n          {tips.map(p => <li dangerouslySetInnerHTML={{ __html: p }}></li>)}\n        </ol>\n      </div>\n    </div>\n  </div>\n}\n\n\nexport function Tips() {\n\n  const placeholders = [\n    '<strong>VALUE</strong> -- use this placeholder to get sum values, e.g., when you need to calculate data for \"in total\"',\n    '<strong>COUNT_Item</strong> -- use this placeholder to count the number of items. For example, if you need to compute the number of states that report more than 10000 new cases, you can input “COUNT_Item state reports more than 10000 new cases”.',\n    '<strong>RATIO</strong> -- use this placeholder to calculate the ratio of data in terms of ALL items.',\n    '<strong>DIFF</strong> -- use this placeholder for comparison. For example, if you need to calculate the difference between two New York and California, you can input “Compared to California, New york reports DIFF less cases”.'\n  ]\n\n  const tips = [\n    'Press <strong>Tab</strong> to build connection',\n    'Remember to select the correct dataset for each sentence (based on the <strong>preview</strong>)',\n    'Remember to add <strong>space</strong> after each word',\n    'Select the correct <strong>placehoder</strong>',\n    'Input two random dates, then brush the visualization to refine the dates',\n    'Ask me for help if you have any questions',\n  ]\n\n  return <div className=\"instruction\">\n\n    <div className=\"instructionText\">\n      <div className=\"title\">\n        Reproduction Task\n      </div>\n\n      <div className=\"background\">\n        <span>In this task, you will need to 100% replicate the given report.</span>\n      </div>\n\n      <div className=\"action\">\n        <span className=\"label\">New placeholders:</span> <br />\n        <ol>\n          {placeholders.map(p => <li dangerouslySetInnerHTML={{ __html: p }}></li>)}\n        </ol>\n      </div>\n\n      <div className=\"action\">\n        <span className=\"label\">Tips:</span> <br />\n        <ol>\n          {tips.map(p => <li dangerouslySetInnerHTML={{ __html: p }}></li>)}\n        </ol>\n      </div>\n    </div>\n  </div>\n}\n\nexport function TrainingInstruction() {\n  const [step, setStep] = useState(0)\n\n  const onBack = () => {\n    setStep((step) => step - 1);\n  }\n  const onNext = () => {\n    setStep((step) => step + 1);\n  }\n\n  const renderInstruction = () => {\n    const curStep = instructionText[step]\n\n    return <div className=\"instructionText\">\n      <div className=\"title\">\n        {step}.{curStep.title}\n      </div>\n\n      <div className=\"background\">\n        {/* <span className=\"label\">Background:</span> <br /> */}\n        <span dangerouslySetInnerHTML={{ __html: curStep.background }}></span>\n      </div>\n\n      {curStep.content && <div className=\"content\">\n        <em>{curStep.content}</em>\n      </div>}\n\n      {curStep.action &&\n        <div className=\"action\">\n          <span className=\"label\">Action:</span> <br />\n          {Array.isArray(curStep.action)\n            ? <ol>\n              {curStep.action.map(p => <li dangerouslySetInnerHTML={{ __html: p }}></li>)}\n            </ol>\n            : <span dangerouslySetInnerHTML={{ __html: curStep.action }}></span>\n\n          }\n\n        </div>\n      }\n\n\n      {curStep.result &&\n        <div className=\"result\">\n          <span className=\"label\">Result:</span> <br /> {curStep.result}\n        </div>\n      }\n\n    </div>\n  }\n\n  return <div className=\"instruction\">\n    {renderInstruction()}\n    <MobileStepper\n      variant=\"text\"\n      steps={instructionText.length}\n      position=\"static\"\n      activeStep={step}\n      className={'instructionStepper'}\n      backButton={\n        <Button size=\"small\" onClick={onBack} disabled={step === 0}>\n          <KeyboardArrowLeftIcon /> Back\n        </Button>\n      }\n      nextButton={\n        <Button size=\"small\" onClick={onNext} disabled={step === instructionText.length - 1}>\n          Next <KeyboardArrowRightIcon />\n        </Button>\n      }\n\n    /></div>\n}","import './App.scss';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { cloneDeep, isEqual } from 'lodash';\nimport { FormControl, IconButton, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport {\n  RefreshSharp as RefreshSharpIcon,\n  DeleteSharp as DeleteShartIcon,\n} from '@material-ui/icons';\n\nimport { ConstituencyNode, DItem, NLPLabel, VisLabel } from './@types'\nimport {\n  SubDataTable, Chart, WordProcessor, WordProcessorRef, MapVis, Panel, LineChart, BarChart\n} from './components';\nimport { HintData, isHintNode, Others, TaskRet, ITaskNode, OpNode } from './components/WordProcessor';\nimport {\n  fetchData, getByCountryWeek, getByRegionDaily, getByRegionWeek, getLastWeekByCountry, getLastWeekByRegion, getReproductionData, getReproductionMap, getTrainingData\n} from './data';\nimport { HintNode, isHintData } from './components/WordProcessor/autoHint';\nimport { StateMap } from './components/StateMap';\nimport { TrainingInstruction, Tips, Task3 } from './components/TrainingIntroduction';\n\nexport interface TableFilter {\n  attr: string\n  direct: 'asce' | 'desc' | 'clean'\n}\n\nexport interface Layout {\n  i: string,\n  x: number, y: number, w: number, h: number,\n  minW?: number, maxW?: number\n  show: boolean\n}\n\ninterface IChart {\n  type: 'chart' | 'table' | 'map' | 'barchart' | 'linechart'\n  datasetId: string\n  data: DItem[]\n  filters: TableFilter[]\n}\n\nconst taskLists = ['Trainning', 'Reproduction', 'Main']\n\n// const featureList = [\n//   // Retrieve and compute value\n//   'Retrieve values',\n//   'Compute values',\n//   // Maintain consistency\n//   'Data-driven update',\n//   'Reactive update',\n//   'Error detection',\n//   // Interactive manipulation\n//   'Interactive text objects',\n//   'Bidirectional interaction',\n//   // Update table and vis\n//   'Table updating',\n//   'Vis updating'\n// ]\n\nfunction App() {\n\n  const [curTask, setCurTask] = useState<'Trainning' | 'Reproduction' | 'Main'>('Trainning')\n  const [features, setFeatures] = useState<string[]>([])\n  const [datasets, setDatasets] = useState<Record<string, { data: DItem[], use: boolean, id: string }>>({\n    trainingData: { data: getTrainingData(), use: true, id: 'trainingData' },\n    trainingData2: { data: getTrainingData(), use: true, id: 'trainingData2' },\n    reProductionData: { data: getReproductionData(), use: false, id: 'reProductionData' },\n    reProductionMap: { data: getReproductionMap(), use: false, id: 'reProductionMap' },\n  })\n  const [showDataSet, setShowDataset] = useState<string | null>(null)\n\n  // const [labels, setLabels] = useState<VisLabel[]>([])\n  // hilighted\n  const [highlightedCell, setHighlightedCell] = useState<HintData | undefined>()\n  // focused\n  const [curSentenceHL, setCurSentenceHL] = useState<Array<HintData | OpNode> | undefined>()\n  const [allDataPhrases, setAllDataPhrases] = useState<Array<Array<HintData | OpNode>>>([])\n\n  // screnshot\n  const [charts, setCharts] = useState<IChart[]>([])\n  // ref\n  const wpRef = useRef<WordProcessorRef>(null)\n\n  useEffect(() => {\n    const setData = async () => {\n      const data = await fetchData()\n      const byRegionDaily = getByRegionDaily(data)\n      const byCountryWeek = getByCountryWeek(data)\n      const lastWeekByCountry = getLastWeekByCountry(byCountryWeek)\n\n      const byRegionWeek = getByRegionWeek(byRegionDaily)\n      const lastWeekByRegion = getLastWeekByRegion(byRegionWeek)\n\n      const newDatasets = {\n        // byCountryWeek,\n        ...datasets,\n        byRegionWeek: { data: byRegionWeek, use: false, id: 'byRegionWeek' },\n        byRegionDaily: { data: byRegionDaily, use: false, id: 'byRegionDaily' },\n        lastWeekByRegion: { data: lastWeekByRegion, use: false, id: 'lastWeekByRegion' },\n        lastWeekByRegion2: { data: lastWeekByRegion, use: false, id: 'lastWeekByRegion2' },\n        lastWeekByCountry: { data: lastWeekByCountry, use: false, id: 'lastWeekByCountry' },\n      }\n      setDatasets(newDatasets)\n    }\n    setData()\n  }, [])\n\n  /**\n   * Word Processor\n   */\n  const onOthers = useCallback((others: Others, valueFormat?: (...args: any[]) => any) => {\n    // console.debug('onOthers', others)\n    console.log('%c onOthers', 'background: #222; color: #bada55', others);\n\n    setCharts(charts => {\n      // add new rows here\n      if (others.type === 'sum') {\n        const chartIdx = charts.findIndex(c => c.type === 'table')\n        if (chartIdx === -1) return charts\n        const chart = charts[chartIdx]\n        const newCharts = [...charts]\n        const newChartData = [...chart.data]\n\n        const { items } = others\n        const id = `sum ${items.length} rows`\n        const sumItem = items.reduce((o, item) => {\n          Object.keys(item.data)\n            .forEach((key, kIdx) => {\n              if (kIdx === 0) {\n                o[key] = id\n              } else {\n                if (!(key in o)) o[key] = 0\n                o[key] += +item.data[key]\n              }\n            })\n          return o\n        }, {})\n        delete sumItem['_item'] // remove a hack placeholder\n        console.log('sumItem', sumItem)\n\n        const targetItemIdx = newChartData.findIndex(c => c.id === id)\n        console.log(targetItemIdx, newChartData[targetItemIdx])\n        if (targetItemIdx !== -1 && !isEqual(sumItem, newChartData[targetItemIdx])) {\n          newChartData[targetItemIdx] = {\n            id,\n            rowIdx: newChartData.length,\n            virtualAttr: [],\n            data: sumItem, virtual: true, exclude: true\n          }\n          newCharts[chartIdx] = {\n            ...chart,\n            data: newChartData\n          }\n          console.log('newCharts', newCharts)\n          return newCharts\n        } else if (targetItemIdx === -1) {\n          // add item to subtable data\n          newChartData.push({\n            id,\n            rowIdx: newChartData.length,\n            virtualAttr: [],\n            data: sumItem, virtual: true, exclude: true\n          })\n          newCharts[chartIdx] = {\n            ...chart,\n            data: newChartData\n          }\n          return newCharts\n        }\n      } else if (others.items.length !== 175 && (others.type === 'min' || others.type === 'max')) {\n        // already sorted, should only take the orders, but not overwrite the data\n        const { items, attr } = others\n        console.log('items', items, 'attr', attr)\n        // hack, assume is the only table\n        const chartIdx = charts.findIndex(c => c.type === 'table')\n        if (chartIdx === -1) return charts\n        const chart = charts[chartIdx]\n        const newCharts = [...charts]\n        newCharts[chartIdx] = {\n          ...chart,\n          data: [\n            ...items.map(item => chart.data.find(d => d.id === item.id)),\n            ...chart.data.filter(d => items.every(item => item.id !== d.id))],\n          filters: [...chart.filters, { attr: attr!, direct: others.type === 'min' ? 'asce' : 'desc' }]\n        } as IChart\n        console.log(newCharts)\n        return newCharts\n      } else if (others.type === 'compare') {\n        const { items, attr } = others\n        console.log('Compare others: items', items, 'attr', attr)\n        const chartIdx = charts.findIndex(c => c.type === 'table')\n        if (chartIdx === -1) return charts\n        const chart = charts[chartIdx]\n        const newCharts = [...charts]\n\n        const newAttr = `diff ${attr}`\n        // calculate new columns for all rows\n        const newData = chart.data.map(row => {\n          const newRow = cloneDeep(row)\n          const newValue = valueFormat\n            ? valueFormat(newRow.data[attr!], (items.find(item => item.id === newRow.id)?.data[attr!] ?? 0))\n            : newRow.data[attr!] - (items.find(item => item.id === newRow.id)?.data[attr!] ?? 0)\n\n          const keyValues = Object.entries(newRow.data)\n          const idx = keyValues.findIndex(([key]) => key === attr)\n          if (idx === -1) {\n            console.error('The idx of attr:', attr, ' is -1', keyValues)\n            return newRow\n          }\n\n          if (newAttr in row.data) {\n            newRow.data[newAttr] = newValue\n          } else {\n            keyValues.splice(idx + 1, 0, [newAttr, newValue])\n            newRow.data = Object.fromEntries(keyValues)\n          }\n          newRow.virtualAttr = Array.from(new Set(newRow.virtualAttr).add(newAttr))\n          return newRow\n        })\n        newCharts[chartIdx] = {\n          ...chart,\n          data: newData\n        }\n        return newCharts\n      }\n      return charts\n    })\n  }, [])\n  const onSelectHint = useCallback((hintData, taskTree, others) => {\n    console.group('onSelectHint')\n    console.log('Candidate', hintData)\n    console.log('TaskTree', taskTree)\n    console.log('Others', others)\n\n    if (!isEqual(hintData, highlightedCell)) {\n      console.log('setHighlightedCell')\n      setHighlightedCell(hintData)\n      others && onOthers(others, hintData?.['valueFormat'])\n    }\n\n    console.groupEnd()\n  }, [onOthers, highlightedCell])\n  const onFocusCurSentence = useCallback((dataPhrases?: Array<HintData | OpNode>, taskTree?: ITaskNode, taskRets?: TaskRet[]) => {\n    console.group('onFocusCurSentence')\n    console.log('dataPhrases', dataPhrases)\n    console.log('taskTree', taskTree)\n    console.log('taskRet', taskRets)\n    if (!isEqual(curSentenceHL, dataPhrases)) {\n      console.log('setCurSentenceHL')\n      setCurSentenceHL(dataPhrases)\n    }\n    console.groupEnd()\n  }, [curSentenceHL])\n  const onChangeDataPhrases = useCallback((dataPhrases: Array<Array<HintData | OpNode>>) => {\n    console.group('onChangeDataPhrases')\n    if (!isEqual(allDataPhrases, dataPhrases)) {\n      console.log('setAllDataPhrases')\n      setAllDataPhrases(dataPhrases)\n    }\n    console.groupEnd()\n  }, [allDataPhrases])\n  const onTab = useCallback((visLabels: VisLabel[], tokens: NLPLabel[], constituency: ConstituencyNode | null) => {\n    console.group('onTab')\n    console.log('VisLabels', visLabels)\n    console.log('Tokens', tokens)\n    console.log('Constituency', constituency)\n    // setLabels(visLabels)\n    console.groupEnd()\n  }, [])\n\n  /**\n   * Bar Chart\n   */\n  const onBrushBarChart = useCallback((fromItem: DItem, toItem: DItem) => {\n    const days = curSentenceHL?.filter(f => f.attr === 'day').filter((_, i) => i < 2)\n    if (!days || days.length < 2) return\n\n    const newValues = [fromItem, toItem]\n\n    if (days.some((day, i) => day.rowId !== newValues[i].id)) {\n      const payload = days.filter(isHintData).map((day, i) => [day, newValues[i]]) as [HintNode, DItem][]\n      wpRef.current?.updateBarChartHintNode(payload)\n    }\n\n  }, [curSentenceHL])\n\n  /**\n   * Line Chart\n   */\n  const onBrushLineChart = useCallback((fromDate: Date, toDate: Date) => {\n    const dates = curSentenceHL?.filter(f => f.attr === 'date')\n    if (!dates || dates.length < 2) return\n    const newValues = [fromDate, toDate]\n\n    wpRef.current?.updateLinechartHintNode(dates.filter((_, i) => i < 2)\n      .filter(isHintNode)\n      .map((date, i) => [date, newValues[i]]))\n  }, [curSentenceHL])\n\n  /**\n   * Chart\n   */\n  const onUpdateBrush = useCallback((from: string, to: string) => {\n    const dates = curSentenceHL?.filter(f => f.attr === 'date')\n    if (!dates || dates.length < 2) return\n    // how to update the two hints?\n    // need ref\n    const newValues = [from, to]\n    wpRef.current?.updateHintNode(dates.filter((_, i) => i < 2)\n      .filter(isHintNode)\n      .map((date, i) => [date, newValues[i]]))\n  }, [curSentenceHL])\n\n  /**\n   * SubTabls\n   */\n  const onAcceptRows = useCallback((rowId: string, chartIdx: number) => {\n    console.log('onAccept row', rowId)\n    const chart = charts[chartIdx]\n    const itemIdx = chart.data.findIndex(row => row.id === rowId)\n    const item = chart.data[itemIdx]\n    if (item) {\n      const newData = [...chart.data]\n      newData[itemIdx] = { ...item, virtual: false }\n      const newChart = { ...chart, data: newData }\n      const newCharts = [...charts]\n      newCharts[chartIdx] = newChart\n\n      setCharts(newCharts)\n    }\n  }, [charts])\n  const onRejectRow = useCallback((rowId: string, chartIdx: number) => {\n    console.log('onRejectRow', rowId)\n    const chart = charts[chartIdx]\n    const newChart = { ...chart, data: [...chart.data.filter(d => d.id !== rowId)] }\n    const newCharts = [...charts]\n    newCharts[chartIdx] = newChart\n\n    setCharts(newCharts)\n    // }\n  }, [charts])\n  const onAcceptCol = useCallback((attr: string, chartIdx: number) => {\n    const chart = charts[chartIdx]\n    if (!chart) return\n\n    const newData = chart.data.map(row => {\n      return {\n        ...row,\n        virtualAttr: row.virtualAttr.filter(a => a !== attr)\n      }\n    })\n    const newChart = { ...chart, data: newData }\n    const newCharts = [...charts]\n    newCharts[chartIdx] = newChart\n    setCharts(newCharts)\n  }, [charts])\n  const onRejectCol = useCallback((attr: string, chartIdx: number) => {\n    const chart = charts[chartIdx]\n    if (!chart) return\n\n    const newData = chart.data.map(row => {\n      const data = row.data\n      delete data[attr]\n      return {\n        ...row,\n        data,\n        virtualAttr: row.virtualAttr.filter(a => a !== attr)\n      }\n    })\n    const newChart = { ...chart, data: newData }\n    const newCharts = [...charts]\n    newCharts[chartIdx] = newChart\n    setCharts(newCharts)\n  }, [charts])\n  const onRemoveFilter = useCallback((attr: string, chartIdx: number) => {\n    const chart = charts[chartIdx]\n    if (!chart) return\n    const newChart: IChart = {\n      ...chart,\n      data: [...chart.data].sort((a, b) => a.rowIdx - b.rowIdx),\n      filters: chart.filters?.filter(d => d.attr !== attr) || []\n    }\n    const newCharts = [...charts]\n    newCharts[chartIdx] = newChart\n    setCharts(newCharts)\n  }, [charts])\n  const onToggleSorter = useCallback((filter: TableFilter, chartIdx: number) => {\n    console.log('onToggleSorter', filter)\n    const chart = charts[chartIdx]\n    if (!chart) return\n\n    const newFilters = [...chart.filters]\n    const filterIdx = newFilters.findIndex(f => f.attr === filter.attr)\n    if (filterIdx === -1) return\n\n    let sort\n    if (filter.direct === 'asce') {\n      newFilters[filterIdx] = { ...filter, direct: 'desc' }\n      sort = (a, b) => b.data[filter.attr] - a.data[filter.attr]\n    } else if (filter.direct === 'desc') {\n      newFilters[filterIdx] = { ...filter, direct: 'clean' }\n      sort = (a, b) => a.rowIdx - b.rowIdx\n    } else if (filter.direct === 'clean') {\n      newFilters[filterIdx] = { ...filter, direct: 'asce' }\n      sort = (a, b) => a.data[filter.attr] - b.data[filter.attr]\n    }\n    const newData = [\n      ...chart.data.filter(r => !r.exclude).sort(sort),\n      ...chart.data.filter(r => r.exclude)\n    ]\n    const newChart: IChart = { ...chart, data: newData, filters: newFilters }\n    const newCharts = [...charts]\n    newCharts[chartIdx] = newChart\n    setCharts(newCharts)\n  }, [charts])\n  const onEditCell = useCallback((id: string, field: string, value: string, chartIdx: number) => {\n    console.log(id, field, value)\n    const chart = charts[chartIdx]\n    if (!chart) return\n\n    const updateData = chart.data.map((row, idx) => {\n      return row.id === id\n        ? { ...row, data: { ...row.data, [field]: value.trim() } }\n        : row\n    })\n    const newChart = { ...chart, data: updateData }\n    const newCharts = [...charts]\n    newCharts[chartIdx] = newChart\n    setCharts(newCharts)\n    // should further update the raw data\n    if (chart.datasetId) {\n      const oDataset = datasets[chart.datasetId]\n      const cloneData = cloneDeep(oDataset.data)\n      const updateData = cloneData.map((row, idx) => {\n        return row.id === id\n          ? { ...row, data: { ...row.data, [field]: value.trim() } }\n          : row\n      })\n      setDatasets({\n        ...datasets,\n        [chart.datasetId]: { data: updateData, use: true, id: chart.datasetId }\n      })\n    }\n\n  }, [charts, datasets])\n\n  /**\n   * Renderer\n   */\n  const renderBarChart = () =>\n    <Panel key=\"barChart\"\n      title={'Chart -- Money spent on food this week'}\n      insights={[\n        'The spent money increases from ?? to ??.',\n      ]}\n      onSave={() => {\n        setCharts([...charts, {\n          type: 'barchart', data: cloneDeep(datasets['trainingData2'].data), filters: [], datasetId: 'trainingData2'\n        }])\n      }}\n      onShowData={() => {\n        // setShowDataset(datasetKey)\n      }}\n    >\n      <BarChart data={datasets['trainingData2']?.data ?? []} />\n    </Panel>\n\n  const renderBarChartTable = () =>\n    <Panel key=\"tableBarChart\"\n      title={'Table -- Money spent on food this week'}\n      insights={[\n        'The money used on Friday is ??',\n        'The total amount of money spent this week is ??',\n        'The money used on Friday is ??% of all day',\n        'The highest amount of money is spent on ??'\n      ]}\n      onSave={() => {\n        setCharts([...charts, {\n          type: 'table', datasetId: 'trainingData', data: cloneDeep(datasets['trainingData'].data), filters: []\n        }])\n      }}\n      onShowData={() => {\n        // setShowDataset(datasetKey)\n      }}\n    >\n      <SubDataTable data={datasets['trainingData']?.data ?? []} datasetId={'trainingData'} idx={-1} />\n    </Panel>\n\n  const renderLineChart = () => {\n\n    return <Panel key=\"lineChart\"\n      className={(highlightedCell && ('datasetId' in highlightedCell) && highlightedCell['datasetId'] === 'reProductionData') ? 'border' : ''}\n      title={'Chart -- Daily new cases for all states'}\n      insights={[\n        'In fact New York reports the highest number of new case at ??.',\n        'Then New York reports a decline in cases from ?? to ??.'\n      ]}\n      onSave={() => {\n        setCharts([...charts, {\n          type: 'linechart', data: cloneDeep(datasets['reProductionData'].data), filters: [], datasetId: 'reProductionData'\n        }])\n      }}\n      onShowData={() => {\n        setShowDataset('reProductionData')\n      }}\n    >\n      <LineChart data={datasets['reProductionData']?.data ?? []} />\n    </Panel>\n  }\n\n  const renderStateMap = () => {\n    return <Panel key=\"StateMap\"\n      title={'StateMap'}\n      className={(highlightedCell && ('datasetId' in highlightedCell) && highlightedCell['datasetId'] === 'reProductionMap') ? 'border' : ''}\n      insights={[\n        'The average number of new cases of all state is ??',\n        'There are ?? state reports less than 65000 new cases.',\n        'The state with the highest number of new cases is ??.',\n        'Compared to California, new reports ?? less cases.',\n      ]}\n      onSave={() => {\n        // setCharts([...charts, {\n        //   type: 'linechart', data: cloneDeep(datasets['reProductionData'].data), filters: []\n        // }])\n      }}\n      onShowData={() => {\n        setShowDataset('reProductionMap')\n      }}\n    >\n      <StateMap data={datasets['reProductionMap'].data} />\n    </Panel>\n  }\n\n  const renderSTable = () => {\n    return <Panel key={'stable'}\n      className={(highlightedCell && ('datasetId' in highlightedCell) && highlightedCell['datasetId'] === 'lastWeekByRegion') ? 'border' : ''}\n      title={'Table -- The data for this week'}\n      insights={[\n        'In total, ?? new cases are reported this week.',\n        'The highest number of new csaes is reported by ?? region.',\n        'The new cases of Europe is ?? percentage of all regions.'\n      ]}\n      onSave={() => {\n        setCharts([...charts, {\n          type: 'table', data: cloneDeep(datasets['lastWeekByRegion'].data), filters: [], datasetId: 'lastWeekByRegion'\n        }])\n      }}\n      onShowData={() => {\n        setShowDataset('lastWeekByRegion')\n      }}\n    >\n      <SubDataTable data={datasets['lastWeekByRegion'].data} datasetId=\"lastWeekByRegion\" idx={-1} />\n    </Panel>\n  }\n\n  const renderChart = () => {\n    const datasetKey = 'byRegionDaily'\n    return <Panel key=\"vis\"\n      className={(highlightedCell && ('datasetId' in highlightedCell) && highlightedCell['datasetId'] === 'lastWeekByRegion2') ? 'border' : ''}\n      title={'Chart -- Daily new cases for all regions'}\n      insights={[\n        'Compared to the last week, the number of new cases in Europe is reduced by ??',\n        'Europe report a decline in weekly cases from ?? to ??'\n      ]}\n      onSave={() => {\n        setCharts([...charts, {\n          type: 'chart', data: cloneDeep(datasets[datasetKey].data), filters: [], datasetId: 'byRegionDaily'\n        }])\n      }}\n      onShowData={() => {\n        setShowDataset(datasetKey)\n      }}\n    >\n      <Chart data={datasets[datasetKey].data} />\n    </Panel>\n  }\n\n  const renderMap = () => {\n    const datasetKey = 'lastWeekByCountry'\n    return <Panel key=\"map\"\n      className={(highlightedCell && ('datasetId' in highlightedCell) && highlightedCell['datasetId'] === datasetKey) ? 'border' : ''}\n      title=\"Map -- The new cases in this week\"\n      insights={[\n        '?? country in America report more than 10000 new cases',\n        'The country with the most number of new cases in Africa is ??',\n        'The cases of Russian is less than ??',\n      ]}\n      onSave={() => {\n        setCharts([...charts, {\n          type: 'map', data: cloneDeep(datasets[datasetKey].data), filters: [], datasetId: 'lastWeekByCountry'\n        }])\n      }}\n      onShowData={() => {\n        setShowDataset(datasetKey)\n      }}\n    >\n      <MapVis data={datasets[datasetKey].data} />\n    </Panel>\n  }\n\n  const renderInsights = () => {\n    switch (curTask) {\n      case 'Trainning':\n        return [renderBarChartTable(), renderBarChart()]\n      case 'Reproduction':\n        return [renderStateMap(), renderLineChart()]\n      case 'Main':\n        return [renderSTable(), renderChart(), renderMap()]\n    }\n  }\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"insights colRegion\">\n        <div className=\"insights-inner\">\n          {renderInsights()}\n        </div>\n      </div>\n\n      <div className=\"document colRegion\">\n        <Panel key=\"wp\" title=\"Document\" minH={300}>\n          <WordProcessor\n            ref={wpRef}\n            // dataTable={datasets['lastWeekByRegion']?.data ?? []}\n            rawData={Object.entries(datasets).reduce((o, [id, item]) => {\n              if (item.use) {\n                o[id] = item.data\n              }\n              return o\n            }, {})}\n            onTab={onTab}\n            onSelectHint={onSelectHint}\n            onFocusCurSentence={onFocusCurSentence}\n            onOthers={onOthers}\n            onChangeDataPhrases={onChangeDataPhrases}\n          />\n          {charts.map((chart, chartIdx) => {\n\n            return <div className='screenshot' key={`${chart.type}_${chartIdx}`}>\n              <div className=\"toolbars\">\n                <IconButton aria-label=\"refresh\"\n                  onClick={() => { }}\n                >\n                  <RefreshSharpIcon />\n                </IconButton>\n                <IconButton aria-label=\"delete\"\n                  onClick={() => {\n                    setCharts(charts.filter((_, i) => i !== chartIdx))\n                  }}\n                >\n                  <DeleteShartIcon />\n                </IconButton>\n              </div>\n\n              {chart.type === 'chart' ?\n                <Chart\n                  data={chart.data}\n                  focused={curSentenceHL}\n                  allDataPhrases={allDataPhrases}\n                  onUpdateBrush={onUpdateBrush}\n                />\n                : chart.type === 'table' ?\n                  <SubDataTable\n                    idx={chartIdx}\n                    data={chart.data}\n                    datasetId={chart.datasetId}\n                    highlighted={highlightedCell}\n                    focused={curSentenceHL}\n                    filters={chart.filters}\n                    onEditCell={onEditCell}\n                    onAcceptRow={onAcceptRows}\n                    onRejectRow={onRejectRow}\n                    onAcceptCol={onAcceptCol}\n                    onRejectCol={onRejectCol}\n                    onRemoveFilter={onRemoveFilter}\n                    onToggleSorter={onToggleSorter}\n                  />\n                  : chart.type === 'map' ?\n                    <MapVis\n                      data={chart.data}\n                      focused={curSentenceHL}\n                      allDataPhrases={allDataPhrases}\n                    />\n                    : chart.type === 'barchart' ?\n                      <BarChart\n                        focused={curSentenceHL}\n                        allDataPhrases={allDataPhrases}\n                        data={chart.data}\n                        onUpdateBrush={onBrushBarChart}\n                      />\n                      : chart.type === 'linechart' ?\n                        <LineChart\n                          data={chart.data}\n                          allDataPhrases={allDataPhrases}\n                          focused={curSentenceHL}\n                          onUpdateBrush={onBrushLineChart}\n                        />\n                        : ''}\n            </div>\n          })}\n        </Panel>\n      </div>\n\n      <div className=\"rawData colRegion\">\n        <FormControl style={{\n          minWidth: '100px',\n          marginTop: '1rem',\n          marginBottom: '1rem'\n          // position: 'absolute',\n          // bottom: '16px'\n        }} size=\"small\" variant='outlined'>\n          <InputLabel id=\"select-outlined-label\">Task</InputLabel>\n          <Select\n            labelId=\"select-outlined-label\"\n            id=\"simple-select-outlined\"\n            value={curTask}\n            onChange={(e) => {\n              console.log('switch task', e.target.value)\n              const value: string = e.target.value as string\n              setCurTask(value as any)\n              wpRef.current?.clearContent()\n              setCharts([])\n              // should change the dataset\n              if (value === 'Main') {\n                setDatasets({\n                  trainingData: { data: datasets['trainingData'].data, use: false, id: 'trainingData' },\n                  trainingData2: { data: datasets['trainingData2'].data, use: false, id: 'trainingData2' },\n                  reProductionMap: { data: datasets['reProductionMap'].data, use: false, id: 'reProductionMap' },\n                  reProductionData: { data: datasets['reProductionData'].data, use: false, id: 'reProductionData' },\n                  byRegionWeek: { data: datasets['byRegionWeek'].data, use: true, id: 'byRegionWeek' },\n                  byRegionDaily: { data: datasets['byRegionDaily'].data, use: false, id: 'byRegionDaily' },\n                  lastWeekByRegion: { data: datasets['lastWeekByRegion'].data, use: true, id: 'lastWeekByRegion' },\n                  lastWeekByRegion2: { data: datasets['lastWeekByRegion2'].data, use: true, id: 'lastWeekByRegion2' },\n                  lastWeekByCountry: { data: datasets['lastWeekByCountry'].data, use: true, id: 'lastWeekByCountry' },\n                })\n              } else if (value === 'Reproduction') {\n                setDatasets({\n                  trainingData: { data: datasets['trainingData'].data, use: false, id: 'trainingData' },\n                  trainingData2: { data: datasets['trainingData2'].data, use: false, id: 'trainingData2' },\n                  reProductionMap: { data: datasets['reProductionMap'].data, use: true, id: 'reProductionMap' },\n                  reProductionData: { data: datasets['reProductionData'].data, use: true, id: 'reProductionData' },\n                  byRegionWeek: { data: datasets['byRegionWeek'].data, use: false, id: 'byRegionWeek' },\n                  byRegionDaily: { data: datasets['byRegionDaily'].data, use: false, id: 'byRegionDaily' },\n                  lastWeekByRegion: { data: datasets['lastWeekByRegion'].data, use: false, id: 'lastWeekByRegion' },\n                  lastWeekByRegion2: { data: datasets['lastWeekByRegion2'].data, use: false, id: 'lastWeekByRegion2' },\n                  lastWeekByCountry: { data: datasets['lastWeekByCountry'].data, use: false, id: 'lastWeekByCountry' },\n                })\n              } else if (value === 'Trainning') {\n                setDatasets({\n                  trainingData: { data: datasets['trainingData'].data, use: true, id: 'trainingData' },\n                  trainingData2: { data: datasets['trainingData2'].data, use: true, id: 'trainingData2' },\n                  reProductionMap: { data: datasets['reProductionMap'].data, use: false, id: 'reProductionMap' },\n                  reProductionData: { data: datasets['reProductionData'].data, use: false, id: 'reProductionData' },\n                  byRegionDaily: { data: datasets['byRegionDaily'].data, use: false, id: 'byRegionDaily' },\n                  byRegionWeek: { data: datasets['byRegionWeek'].data, use: false, id: 'byRegionWeek' },\n                  lastWeekByRegion: { data: datasets['lastWeekByRegion'].data, use: false, id: 'lastWeekByRegion' },\n                  lastWeekByRegion2: { data: datasets['lastWeekByRegion2'].data, use: false, id: 'lastWeekByRegion2' },\n                  lastWeekByCountry: { data: datasets['lastWeekByCountry'].data, use: false, id: 'lastWeekByCountry' },\n                })\n              }\n            }}\n            displayEmpty\n            label=\"Region\"\n          >\n            {taskLists.map(r => <MenuItem key={r} value={r}>Task: {r}</MenuItem>)}\n          </Select>\n        </FormControl>\n\n        {curTask === 'Trainning' && <TrainingInstruction />}\n        {curTask === 'Reproduction' && <Tips></Tips>}\n        {curTask === 'Main' && <Task3></Task3>}\n        {/* {curTask === 'Trainning' && <List dense style={{ maxWidth: '200px' }}>\n          {featureList.map((value) => {\n            const labelId = `checkbox-list-secondary-label-${value}`;\n            return (\n              <ListItem key={value} button>\n                <ListItemText id={labelId} primary={`${value}`} />\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge=\"end\"\n                    onChange={() => {\n                      const currentIndex = features.indexOf(value);\n                      const newChecked = [...features];\n                      if (currentIndex === -1) {\n                        newChecked.push(value);\n                      } else {\n                        newChecked.splice(currentIndex, 1);\n                      }\n                      setFeatures(newChecked);\n                    }}\n                    checked={features.indexOf(value) !== -1}\n                    inputProps={{ 'aria-labelledby': labelId }}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>} */}\n        {/* \n        <Panel key=\"rtable\" title=\"Raw Data\">\n          {showDataSet &&\n            <DataTable\n              data={datasets[showDataSet].data || []}\n            // onEditCell={(id, field, value) => {\n            //   console.log(id, field, value)\n            //   const updateData = byRegionDaily.map((row, idx) => {\n            //     return idx === id ? {\n            //       // id: row.id,\n            //       // rowIdx: row.rowIdx,\n            //       // virtualAttr: [],\n            //       ...row,\n            //       data: {\n            //         ...row.data, [field]: value\n            //       }\n            //     } : row\n            //   })\n            //   setByRegionDaily(updateData)\n            // }}\n            />}\n        </Panel> */}\n      </div>\n\n\n\n      {/* <svg className=\"dep-svg\">\n        <defs>\n          <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\"\n            markerWidth=\"6\" markerHeight=\"6\"\n            orient=\"auto-start-reverse\">\n            <path fill=\"red\" d=\"M 0 0 L 10 5 L 0 10 z\" />\n          </marker>\n        </defs>\n\n        {labels\n          .filter(label => headOf(label.head_idx, labels)?.token_idx !== label.token_idx)\n          .map(label => {\n            const head = labels.find(l => l.token_idx === label.head_idx)!\n            if (!head) return ''\n            return <>\n              <path key={`path_${label.token_idx}`} className=\"dep\" markerStart=\"url(#arrow)\"\n                d={`\n              M${label.x + label.tag.length * 4},${label.y - 10}\n              C${label.x},${label.y - 50} ${head.x},${head.y - 50} ${head.x},${head.y - 10}\n            `}></path>\n              <g key={`g_${label.token_idx}`} transform={`translate(${label.x}, ${label.y})`}>\n                <text>{label.tag}</text>\n              </g>\n            </>\n          })}\n      </svg> */}\n\n    </div>\n  );\n}\n\nexport default App;\n\n\nexport function useCompare<T>(value: T): T {\n  const ref = useRef<T | undefined>();\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current as T;\n}\n\nexport const addByregion = (o, item) => {\n  Object.keys(item).forEach(key => {\n    if (key !== 'date') {\n      if (!(key in o)) o[key] = 0\n      o[key] += item[key]\n    }\n  })\n  return o\n}","import {\n    PlatePluginKey,\n    SPEditor,\n    TElement,\n} from '@udecode/plate-core';\nimport { Range, Node } from 'slate';\n\nimport { ConstituencyNode, DItem, NLPLabel, VisLabel } from '../../../@types';\nimport { OpNode } from '../operator';\nimport { ITaskNode } from './taskEngine/TaskNode';\n\nexport const ELEMENT_HINT = 'HINT';\n\ninterface BaseHintData {\n    value: string\n    // dataType: 'attr' | 'value' | 'computed' | 'placeholder',\n    // nodeType: 'indep' | 'dep'\n    attr: string\n    colIdx: number\n    rowIdx: number\n    selectedIdx?: number\n    rowId: string\n}\n\nexport interface PlaceholderHintData extends BaseHintData {\n    nodeType: 'placeholder'\n    dataType: 'value' | 'computed' | 'attr'\n    phType: 'VALUE' | 'COUNT_ITEMS' | 'DIFF_ATTR' | 'RATIO'\n    valueFormat?: (...args: any[]) => any\n    deps: { tokens: NLPLabel[], constituency: ConstituencyNode } | null\n}\n\nexport interface InDepHintData extends BaseHintData {\n    nodeType: 'indep'\n    dataType: 'attr' | 'value'\n    datasetId: string\n    query: string\n}\nexport interface DepHintdata extends BaseHintData {\n    nodeType: 'dep'\n    dataType: 'value' | 'computed'\n    // datasetId: string\n    valueFormat?: (...args: any[]) => any\n    deps: { tokens: NLPLabel[], constituency: ConstituencyNode }\n}\n\nexport type HintData = PlaceholderHintData | InDepHintData | DepHintdata\nexport const isHintData = (n: any): n is HintData => typeof n === 'object' && 'nodeType' in n && 'dataType' in n && 'attr' in n && 'value' in n\n\nexport type Others = {\n    type: 'sum' | 'min' | 'max' | 'compare'\n    items: DItem[],\n    attr?: string\n}\n\nexport type TaskRetItem = { type: 'item', data: DItem[], others?: Others }\nexport type TaskRetValue = { type: 'value', data: DepHintdata[], others?: Others }\nexport type TaskRet = TaskRetItem | TaskRetValue\n\nexport type HintNode = TElement<HintData>;\nexport const isHintNode = (n: any): n is HintNode => typeof n === 'object' && 'type' in n && n['type'] === ELEMENT_HINT\n\nexport const isDepHintNode = (n: Node): n is HintNode => isHintNode(n) &&\n    (n.nodeType === 'dep' || n.nodeType === 'placeholder')\nexport const isInDepHintNode = (n: Node): n is HintNode => isHintNode(n) &&\n    (n.nodeType === 'indep')\n\nexport interface HintPluginOptions extends PlatePluginKey {\n    // dataTable: DItem[];\n    rawData: Record<string, DItem[]>\n\n    onTab?: (labels: VisLabel[], tokens: NLPLabel[], constituency: ConstituencyNode | null) => void\n    onSelectHint?: (candidates?: HintData, taskTree?: ITaskNode, others?: Others) => void\n    onFocusCurSentence?: (dataPhrases?: Array<HintData | OpNode>, taskTree?: ITaskNode, res?: TaskRet[]) => void\n    onChangeDataPhrases?: (dataPhrases: Array<Array<HintData | OpNode>>) => void\n    onOthers?: (others: Others, valueFormat?: (...args: any[]) => any) => void\n}\n\nexport interface GetHintSelectProps {\n    /**\n     * Range from the hints trigger to the cursor\n     */\n    at: Range | null;\n\n    /**\n     * List of hintable items\n     */\n    options: Array<HintData>;\n    valueIndex: number;\n\n    /**\n     * Callback called when clicking on a hint option\n     */\n    onClickHint?: (editor: SPEditor, option: HintData) => void;\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import './wdyr'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nimport {\n    getPlatePluginTypes,\n    getRenderElement,\n    PlatePlugin,\n} from '@udecode/plate-core';\nimport { ELEMENT_OP, withLink } from './index';\nimport { getLinkDeserialize } from './getLinkDeserialize';\nimport { WithLinkOptions } from './types';\n\n/**\n * Enables support for hyperlinks.\n */\nexport const createOPPlugin = (options?: WithLinkOptions): PlatePlugin => ({\n    pluginKeys: ELEMENT_OP,\n    renderElement: getRenderElement(ELEMENT_OP),\n    deserialize: getLinkDeserialize(),\n    inlineTypes: getPlatePluginTypes(ELEMENT_OP),\n    withOverrides: withLink(options),\n});","import { getNodeDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { ELEMENT_OP } from './index';\n\nexport const getLinkDeserialize = (): Deserialize => (editor) => {\n    const options = getPlatePluginOptions(editor, ELEMENT_OP);\n\n    return {\n        element: getNodeDeserializer({\n            type: options.type,\n            getNode: (el) => ({\n                type: options.type,\n                url: el.getAttribute('href'),\n            }),\n            rules: [{ nodeNames: 'A' }],\n            ...options.deserialize,\n        }),\n    };\n};","import { TElement } from '@udecode/plate';\nimport { RangeBeforeOptions } from '@udecode/plate-common';\nimport { ELEMENT_OP } from '.';\n\nexport interface OpNodeData {\n    opKey: string;\n    opType: string;\n}\nexport type OpNode = TElement<OpNodeData>;\n\n\nexport interface WithLinkOptions {\n    /**\n     * Allow custom config for rangeBeforeOptions.\n     */\n    rangeBeforeOptions?: RangeBeforeOptions;\n}\n\nexport const isOpNode = (n: any): n is OpNode => typeof n === 'object' && 'type' in n && n['type'] === ELEMENT_OP","import {\n  getRangeBefore,\n  getText,\n  isCollapsed,\n  unwrapNodes,\n  wrapNodes\n} from '@udecode/plate-common';\nimport {\n  getPlatePluginType,\n  SPEditor,\n  WithOverride,\n} from '@udecode/plate-core';\nimport { withRemoveEmptyNodes } from '@udecode/plate-normalizers';\nimport { Range, Location, Editor, Point } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nimport OpNode from '../autoHint/taskEngine/OpNode';\nimport { WithLinkOptions } from './types';\n\nexport const ELEMENT_OP = 'opElm';\n\nfunction isOperator(input: string) {\n  for (const matcher of Object.values(OpNode.match)) {\n    const res = matcher(input)\n    if (res.length > 0) {\n      console.log('res[0]', res[0])\n      return res[0]\n    }\n  }\n  return { matchIdx: -1, opKey: undefined, type: undefined }\n}\n\nconst wrapLink = (editor: SPEditor, { at, opKey, type }: { opKey: string; type: string; at?: Location }) => {\n  wrapNodes(\n    editor,\n    {\n      type: getPlatePluginType(editor, ELEMENT_OP),\n      opKey, opType: type,\n      children: [],\n    },\n    { at, split: true }\n  );\n}\n\nconst upsertLink = (editor: SPEditor, { opKey, start, type }: { opKey: string; type: string; start: Point; }) => {\n\n  const pluginType = getPlatePluginType(editor, ELEMENT_OP);\n  const newSelection = editor.selection as Range;\n\n  unwrapNodes(editor, { at: start, match: { type: pluginType } });\n  wrapLink(editor, { at: { anchor: start, focus: newSelection.focus }, opKey, type });\n}\n\nconst upsertLinkIfValid = (editor: SPEditor, at: Location) => {\n  const [start, end] = Editor.edges(editor, Editor.path(editor, at))\n\n  const rangeFromBlockStart = Editor.range(editor, start, end) // getRangeFromBlockStart(editor, { at });\n  const textFromBlockStart = getText(editor, rangeFromBlockStart);\n\n  // console.log('rangeFromBlockStart', rangeFromBlockStart)\n  // console.log('textFromBlockStart', textFromBlockStart)\n  const { opKey, matchIdx, type } = isOperator(textFromBlockStart)\n\n  // dirty hack, ignore the `to` after compare\n  const preNode = Editor.previous(editor, { at: start })\n  if (opKey === 'to' && preNode) {\n    const text = preNode[0]['text'] as string\n    if (text && text.toLowerCase().includes('compare')) {\n      return false\n    }\n  }\n\n  if (rangeFromBlockStart && opKey && type) {\n    upsertLink(editor, { opKey, type, start: { ...rangeFromBlockStart.anchor, offset: matchIdx } });\n    return true;\n  }\n}\n\n/**\n * Insert space after a url to wrap a link.\n * Lookup from the block start to the cursor to check if there is an url.\n * If not found, lookup before the cursor for a space character to check the url.\n *\n */\nexport const withLink = ({\n  rangeBeforeOptions = {\n    matchString: [',', ' '],\n    skipInvalid: true,\n    afterMatch: true,\n    multiPaths: true,\n  },\n}: WithLinkOptions = {}): WithOverride<ReactEditor & SPEditor> => (editor) => {\n  const { insertText } = editor;\n\n  const type = getPlatePluginType(editor, ELEMENT_OP);\n\n  editor.insertText = (text) => {\n    if ([' ', ','].includes(text) && isCollapsed(editor.selection)) {\n      const selection = editor.selection as Range;\n\n      if (upsertLinkIfValid(editor, selection)) {\n        return insertText(text);\n      }\n\n      const beforeWordRange = getRangeBefore(editor, selection, rangeBeforeOptions);\n      if (beforeWordRange) {\n        const beforeWordText = getText(editor, beforeWordRange);\n        const { opKey, matchIdx, type } = isOperator(beforeWordText)\n\n        // dirty hack, ignore the `to` after compare\n        const preNode = Editor.previous(editor, { at: beforeWordRange.anchor.path })\n        if (opKey === 'to' && preNode) {\n          const preText = getText(editor, preNode[1])\n          if (preText && preText.toLowerCase().includes('compare')) {\n            insertText(text);\n            return false\n          }\n        }\n\n        if (opKey && type) {\n          upsertLink(editor, { opKey, type, start: { ...beforeWordRange.anchor, offset: matchIdx } });\n        }\n      }\n    }\n\n    insertText(text);\n  };\n\n  editor = withRemoveEmptyNodes({ type })(editor);\n\n  return editor;\n}\n\nexport * from './createLinkPlugin';\nexport * from './getLinkDeserialize';\nexport * from './types';","import './style.scss'\n\nimport React, { forwardRef, useEffect, useImperativeHandle, useMemo } from 'react';\nimport {\n  createBoldPlugin,\n  createHistoryPlugin,\n  createItalicPlugin,\n  createNodeIdPlugin,\n  createParagraphPlugin,\n  createReactPlugin,\n  createPlateComponents,\n  createPlateOptions,\n  createUnderlinePlugin,\n  ELEMENT_PARAGRAPH,\n  HeadingToolbar,\n  PlatePlugin,\n  Plate,\n  SPEditor,\n  withProps,\n  useStoreEditorValue,\n  usePlateActions,\n  MARK_ITALIC,\n  StyledLeaf,\n  useStoreEditorRef,\n  useEventEditorId,\n} from '@udecode/plate';\nimport { ReactEditor } from 'slate-react';\nimport { Editor, Transforms } from 'slate';\n\nimport { useCompare } from '../../App';\nimport { HintElement } from '../HintElement'\nimport { HintSelect } from '../HintSelect'\nimport { OpElement } from '../OpElement';\n\nimport { useAutoHintPlugin, ELEMENT_HINT, HintNode, HintPluginOptions, isHintNode, debugLog, HintData, isInDepHintNode, setHintNode, isDepHintNode, getHintNode, reactiveUpdate } from './autoHint'\nimport {\n  editableProps,\n} from './pluginOptions';\nimport { ToolbarButtonsBasicMarks } from './Toolbars';\nimport { withStyledPlaceHolders } from './withStyledPlaceHolders';\nimport { createOPPlugin, ELEMENT_OP } from './operator'\nimport { DItem } from '../../@types';\n\nconst defaultOptions = createPlateOptions()\n\nconst initialValuePlainText = [\n  {\n    type: ELEMENT_PARAGRAPH,\n    id: \"qwerqwer\",\n    children: [\n      {\n        text: '',\n      },\n    ],\n  },\n]\n\ninterface Props extends HintPluginOptions {\n  options?: Record<string, any>\n  onClickIO?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>, hintNode: HintNode) => void\n  onDbClickIO?: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>, hintNode: any) => void\n  // @deprecated\n  onChange?: (data: { hints: HintNode[], id: string }) => void\n}\n\nexport type WordProcessorRef = {\n  updateHintNode: (payload: Array<[HintData, string]>) => void\n  updateBarChartHintNode: (payload: Array<[HintData, DItem]>) => void\n  updateLinechartHintNode: (payload: Array<[HintData, Date]>) => void\n  clearContent: () => void\n}\n\nexport const DatatableContext = React.createContext<{\n  // dataTable: DItem[],\n  rawData: Record<string, DItem[]>\n}>({\n  // dataTable: [], \n  rawData: {}\n});\nexport const WordProcessor = React.memo(forwardRef<WordProcessorRef, Props>((props, ref) => {\n\n  const {\n    options = defaultOptions,\n    onClickIO,\n    onDbClickIO,\n    // onChange = (e) => { },\n    onTab,\n    onSelectHint,\n    onFocusCurSentence,\n    onChangeDataPhrases,\n    onOthers\n  } = props\n  // const dataTable = useCompare(props.dataTable ?? [])\n  const rawData = useCompare(props.rawData ?? [])\n\n  const { getHintSelectProps, plugin: hintPlugin } = useAutoHintPlugin({\n    // dataTable: dataTable.filter(d => !d.exclude),\n    rawData,\n    onTab, onSelectHint, onFocusCurSentence, onChangeDataPhrases, onOthers\n  });\n  const pluginsMemo = useMemo(() => {\n    const plugins: PlatePlugin<ReactEditor & SPEditor>[] = [\n      // editor\n      createReactPlugin(),\n      createHistoryPlugin(),\n      // element\n      createParagraphPlugin(),\n      createOPPlugin(),\n\n      // mark\n      createBoldPlugin(),\n      createItalicPlugin(),\n      createUnderlinePlugin(),\n\n      // plugings\n      createNodeIdPlugin(),\n      hintPlugin\n    ];\n\n    return plugins;\n  }, [hintPlugin]);\n\n  const components = useMemo(() => {\n\n    return withStyledPlaceHolders(createPlateComponents({\n      [ELEMENT_HINT]: withProps(HintElement, {\n        onSelectOption: (data, hintNode, path) => {\n          console.log('data:', data, 'hintNode:', hintNode, 'path', path)\n          const { returnNode, others } = data\n          if (returnNode && others) {\n            // onOthers?.(others, returnNode?.valueFormat)\n          }\n        },\n        onMouseDown: (e, hintNode, path) => {\n        },\n        onClick: (e, hintNode, path) => {\n          onClickIO?.(e, hintNode)\n        },\n        onDoubleClick: (e, hintNode, path) => {\n          onDbClickIO?.(e, hintNode)\n        }\n      }),\n      [ELEMENT_OP]: withProps(OpElement, {}),\n      // [MARK_BOLD]: withProps(StyledLeaf, {\n      //   styles: {\n      //     root: {\n      //       color: 'green'\n      //     }\n      //   }\n      // }),\n      [MARK_ITALIC]: withProps(StyledLeaf, {\n        styles: {\n          root: {\n            color: 'red'\n          }\n        }\n      })\n    }))\n  }, [onClickIO, onDbClickIO])\n\n  /**\n   * update node values once the dataTable is updated \n   * */\n  const value = useStoreEditorValue()\n  const editorActions = usePlateActions()\n  const editor = useStoreEditorRef(useEventEditorId('focus'));\n\n  useEffect(() => {\n    console.group('Update rawData', value, editor)\n\n    if (editor) {\n      // update indep node\n      console.group('Update Indep node')\n      for (const [node, nodePath] of Editor.nodes(editor, { at: [0], match: isInDepHintNode, voids: true })) {\n        if (node.dataType === 'value' && node.rowIdx !== -1) {\n          const row = rawData[node.datasetId].find(row => row.id === node.rowId)\n          const newData = row?.data[node.attr]\n          debugLog('New Data', newData, 'rowIdx', node.rowIdx, 'attr', node.attr)\n          setHintNode(editor, { ...node, value: newData.toString() }, nodePath)\n        }\n      }\n      console.groupEnd()\n\n      // update dep node\n      console.group('Update Dep node')\n      for (const [node, nodePath] of Editor.nodes(editor, { at: [0], match: isDepHintNode, voids: true })) {\n        // re-evaluate\n        console.log('hintNode re-evaluate', node)\n        if (!node.deps) {\n          console.warn('Dep node has no deps', node)\n          continue\n        }\n        const datasetKey = node.deps.tokens.filter(t => t.hintPath)\n          .map(t => getHintNode(t, editor as any))\n          .find(h => h?.datasetId)?.datasetId\n        const dataTable = rawData[datasetKey]\n\n        const { returnNode, others } = reactiveUpdate(node.deps.tokens, node.deps.constituency, node as any, nodePath, dataTable, rawData, editor as any)\n        console.log('data-driven update returnNode and others', returnNode, others)\n        others && onOthers?.(others, returnNode?.valueFormat)\n      }\n      console.groupEnd()\n\n    }\n    // const newValue = value?.map(n => {\n    //   if (n.type === ELEMENT_PARAGRAPH) {\n    //     n = {\n    //       ...n,\n    //       children: n.children.map(child => {\n    //         if (isHintNode(child) && child.dataType === 'value' && child.rowIdx !== -1) {\n    //           console.log(child)\n    //           const row = rawData[child.datasetId].find(row => row.id === child.rowId)\n    //           const newData = row?.data[child.attr!]\n    //           debugLog('New Data', newData, 'rowIdx', child.rowIdx, 'attr', child.attr)\n\n    //           return {\n    //             ...child,\n    //             children: [{ text: newData.toString() }],\n    //             value: newData.toString()\n    //           }\n    //         }\n    //         return child\n    //       })\n    //     }\n    //   }\n    //   return n\n    // })\n\n    // if (newValue) {\n    //   editorActions.setValue(newValue)\n    //   // editor && Transforms.move(editor)\n    // }\n\n    console.groupEnd()\n  }, [rawData])\n\n  useImperativeHandle(ref, () => ({\n    updateHintNode: (payLoad) => {\n      console.log(payLoad)\n      console.log(value)\n      const newValue = value?.map(node => {\n        if (node.type === ELEMENT_PARAGRAPH) {\n          node = {\n            ...node,\n            children: node.children.map(child => {\n              if (isHintNode(child) && payLoad.some(p => p[0]['id'] === child['id'])) {\n                const target = payLoad.find(p => p[0]['id'] === child['id'])!\n                return {\n                  ...child,\n                  value: target[1],\n                  children: [{ text: target[1] }],\n                }\n              }\n              return child\n            })\n          }\n        }\n        return node\n      })\n\n      if (newValue) {\n        setImmediate(() => {\n          editorActions.setValue(newValue)\n          editor && Transforms.select(editor, [0, newValue[0].children.length - 1])\n        })\n      }\n    },\n    updateBarChartHintNode: (payLoad) => {\n      const newValue = value?.map(node => {\n        if (node.type === ELEMENT_PARAGRAPH) {\n          node = {\n            ...node,\n            children: node.children.map(child => {\n              if (isHintNode(child) && payLoad.some(p => p[0]['id'] === child['id'])) {\n                const target = payLoad.find(p => p[0]['id'] === child['id'])!\n                const newItem = target[1]\n                return {\n                  ...child,\n                  rowId: newItem.id,\n                  rowIdx: newItem.rowIdx,\n                  value: newItem.data[child.attr],\n                  children: [{ text: newItem.data[child.attr] }],\n                }\n              }\n              return child\n            })\n          }\n        }\n        return node\n      })\n\n      if (newValue) {\n        setImmediate(() => {\n          editorActions.setValue(newValue)\n          editor && Transforms.select(editor, [0, newValue[0].children.length - 1])\n        })\n      }\n    },\n    updateLinechartHintNode: (payLoad) => {\n      const newValue = value?.map(node => {\n        if (node.type === ELEMENT_PARAGRAPH) {\n          node = {\n            ...node,\n            children: node.children.map(child => {\n              if (isHintNode(child) && payLoad.some(p => p[0]['id'] === child['id'])) {\n                const target = payLoad.find(p => p[0]['id'] === child['id'])!\n                const v = target[1].toISOString().slice(0, 10).replaceAll('-', '/')\n                return {\n                  ...child,\n                  // rowId: \n                  value: v,\n                  children: [{ text: v }],\n                }\n              }\n              return child\n            })\n          }\n        }\n        return node\n      })\n\n      if (newValue) {\n        setImmediate(() => {\n          editorActions.setValue(newValue)\n          editor && Transforms.select(editor, [0, newValue[0].children.length - 1])\n        })\n      }\n    },\n    clearContent: () => {\n      editorActions.setValue(initialValuePlainText)\n    }\n  }))\n\n  return (\n    <div className={`word-processor`}>\n      <DatatableContext.Provider value={{ rawData }}>\n        <Plate\n          id={'Examples/Playground'}\n          plugins={pluginsMemo}\n          components={components}\n          options={options}\n          editableProps={editableProps}\n          initialValue={initialValuePlainText}\n        >\n          <HeadingToolbar>\n            <ToolbarButtonsBasicMarks />\n          </HeadingToolbar>\n\n          <HintSelect {...getHintSelectProps()} />\n        </Plate>\n\n      </DatatableContext.Provider>\n    </div>\n  );\n}))\nWordProcessor.displayName = 'WordProcessor'\nWordProcessor.whyDidYouRender = true\n\nexport type { ITaskNode, TaskRet, Others, HintData } from './autoHint'\nexport type { OpNode } from './operator'\nexport { isHintNode, headOf } from './autoHint'"],"sourceRoot":""}